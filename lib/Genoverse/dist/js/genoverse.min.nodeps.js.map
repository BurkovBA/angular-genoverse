{"version":3,"sources":["lib/Base.js","lib/rtree.js","lib/dalliance-lib.min.js","lib/jDataView.js","lib/jParser.js","lib/BWReader.js","lib/VCFReader.js","Genoverse.js","Track.js","Track/Controller.js","Track/Model.js","Track/View.js","Track/library/Static.js","Track/Controller/Stranded.js","Track/Model/Stranded.js","Track/library/Graph.js","Track/library/Graph/Line.js","Track/library/Graph/Bar.js","Track/Controller/Sequence.js","Track/Model/Sequence.js","Track/Model/Sequence/Fasta.js","Track/Model/Sequence/Ensembl.js","Track/View/Sequence.js","Track/View/Sequence/Variation.js","Track/Model/SequenceVariation.js","Track/Model/Gene.js","Track/Model/Gene/Ensembl.js","Track/View/Gene.js","Track/View/Gene/Ensembl.js","Track/Model/Transcript.js","Track/Model/Transcript/Ensembl.js","Track/View/Transcript.js","Track/View/Transcript/Ensembl.js","Track/Model/File.js","Track/Model/File/BAM.js","Track/Model/File/BED.js","Track/Model/File/GFF.js","Track/Model/File/VCF.js","Track/Model/File/WIG.js","Track/library/Chromosome.js","Track/library/dbSNP.js","Track/library/File.js","Track/library/File/BAM.js","Track/library/File/BED.js","Track/library/File/BIGBED.js","Track/library/File/BIGWIG.js","Track/library/File/GFF.js","Track/library/File/VCF.js","Track/library/File/WIG.js","Track/library/Gene.js","Track/library/HighlightRegion.js","Track/library/Legend.js","Track/library/Scaleline.js","Track/library/Scalebar.js","plugins/controlPanel.js","plugins/fileDrop.js","plugins/focusRegion.js","plugins/fullscreen.js","plugins/karyotype.js","plugins/resizer.js","plugins/tooltips.js","plugins/trackControls.js"],"names":["name","global","definition","module","exports","define","amd","this","Base","extend","_instance","_static","prototype","_prototyping","proto","call","base","constructor","klass","_constructing","apply","arguments","ancestor","forEach","implement","toString","valueOf","type","init","source","value","length","test","method","previous","returnValue","toSource","hidden","i","h","key","Object","version","object","block","context","undefined","String","e","f","window","self","RTree","t","n","r","s","o","u","a","require","Error","1","_dereq_","rectangle","bbox","ar","obj","leaf","x","y","w","len","Array","first","temp","min","concat","max","out","geoJSON","point","insertSubtree","geometry","coordinates","root","multiPointLineString","multiLineStringPolygon","multiPolygon","makeRec","geometryCollection","g","geos","geometries","push","expand","prelim","features","feature","that","isArray","slice","x1","y1","x2","y2","search","./rectangle","2","geojson","Rectangle","./geojson","./rtree","3","p","overlap","nx","ny","ax","ay","ax2","ay2","overlapRectangle","b","containsRectangle","expandRectangle","axw","bxw","ayh","byh","makeMBR","nodes","rect","squarifiedRatio","l","fill","lperi","larea","4","width","minWidth","maxWidth","isNaN","Math","floor","rootTree","id","flatten","tree","current","todo","done","pop","removeSubtree","ltree","hitStack","countStack","retArray","retObj","target","splice","currentDepth","searchSubtree","linearSplit","pickLinear","pickNext","highAreaDelta","highAreaNode","lowestGrowthGroup","areaA","areaB","newAreaA","changeNewAreaA","abs","newAreaB","changeNewAreaB","tempNode","t1","t2","lowestHighX","highestLowX","lowestHighY","highestLowY","returnNode","returnArray","node","bc","pbc","treeStack","bestChoiceArea","bestChoiceIndex","bestChoiceStack","oldLRatio","nw","nh","lratio","chooseLeafSubtree","ai","getTree","setTree","newTree","where","moreTree","remove","deleted","numberDeleted","removeArea","insert","toJSON","printing","JSON","stringify","fromJSON","json","rt","parse","C","A","was","B","c","hufts","Int32Array","Uint8Array","end","checkfn","mode","reset","index","table","left","blens","bb","tb","codes","D","check","write","read","bitb","bitk","last","inftree","E","d","set","T","subarray","BYTES_PER_ELEMENT","buffer","byteOffset","J","byteLength","inflateInit","next_in","next_in_index","avail_in","next_out","next_out_index","avail_out","inflate","msg","K","offset","G","L","M","minv","maxv","F","blob","z","url","start","opts","N","charCodeAt","O","ArrayBuffer","Float32Array","P","V","H","W","X","Y","Z","aa","ba","ca","istate","inflateEnd","inflateSync","inflateSetDictionary","inflateReset","total_in","total_out","nowrap","blocks","free","wbits","marker","need","adler","proc","_adler","adler32","set_dictionary","da","inflateSyncPoint","sync_point","R","k","inflate_flush","m","q","inflate_trees_bits","inflate_trees_dynamic","lbits","dbits","ltree_index","dtree","dtree_index","inflate_fast","tree_index","lit","get","dist","v","huft_build","hn","initWorkArea","webkitSlice","salted","fetch","FileReader","onloadend","result","readAsBinaryString","FileReaderSync","readAsArrayBuffer","navigator","userAgent","indexOf","fetchAsText","getURL","then","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","responseText","credentials","withCredentials","send","fail","console","log","salt","resolver","$","Deferred","resolve","attempt","truncatedLength","timeout","setTimeout","abort","overrideMimeType","responseType","clearTimeout","response","mozResponseArrayBuffer","blocksForRange","indices","U","sort","chrToIndex","indexChunks","chunks","bai","bind","readBamRecords","data","S","split","ea","segment","indexToChr","flag","pos","mq","light","seqLength","nextSegment","nextPos","fromCharCode","readName","cigar","seq","quals","dallianceLib","URLFetchable","BlobFetchable","makeBam","Q","substring","minBlockIndex","I","replace","inflateBuffer","jDataView","is","_littleEndian","wrapBuffer","_isArrayBuffer","j","_isPixelData","PixelData","CanvasPixelArray","_isDataView","DataView","_isNodeBuffer","TypeError","_offset","_bitOffset","_view","_checkBounds","_engineAction","_dataViewAction","_arrayBufferAction","_arrayAction","pow","lo","hi","NodeBuffer","TextEncoder","TextDecoder","document","createElement","getContext","createImageData","Int8","Int16","Int32","Uint8","Uint16","Uint32","Float32","Float64","from","Uint64","Number","fromNumber","Int64","create","compatibility","RangeError","_action","getBytes","_setBytes","_getBytes","reverse","setBytes","getString","decode","decodeURIComponent","escape","setString","encode","unescape","encodeURIComponent","getChar","setChar","tell","seek","skip","alignBy","_getFloat64","_getFloat32","_get64","getUint32","getInt64","getUint64","_getInt32","_getUint32","_getInt16","_getUint16","_getInt8","_getUint8","_getBitRangeData","bytes","wideValue","getSigned","getUnsigned","_setBinaryFloat","LN2","_setFloat32","_setFloat64","_set64","setUint32","setInt64","setUint64","_setUint32","_setUint16","_setUint8","setUnsigned","_setInt32","_setInt16","_setInt8","setSigned","unshift","jParser","view","structure","callee","_bitShift","ClonedObject","prop","inherit","toInt","val","Function","all","uint8","getUint8","uint16","getUint16","uint32","uint64","parseInt","int8","getInt8","int16","getInt16","int32","getInt32","float32","getFloat32","float64","getFloat64","char","string","array","results","position","old_position","err","error","if","predicate","fieldValue","bitSize","byteShift","output","BWReader","callback","BIG_WIG_MAGIC","BIG_WIG_MAGIC_BE","BIG_BED_MAGIC","BIG_BED_MAGIC_BE","CIRTREE_MAGIC","IDXTREE_MAGIC","BIG_WIG_TYPE_GRAPH","BIG_WIG_TYPE_VSTEP","BIG_WIG_TYPE_FSTEP","M1","RegExp","M2","M3","M4","bbi","fetchedData","getData","cb","fetched","filter","readChromTree","unzoomedDataOffset","chromTreeOffset","sa","Uint16Array","la","Uint32Array","bpTree","itemsPerBlock","keySize","valueSize","itemCount","read64Bit","chroms","lengths","nodeOffset","chrom","idx","children","readChromTreeLeaf","unzoomedIndexOffset","magic","Rheader","blockSize","nItems","chrIdxStart","baseStart","chrIdxEnd","baseEnd","endFileOffset","nItemsPerSlot","rootOffset","getValues","vals","chromid","query","fetchBlocks","b0","b1","getBlocks","totalSize","size","fb","blockData","ioffset","bi","uncompressBufSize","parser","WiggleParser","BEDParser","outstanding","fetchRTreeKids","level","maxNodeSize","treedata","traverseRTreeKids","isLeaf","dataOffset","child","getRTreeNode","overlaps","startChrom","startBase","endChrom","endBase","findOverlaps","map","traverseRTree","score","arr","Int16Array","fa","chromId","chr","blockStart","itemStep","itemSpan","blockType","height","bbRecord","ch","rest","join","header","reduction","indexOffset","numZoomLevels","fieldCount","definedFieldCount","asOffset","totalSummaryOffset","extHeaderOffset","compressed","summary","extHeader","zoomHeaders","reductionLevel","field_re","headerMatch","exec","as","declType","comment","fields","schema","tabi_fmt","string0","n_ref","format","col_seq","col_beg","col_end","meta","l_nm","names","chunk","cnk_beg","cnk_end","bin","n_chunk","chunkseq","n_bin","binseq","n_intv","intervseq","tabix","head","indexseq","bgzf_hd_fmt","id1","id2","cm","flg","mtime","xfl","os","xlen","subheader","si1","si2","slen","bsize","bgzfHd","subhead","_2p16","VCFReader","vcf","tbi","vcf_data","tbi_data","readTabix","bins2hash","hash","inflateRegion","tabix_buffer","bhash","getRecords","ref","beg","records","getChunks","vcfThis","loop","record","ebsz","inner_end","buffer2String","inner_start","rec","cnks","reg2bins","bin2Ranges","reduce","ranges","item","remove_duplicates","cbfn","nextBlockOffset","appendBuffers","inflateBlock","blockOffset","getBGZFHD","hdobj","inflated_block","hdSize","buf","bufferVec","tmp","resultBuffer","resultBB","objectsArray","usedObjects","so","binid","cnk","cnkseq","list","Genoverse","urlParamTemplate","longestLabel","defaultLength","defaultScrollDelta","tracks","highlights","plugins","dragAction","wheelAction","isStatic","saveable","saveKey","storageType","autoHideMessages","trackAutoHeight","hideEmptyTracks","genome","useHash","config","browser","supported","die","container","appendTo","addClass","eventNamespace","events","when","ready","loadGenome","loadPlugins","always","wrapFunctions","genomeName","ajax","origin","dataType","success","Genomes","loadPluginsTask","loadedPlugins","Plugins","initializePlugin","plugin","requires","deferred","toLowerCase","css","js","getCSS","noCSS","on","getScript","pluginsLoaded","addDomElements","addUserEventHandlers","tracksById","prev","legends","history","pushState","textWidth","measureText","labelWidth","labelContainer","outerWidth","paramRegex","urlCoords","getURLCoords","coords","chromosomeSize","canChangeChr","loadConfig","addTracks","setRange","addHighlights","defaultTracks","getItem","track","tracksByNamespace","getAllTrackTypes","savedConfig","setConfig","conf","_fromStorage","namespace","trackIds","saveConfig","Track","Legend","HighlightRegion","order","autoHeight","initialHeight","defaultHeight","setItem","resetConfig","unremovableHighlights","removeHighlights","removeItem","removeTracks","menus","sortable","items","handle","axis","helper","cursor","update","proxy","updateTrackOrder","ui","placeholder","visibility","html","hide","wrapper","selector","selectorControls","zoomInHighlight","zoomOutHighlight","clone","toggleClass","documentEvents","mousedown","hideMessages","which","mousewheel","delta","deltaX","deltaY","noWheelZoom","startDragScroll","move","stopDragScroll","mousewheelZoom","dblclick","getSelectorPosition","className","moveTo","cancelSelect","addHighlight","mouseup","mousemove","keydown","keyup","wheelTimeout","popState","onTracks","mvc","args","func","shift","disabled","_interface","scale","setWidth","controlPanel","superContainer","zoomDeltaTimeout","zoomTimeout","pageX","top","pageY","display","animate","complete","moveSelector","dragging","scrolling","dragOffset","dragStart","scrollDelta","updateURL","checkTrackHeights","startDragSelect","selectorStalled","selectorStart","removeClass","stopDragSelect","outerHeight","find","show","keepDragging","dragSelect","setDragAction","action","keepSelect","hasClass","toggleSelect","setWheelAction","closeMenus","shiftKey","round","minLeft","maxLeft","keepLength","center","setScale","scaledStart","labelBuffer","ceil","resetTrackHeights","zoomIn","zoomOut","addTrack","after","defaults","grep","insertAfter","getTrackNamespace","sortTracks","removeTrack","destructor","sorted","labels","containers","append","each","diff","next","location","getQueryString","match","getChromosomeSize","el","failed","menuTemplate","fadeOut","not","makeMenu","event","makeFeatureMenu","menu","contentEl","title","menuLabel","label","of","my","collision","add","content","loading","getMenu","isDeferred","linkData","columns","colspan","focus","highlight","menuEl","controller","populateMenu","promise","properties","color","trigger","fn","once","fnString","eventMap","makeEventMap","types","handler","makeFnString","compare","destroy","empty","off","src","attr","functionWrap","functions","debug","toUpperCase","isBrowser","mainObj","Controller","Model","rtn","currentConfig","_currentConfig","funcs","time","timeEnd","trackTypes","subtype","namespaces","margin","resizable","border","unsortable","fixedOrder","invert","legend","hideEmpty","stranded","Stranded","model","models","views","setInterface","setDefaults","setEvents","setLengthMap","setMVC","makeFirstImage","addChildTracks","addLegend","noop","configSettings","defaultConfig","controls","defaultAutoHeight","setDefaultConfig","_setCurrentConfig","_defaults","settings","getSettingsForLength","controllerSettings","trackSettings","hasOwnProperty","isEmptyObject","changed","setChrProps","threshold","newMVC","deepCopy","prevLengthMap","mvSettings","prevType","mv","lengthMap","checked","featureHeight","View","setHeight","forceShow","resetHeight","resizer","resize","_config","configChanged","featureFilters","getConfig","featureFilter","parentTrack","childTracks","setLabelHeight","now","legendType","shared","makeLegendTrack","legendTrack","changeChr","updateName","setName","enable","disable","objs","scrollBuffer","Infinity","clickTolerance","messages","deferreds","imgRange","scrollRange","resetImages","scrollContainer","resetImageRanges","scrollStart","right","labelName","minLabelHeight","imgContainer","messageContainer","click","collapsed","code","checkHeight","cookie","parent","getClickedFeatures","bounds","tolerance","sortFeatures","showMessage","additionalText","prependTo","fullVisibleHeight","hideMessage","siblings","style","showError","thresholdMessage","visibleFeatureHeight","autoResize","featurePositions","minHeight","bottom","labelTop","labelPositions","toggleExpander","arg","imgContainers","featureMargin","expander","enforceMinHeight","setLabelBuffer","formatLabel","setScaleSettings","makeImage","cls","params","labelHeight","tooLarge","div","bgImage","background","image","fadeIn","checkDataRange","findFeatures","render","renderBackground","images","makeImages","img","positionFeatures","scaleFeatures","featureCanvas","labelCanvas","featureContext","labelContext","font","textAlign","textBaseline","draw","toDataURL","class","canvas","drawBackground","Location","state","reject","allData","dataBuffer","xhrFields","urlParams","dataRequestLimit","featuresById","dataRangesByChr","featuresByChr","dataLoading","dataBufferStart","_url","dataRanges","parseURL","assembly","receiveData","resolveWith","bins","request","xhr","statusText","setDataRange","parseData","insertFeature","updateData","ID","hashCode","subFeatures","fake","filters","fontHeight","fontFamily","fontWeight","fontColor","minScaledWidth","widthCorrection","repeatLabels","bump","alwaysReposition","depth","subFeatureJoinStyle","subFeatureJoinLineWidth","scaleSettings","labelUnits","positionFeature","positioned","marginRight","marginTop","bumpFeature","strand","clash","visible","labelPosition","drawFeature","legendColor","setFeatureColor","drawSubFeatures","truncateForDrawing","fillStyle","fillRect","clear","clearRect","borderColor","strokeStyle","strokeRect","drawLabel","decorations","decorateFeature","joinColor","drawSubFeatureJoin","original","untruncated","currentY","spacing","labelColor","setLabelColor","fillText","shadeColor","percent","truncateSubFeatureJoinForDrawing","lineWidth","beginPath","lineTo","x3","y3","quadraticCurveTo","stroke","xMid","yScale","power","unit","Static","prepend","stringified","_makeImage","featureStrand","makeReverseImage","makeForwardImage","reverseTrack","orderReverse","forwardTrack","_deferredReverseTrackImages","_makeReverseTrackImage","removing","otherTrack","Graph","setYRange","yMinMaxFromFeatures","afterSetName","getYScale","prevHeight","prevRange","maxDP","prevRangeSize","rangeChange","parseFloat","toFixed","visibleFeatures","range","minY","maxY","before","typeWrapper","featureDataSets","datasets","setNames","sets","dataset","yAxisLabels","yRange","showZeroY","globalAlpha","axesSettings","axisColor","axisLabelColor","scaleLineColor","rescaleableY","rescaleable","isPlainObject","hadController","yAxisPlaceholder","yAxisCanvas","guidelinesCanvas","offsetContainer","drawAxes","afterSetMVC","wasDisabled","interval","axisContext","linesContext","axisWidth","Line","xRange","keys","clickedCoords","values","avg","Average","Min","Max","Value","zeroY","setCoords","coordPositions","binnedFeatures","lastBinSize","binStart","marginBottom","baseline","binSize","closePath","showPopups","Bar","yZero","_features","featuresByDataset","","setFeatures","10000","50000","Sequence","makeSeqFeatureMenu","featureMenus","sequence","charAt","chunkSize","chunksByChr","substr","Fasta","startByte","lineLength","getStartByte","endByte","headers","Range","rejectWith","startByteRequest","Ensembl","colors","default","labelColors","lowerCase","labelYOffset","widestLabel","drawSequence","bp","drawLabels","SequenceVariation","showLegend","alt_allele","reference","ref_allele","drawing","snv","highlightSNVs","outlineSNVs","positionX","positionY","highlightColor","setHighlightColor","seqModel","getSeqModel","seqData","Gene","feature_type","external_name","transcripts","logic_name","sense_intronic","sense_overlapping","processed_transcript","nonsense_mediated_decay","non_stop_decay","antisense","retained_intron","tec","non_coding","ambiguous_orf","disrupted_domain","3prime_overlapping_ncrna","biotype","Transcript","geneIds","seenGenes","ids","Parent","cdsStart","cdsEnd","exons","cds","exon","utr","utrHeight","File","isLocal","largeFile","indexFile","dataFile","reader","onload","readAsText","BAM","bamFile","baiFile","bam","makeBamError","fetchBamError","BED","subfeatures","subfeature","blockSizes","blockStarts","thinFeature","thinFeature1","thinFeature2","thickFeature","lines","thinHeight","thickHeight","filterNumber","originalFeature","thickStart","thickEnd","drawThick","scoreColor","blockCount","GFF","text","seqId","GTF","VCF","vcfFile","tbiFile","makeVCF","cachedVCF","maxQual","alleles","allele","WIG","step","span","line","Chromosome","acen","gneg","gpos","gpos100","gpos25","gpos33","gpos50","gpos66","gpos75","gvar","stalk","bands","menuTitle","drawnAcen","chrSize","bezierCurveTo","Position","dbSNP","info","colorMap","transcript_ablation","splice_acceptor_variant","splice_donor_variant","stop_gained","frameshift_variant","stop_lost","start_lost","transcript_amplification","inframe_insertion","inframe_deletion","missense_variant","protein_altering_variant","splice_region_variant","incomplete_terminal_codon_variant","stop_retained_variant","synonymous_variant","coding_sequence_variant","mature_miRNA_variant","5_prime_UTR_variant","3_prime_UTR_variant","non_coding_transcript_exon_variant","intron_variant","NMD_transcript_variant","non_coding_transcript_variant","upstream_gene_variant","downstream_gene_variant","TFBS_ablation","TFBS_amplification","TF_binding_site_variant","regulatory_region_ablation","regulatory_region_amplification","feature_elongation","regulatory_region_variant","feature_truncation","intergenic_variant","consequence_type","Consequence","Alleles","populationGenotypes","population_genotypes","population","frequencies","frequency","count","Genotype","genotype","5000","indexExt","BIGBED","bigbedFile","bwReader","BB","BIGWIG","bigwigFile","BW","CHROM","POS","REF","ALT","QUAL","FILTER","INFO","highlightRef","1000","heat","red","green","Source","Biotype","2000000","100000","colorIndex","removable","seen","setTracks","textColor","xPos","yPos","xScale","xOffest","xOffset","lockToTrack","afterAddTracks afterRemoveTracks","afterRemoveTracks","afterUpdateTrackOrder","updateOrder","afterPositionFeatures","afterResize","userResize","afterCheckHeight","Scaleline","scaleline","drawnScale","text2","width1","width2","Scalebar","minPixPerMajor","majorGuideLine","minorGuideLine","parents","divisions","divisor","majorUnit","fromDigit","toDigit","major","minorUnit","flip","lastLabel","opacity","guideLines","buttons","icon","mousehold","beforeInit","tracksLibrary","panel","control","buttonSet","button","keyCode","afterInit","tracksButton","Currently enabled tracks:","<div class=\"gv-current-tracks\"></div>","marginLeft","str","tags","getTrackTags","availableTracks","currentTracks","reload","listTracks","afterAddDomElements","fileDrop","dataTransfer","originalEvent","fileDropDiv","totalDropOverlay","dragleave","preventDefault","stopPropagation","files","file","parts","gz","ext","focusRegion","fullscreen","eventName","elemName","requestName","cancelName","onmsfullscreenchange","body","mozRequestFullScreen","webkitRequestFullscreen","onfullscreenchange","fullscreenVars","enterEvent","preFullscreenWidth","innerWidth","exitEvent","eventListener","removeEventListener","addEventListener","karyotype","createKaryotype","chromosome","insertBefore","hoverFeature","hideTooltip","tipsy","$tip","mouseout","viewPoint","relatedTarget","updatePosition","afterAddTracks","updateLocation","karyotypeLabel","draggable","containment","stop","handles","element","recreateKaryotype","afterSetRange","afterSetWidth","afterMoveTo","originalPosition","tooltips","toggleTooltips","updateTooltips","gravity","fade","fallback","removeData","trackControls","defaultControls","at","toggleState","toggle","controlsContainer","options","change","toggler","afterResetHeight","heightToggler"],"mappings":"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","file":"genoverse.min.nodeps.js","sourcesContent":["/*\n  Based on Base.js 1.1a (c) 2006-2010, Dean Edwards\n  Updated to pass JSHint and converted into a module by Kenneth Powers\n  License: http://www.opensource.org/licenses/mit-license.php\n*/\n/*global define:true module:true*/\n/*jshint eqeqeq:true*/\n(function (name, global, definition) {\n  if (typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof define !== 'undefined' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    global[name] = definition();\n  }\n})('Base', this, function () {\n  // Base Object\n  var Base = function () {};\n\n  // Implementation\n  Base.extend = function (_instance, _static) { // subclass\n    var extend = Base.prototype.extend;\n    // build the prototype\n    Base._prototyping = true;\n    var proto = new this();\n    extend.call(proto, _instance);\n    proto.base = function () {\n      // call this method from any other method to invoke that method's ancestor\n    };\n    delete Base._prototyping;\n    // create the wrapper for the constructor function\n    //var constructor = proto.constructor.valueOf(); //-dean\n    var constructor = proto.constructor;\n    var klass = proto.constructor = function () {\n        if (!Base._prototyping) {\n          if (this._constructing || this.constructor === klass) { // instantiation\n            this._constructing = true;\n            constructor.apply(this, arguments);\n            delete this._constructing;\n          } else if (arguments[0] !== null) { // casting\n            return (arguments[0].extend || extend).call(arguments[0], proto);\n          }\n        }\n      };\n    // build the class interface\n    klass.ancestor = this;\n    klass.extend = this.extend;\n    klass.forEach = this.forEach;\n    klass.implement = this.implement;\n    klass.prototype = proto;\n    klass.toString = this.toString;\n    klass.valueOf = function (type) {\n      return (type === 'object') ? klass : constructor.valueOf();\n    };\n    extend.call(klass, _static);\n    // class initialization\n    if (typeof klass.init === 'function') klass.init();\n    return klass;\n  };\n\n  Base.prototype = {\n    extend: function (source, value) {\n      if (arguments.length > 1) { // extending with a name/value pair\n        var ancestor = this[source];\n        if (ancestor && (typeof value === 'function') && // overriding a method?\n        // the valueOf() comparison is to avoid circular references\n        (!ancestor.valueOf || ancestor.valueOf() !== value.valueOf()) && /\\bbase\\b/.test(value)) {\n          // get the underlying method\n          var method = value.valueOf();\n          // override\n          value = function () {\n            var previous = this.base || Base.prototype.base;\n            this.base = ancestor;\n            var returnValue = method.apply(this, arguments);\n            this.base = previous;\n            return returnValue;\n          };\n          // point to the underlying method\n          value.valueOf = function (type) {\n            return (type === 'object') ? value : method;\n          };\n          value.toString = Base.toString;\n        }\n        this[source] = value;\n      } else if (source) { // extending with an object literal\n        var extend = Base.prototype.extend;\n        // if this object has a customized extend method then use it\n        if (!Base._prototyping && typeof this !== 'function') {\n          extend = this.extend || extend;\n        }\n        var proto = {\n          toSource: null\n        };\n        // do the \"toString\" and other methods manually\n        var hidden = ['constructor', 'toString', 'valueOf'];\n        // if we are prototyping then include the constructor\n        for (var i = Base._prototyping ? 0 : 1; i < hidden.length; i++) {\n          var h = hidden[i];\n          if (source[h] !== proto[h])\n            extend.call(this, h, source[h]);\n        }\n        // copy each of the source object's properties to this object\n        for (var key in source) {\n          if (!proto[key]) extend.call(this, key, source[key]);\n        }\n      }\n      return this;\n    }\n  };\n\n  // initialize\n  Base = Base.extend({\n    constructor: function () {\n      this.extend(arguments[0]);\n    }\n  }, {\n    ancestor: Object,\n    version: '1.1',\n    forEach: function (object, block, context) {\n      for (var key in object) {\n        if (this.prototype[key] === undefined) {\n          block.call(context, object[key], key, object);\n        }\n      }\n    },\n    implement: function () {\n      for (var i = 0; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'function') {\n          // if it's a function, call it\n          arguments[i](this.prototype);\n        } else {\n          // add the interface using the extend method\n          this.prototype.extend(arguments[i]);\n        }\n      }\n      return this;\n    },\n    toString: function () {\n      return String(this.valueOf());\n    }\n  });\n\n  // Return Base implementation\n  return Base;\n});\n","!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.RTree=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){\"use strict\";var rectangle=_dereq_(\"./rectangle\");var bbox=function(ar,obj){if(obj&&obj.bbox){return{leaf:obj,x:obj.bbox[0],y:obj.bbox[1],w:obj.bbox[2]-obj.bbox[0],h:obj.bbox[3]-obj.bbox[1]}}var len=ar.length;var i=0;var a=new Array(len);while(i<len){a[i]=[ar[i][0],ar[i][1]];i++}var first=a[0];len=a.length;i=1;var temp={min:[].concat(first),max:[].concat(first)};while(i<len){if(a[i][0]<temp.min[0]){temp.min[0]=a[i][0]}else if(a[i][0]>temp.max[0]){temp.max[0]=a[i][0]}if(a[i][1]<temp.min[1]){temp.min[1]=a[i][1]}else if(a[i][1]>temp.max[1]){temp.max[1]=a[i][1]}i++}var out={x:temp.min[0],y:temp.min[1],w:temp.max[0]-temp.min[0],h:temp.max[1]-temp.min[1]};if(obj){out.leaf=obj}return out};var geoJSON={};geoJSON.point=function(obj,self){return self.insertSubtree({x:obj.geometry.coordinates[0],y:obj.geometry.coordinates[1],w:0,h:0,leaf:obj},self.root)};geoJSON.multiPointLineString=function(obj,self){return self.insertSubtree(bbox(obj.geometry.coordinates,obj),self.root)};geoJSON.multiLineStringPolygon=function(obj,self){return self.insertSubtree(bbox(Array.prototype.concat.apply([],obj.geometry.coordinates),obj),self.root)};geoJSON.multiPolygon=function(obj,self){return self.insertSubtree(bbox(Array.prototype.concat.apply([],Array.prototype.concat.apply([],obj.geometry.coordinates)),obj),self.root)};geoJSON.makeRec=function(obj){return rectangle(obj.x,obj.y,obj.w,obj.h)};geoJSON.geometryCollection=function(obj,self){if(obj.bbox){return self.insertSubtree({leaf:obj,x:obj.bbox[0],y:obj.bbox[1],w:obj.bbox[2]-obj.bbox[0],h:obj.bbox[3]-obj.bbox[1]},self.root)}var geos=obj.geometry.geometries;var i=0;var len=geos.length;var temp=[];var g;while(i<len){g=geos[i];switch(g.type){case\"Point\":temp.push(geoJSON.makeRec({x:g.coordinates[0],y:g.coordinates[1],w:0,h:0}));break;case\"MultiPoint\":temp.push(geoJSON.makeRec(bbox(g.coordinates)));break;case\"LineString\":temp.push(geoJSON.makeRec(bbox(g.coordinates)));break;case\"MultiLineString\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],g.coordinates))));break;case\"Polygon\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],g.coordinates))));break;case\"MultiPolygon\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],Array.prototype.concat.apply([],g.coordinates)))));break;case\"GeometryCollection\":geos=geos.concat(g.geometries);len=geos.length;break}i++}var first=temp[0];i=1;len=temp.length;while(i<len){first.expand(temp[i]);i++}return self.insertSubtree({leaf:obj,x:first.x(),y:first.y(),h:first.h(),w:first.w()},self.root)};exports.geoJSON=function(prelim){var that=this;var features,feature;if(Array.isArray(prelim)){features=prelim.slice()}else if(prelim.features&&Array.isArray(prelim.features)){features=prelim.features.slice()}else if(prelim instanceof Object){features=[prelim]}else{throw\"this isn't what we're looking for\"}var len=features.length;var i=0;while(i<len){feature=features[i];if(feature.type===\"Feature\"){switch(feature.geometry.type){case\"Point\":geoJSON.point(feature,that);break;case\"MultiPoint\":geoJSON.multiPointLineString(feature,that);break;case\"LineString\":geoJSON.multiPointLineString(feature,that);break;case\"MultiLineString\":geoJSON.multiLineStringPolygon(feature,that);break;case\"Polygon\":geoJSON.multiLineStringPolygon(feature,that);break;case\"MultiPolygon\":geoJSON.multiPolygon(feature,that);break;case\"GeometryCollection\":geoJSON.geometryCollection(feature,that);break}}i++}};exports.bbox=function(){var x1,y1,x2,y2;switch(arguments.length){case 1:x1=arguments[0][0][0];y1=arguments[0][0][1];x2=arguments[0][1][0];y2=arguments[0][1][1];break;case 2:x1=arguments[0][0];y1=arguments[0][1];x2=arguments[1][0];y2=arguments[1][1];break;case 4:x1=arguments[0];y1=arguments[1];x2=arguments[2];y2=arguments[3];break}return this.search({x:x1,y:y1,w:x2-x1,h:y2-y1})}},{\"./rectangle\":3}],2:[function(_dereq_,module,exports){\"use strict\";var RTree=_dereq_(\"./rtree\");var geojson=_dereq_(\"./geojson\");RTree.prototype.bbox=geojson.bbox;RTree.prototype.geoJSON=geojson.geoJSON;RTree.Rectangle=_dereq_(\"./rectangle\");module.exports=RTree},{\"./geojson\":1,\"./rectangle\":3,\"./rtree\":4}],3:[function(_dereq_,module,exports){\"use strict\";function Rectangle(x,y,w,h){if(!(this instanceof Rectangle)){return new Rectangle(x,y,w,h)}var x2,y2,p;if(x.x){w=x.w;h=x.h;y=x.y;if(x.w!==0&&!x.w&&x.x2){w=x.x2-x.x;h=x.y2-x.y}else{w=x.w;h=x.h}x=x.x;x2=x+w;y2=y+h;p=h+w?false:true}else{x2=x+w;y2=y+h;p=h+w?false:true}this.x1=this.x=function(){return x};this.y1=this.y=function(){return y};this.x2=function(){return x2};this.y2=function(){return y2};this.w=function(){return w};this.h=function(){return h};this.p=function(){return p};this.overlap=function(a){if(p||a.p()){return x<=a.x2()&&x2>=a.x()&&y<=a.y2()&&y2>=a.y()}return x<a.x2()&&x2>a.x()&&y<a.y2()&&y2>a.y()};this.expand=function(a){var nx,ny;var ax=a.x();var ay=a.y();var ax2=a.x2();var ay2=a.y2();if(x>ax){nx=ax}else{nx=x}if(y>ay){ny=ay}else{ny=y}if(x2>ax2){w=x2-nx}else{w=ax2-nx}if(y2>ay2){h=y2-ny}else{h=ay2-ny}x=nx;y=ny;return this}}Rectangle.overlapRectangle=function(a,b){if(a.h===0&&a.w===0||b.h===0&&b.w===0){return a.x<=b.x+b.w&&a.x+a.w>=b.x&&a.y<=b.y+b.h&&a.y+a.h>=b.y}else{return a.x<b.x+b.w&&a.x+a.w>b.x&&a.y<b.y+b.h&&a.y+a.h>b.y}};Rectangle.containsRectangle=function(a,b){return a.x+a.w<=b.x+b.w&&a.x>=b.x&&a.y+a.h<=b.y+b.h&&a.y>=b.y};Rectangle.expandRectangle=function(a,b){var nx,ny;var axw=a.x+a.w;var bxw=b.x+b.w;var ayh=a.y+a.h;var byh=b.y+b.h;if(a.x>b.x){nx=b.x}else{nx=a.x}if(a.y>b.y){ny=b.y}else{ny=a.y}if(axw>bxw){a.w=axw-nx}else{a.w=bxw-nx}if(ayh>byh){a.h=ayh-ny}else{a.h=byh-ny}a.x=nx;a.y=ny;return a};Rectangle.makeMBR=function(nodes,rect){if(!nodes.length){return{x:0,y:0,w:0,h:0}}rect=rect||{};rect.x=nodes[0].x;rect.y=nodes[0].y;rect.w=nodes[0].w;rect.h=nodes[0].h;for(var i=1,len=nodes.length;i<len;i++){Rectangle.expandRectangle(rect,nodes[i])}return rect};Rectangle.squarifiedRatio=function(l,w,fill){var lperi=(l+w)/2;var larea=l*w;var lgeo=larea/(lperi*lperi);return larea*fill/lgeo};module.exports=Rectangle},{}],4:[function(_dereq_,module,exports){\"use strict\";var rectangle=_dereq_(\"./rectangle\");function RTree(width){if(!(this instanceof RTree)){return new RTree(width)}var minWidth=3;var maxWidth=6;if(!isNaN(width)){minWidth=Math.floor(width/2);maxWidth=width}var rootTree={x:0,y:0,w:0,h:0,id:\"root\",nodes:[]};this.root=rootTree;var flatten=function(tree){var todo=tree.slice();var done=[];var current;while(todo.length){current=todo.pop();if(current.nodes){todo=todo.concat(current.nodes)}else if(current.leaf){done.push(current)}}return done};var removeSubtree=function(rect,obj,root){var hitStack=[];var countStack=[];var retArray=[];var currentDepth=1;var tree,i,ltree;if(!rect||!rectangle.overlapRectangle(rect,root)){return retArray}var retObj={x:rect.x,y:rect.y,w:rect.w,h:rect.h,target:obj};countStack.push(root.nodes.length);hitStack.push(root);while(hitStack.length>0){tree=hitStack.pop();i=countStack.pop()-1;if(\"target\"in retObj){while(i>=0){ltree=tree.nodes[i];if(rectangle.overlapRectangle(retObj,ltree)){if(retObj.target&&\"leaf\"in ltree&&ltree.leaf===retObj.target||!retObj.target&&(\"leaf\"in ltree||rectangle.containsRectangle(ltree,retObj))){if(\"nodes\"in ltree){retArray=flatten(tree.nodes.splice(i,1))}else{retArray=tree.nodes.splice(i,1)}rectangle.makeMBR(tree.nodes,tree);delete retObj.target;break}else if(\"nodes\"in ltree){currentDepth++;countStack.push(i);hitStack.push(tree);tree=ltree;i=ltree.nodes.length}}i--}}else if(\"nodes\"in retObj){tree.nodes.splice(i+1,1);if(tree.nodes.length>0){rectangle.makeMBR(tree.nodes,tree)}for(var t=0;t<retObj.nodes.length;t++){insertSubtree(retObj.nodes[t],tree)}retObj.nodes=[];if(hitStack.length===0&&tree.nodes.length<=1){retObj.nodes=searchSubtree(tree,true,retObj.nodes,tree);tree.nodes=[];hitStack.push(tree);countStack.push(1)}else if(hitStack.length>0&&tree.nodes.length<minWidth){retObj.nodes=searchSubtree(tree,true,retObj.nodes,tree);tree.nodes=[]}else{delete retObj.nodes}}else{rectangle.makeMBR(tree.nodes,tree)}currentDepth-=1}return retArray};var chooseLeafSubtree=function(rect,root){var bestChoiceIndex=-1;var bestChoiceStack=[];var bestChoiceArea;var first=true;bestChoiceStack.push(root);var nodes=root.nodes;while(first||bestChoiceIndex!==-1){if(first){first=false}else{bestChoiceStack.push(nodes[bestChoiceIndex]);nodes=nodes[bestChoiceIndex].nodes;bestChoiceIndex=-1}for(var i=nodes.length-1;i>=0;i--){var ltree=nodes[i];if(\"leaf\"in ltree){bestChoiceIndex=-1;break}var oldLRatio=rectangle.squarifiedRatio(ltree.w,ltree.h,ltree.nodes.length+1);var nw=Math.max(ltree.x+ltree.w,rect.x+rect.w)-Math.min(ltree.x,rect.x);var nh=Math.max(ltree.y+ltree.h,rect.y+rect.h)-Math.min(ltree.y,rect.y);var lratio=rectangle.squarifiedRatio(nw,nh,ltree.nodes.length+2);if(bestChoiceIndex<0||Math.abs(lratio-oldLRatio)<bestChoiceArea){bestChoiceArea=Math.abs(lratio-oldLRatio);bestChoiceIndex=i}}}return bestChoiceStack};var linearSplit=function(nodes){var n=pickLinear(nodes);while(nodes.length>0){pickNext(nodes,n[0],n[1])}return n};var pickNext=function(nodes,a,b){var areaA=rectangle.squarifiedRatio(a.w,a.h,a.nodes.length+1);var areaB=rectangle.squarifiedRatio(b.w,b.h,b.nodes.length+1);var highAreaDelta;var highAreaNode;var lowestGrowthGroup;for(var i=nodes.length-1;i>=0;i--){var l=nodes[i];var newAreaA={};newAreaA.x=Math.min(a.x,l.x);newAreaA.y=Math.min(a.y,l.y);newAreaA.w=Math.max(a.x+a.w,l.x+l.w)-newAreaA.x;newAreaA.h=Math.max(a.y+a.h,l.y+l.h)-newAreaA.y;var changeNewAreaA=Math.abs(rectangle.squarifiedRatio(newAreaA.w,newAreaA.h,a.nodes.length+2)-areaA);var newAreaB={};newAreaB.x=Math.min(b.x,l.x);newAreaB.y=Math.min(b.y,l.y);newAreaB.w=Math.max(b.x+b.w,l.x+l.w)-newAreaB.x;newAreaB.h=Math.max(b.y+b.h,l.y+l.h)-newAreaB.y;var changeNewAreaB=Math.abs(rectangle.squarifiedRatio(newAreaB.w,newAreaB.h,b.nodes.length+2)-areaB);if(!highAreaNode||!highAreaDelta||Math.abs(changeNewAreaB-changeNewAreaA)<highAreaDelta){highAreaNode=i;highAreaDelta=Math.abs(changeNewAreaB-changeNewAreaA);lowestGrowthGroup=changeNewAreaB<changeNewAreaA?b:a}}var tempNode=nodes.splice(highAreaNode,1)[0];if(a.nodes.length+nodes.length+1<=minWidth){a.nodes.push(tempNode);rectangle.expandRectangle(a,tempNode)}else if(b.nodes.length+nodes.length+1<=minWidth){b.nodes.push(tempNode);rectangle.expandRectangle(b,tempNode)}else{lowestGrowthGroup.nodes.push(tempNode);rectangle.expandRectangle(lowestGrowthGroup,tempNode)}};var pickLinear=function(nodes){var lowestHighX=nodes.length-1;var highestLowX=0;var lowestHighY=nodes.length-1;var highestLowY=0;var t1,t2;for(var i=nodes.length-2;i>=0;i--){var l=nodes[i];if(l.x>nodes[highestLowX].x){highestLowX=i}else if(l.x+l.w<nodes[lowestHighX].x+nodes[lowestHighX].w){lowestHighX=i}if(l.y>nodes[highestLowY].y){highestLowY=i}else if(l.y+l.h<nodes[lowestHighY].y+nodes[lowestHighY].h){lowestHighY=i}}var dx=Math.abs(nodes[lowestHighX].x+nodes[lowestHighX].w-nodes[highestLowX].x);var dy=Math.abs(nodes[lowestHighY].y+nodes[lowestHighY].h-nodes[highestLowY].y);if(dx>dy){if(lowestHighX>highestLowX){t1=nodes.splice(lowestHighX,1)[0];t2=nodes.splice(highestLowX,1)[0]}else{t2=nodes.splice(highestLowX,1)[0];t1=nodes.splice(lowestHighX,1)[0]}}else{if(lowestHighY>highestLowY){t1=nodes.splice(lowestHighY,1)[0];t2=nodes.splice(highestLowY,1)[0]}else{t2=nodes.splice(highestLowY,1)[0];t1=nodes.splice(lowestHighY,1)[0]}}return[{x:t1.x,y:t1.y,w:t1.w,h:t1.h,nodes:[t1]},{x:t2.x,y:t2.y,w:t2.w,h:t2.h,nodes:[t2]}]};var attachData=function(node,moreTree){node.nodes=moreTree.nodes;node.x=moreTree.x;node.y=moreTree.y;node.w=moreTree.w;node.h=moreTree.h;return node};var searchSubtree=function(rect,returnNode,returnArray,root){var hitStack=[];if(!rectangle.overlapRectangle(rect,root)){return returnArray}hitStack.push(root.nodes);while(hitStack.length>0){var nodes=hitStack.pop();for(var i=nodes.length-1;i>=0;i--){var ltree=nodes[i];if(rectangle.overlapRectangle(rect,ltree)){if(\"nodes\"in ltree){hitStack.push(ltree.nodes)}else if(\"leaf\"in ltree){if(!returnNode){returnArray.push(ltree.leaf)}else{returnArray.push(ltree)}}}}}return returnArray};var insertSubtree=function(node,root){var bc;if(root.nodes.length===0){root.x=node.x;root.y=node.y;root.w=node.w;root.h=node.h;root.nodes.push(node);return}var treeStack=chooseLeafSubtree(node,root);var retObj=node;var pbc;while(treeStack.length>0){if(bc&&\"nodes\"in bc&&bc.nodes.length===0){pbc=bc;bc=treeStack.pop();for(var t=0;t<bc.nodes.length;t++){if(bc.nodes[t]===pbc||bc.nodes[t].nodes.length===0){bc.nodes.splice(t,1);break}}}else{bc=treeStack.pop()}if(\"leaf\"in retObj||\"nodes\"in retObj||Array.isArray(retObj)){if(Array.isArray(retObj)){for(var ai=0;ai<retObj.length;ai++){rectangle.expandRectangle(bc,retObj[ai])}bc.nodes=bc.nodes.concat(retObj)}else{rectangle.expandRectangle(bc,retObj);bc.nodes.push(retObj)}if(bc.nodes.length<=maxWidth){retObj={x:bc.x,y:bc.y,w:bc.w,h:bc.h}}else{var a=linearSplit(bc.nodes);retObj=a;if(treeStack.length<1){bc.nodes.push(a[0]);treeStack.push(bc);retObj=a[1]}}}else{rectangle.expandRectangle(bc,retObj);retObj={x:bc.x,y:bc.y,w:bc.w,h:bc.h}}}};this.insertSubtree=insertSubtree;this.getTree=function(){return rootTree};this.setTree=function(newTree,where){if(!where){where=rootTree}return attachData(where,newTree)};this.search=function(rect,returnNode,returnArray){returnArray=returnArray||[];return searchSubtree(rect,returnNode,returnArray,rootTree)};var removeArea=function(rect){var numberDeleted=1,retArray=[],deleted;while(numberDeleted>0){deleted=removeSubtree(rect,false,rootTree);numberDeleted=deleted.length;retArray=retArray.concat(deleted)}return retArray};var removeObj=function(rect,obj){var retArray=removeSubtree(rect,obj,rootTree);return retArray};this.remove=function(rect,obj){if(!obj||typeof obj===\"function\"){return removeArea(rect,obj)}else{return removeObj(rect,obj)}};this.insert=function(rect,obj){var retArray=insertSubtree({x:rect.x,y:rect.y,w:rect.w,h:rect.h,leaf:obj},rootTree);return retArray}}RTree.prototype.toJSON=function(printing){return JSON.stringify(this.root,false,printing)};RTree.fromJSON=function(json){var rt=new RTree;rt.setTree(JSON.parse(json));return rt};module.exports=RTree;if(typeof Array.isArray!==\"function\"){Array.isArray=function(a){return typeof a===\"object\"&&{}.toString.call(a)===\"[object Array]\"}}},{\"./rectangle\":3}]},{},[2])(2)});","(function(){function C(){}function A(){this.was=[0]}function B(a,b,c){this.hufts=new Int32Array(4320);this.window=new Uint8Array(c);this.end=c;this.checkfn=b;this.mode=0;this.reset(a,null);this.index=this.table=this.left=0;this.blens=null;this.bb=new Int32Array(1);this.tb=new Int32Array(1);this.codes=new D;this.check=this.write=this.read=this.bitb=this.bitk=this.last=0;this.inftree=new E}function D(){}function E(){}function y(a,b,c,d,h){if(0!=h){if(!a)throw\"Undef src\";if(!c)throw\"Undef dest\";if(0==\nb&&h==a.length)c.set(a,d);else if(T)a=a.subarray(b,b+h),c.set(a,d);else if(1==a.BYTES_PER_ELEMENT&&100<h)a=new Uint8Array(a.buffer,a.byteOffset+b,h),c.set(a,d);else for(var f=0;f<h;++f)c[d+f]=a[b+f]}}function J(a,b,c,d){a=b?c?new Uint8Array(a,b,c):new Uint8Array(a,b,a.byteLength-b):new Uint8Array(a);c=new C;c.inflateInit(15,!0);c.next_in=a;c.next_in_index=0;c.avail_in=a.length;a=[];for(var h=0;;){var f=new Uint8Array(32E3);c.next_out=f;c.next_out_index=0;c.avail_out=f.length;var g=c.inflate(0);if(0!=\ng&&1!=g&&-5!=g)throw c.msg;if(0!=c.avail_out){var e=new Uint8Array(f.length-c.avail_out);y(f,0,e,0,f.length-c.avail_out);f=e}a.push(f);h+=f.length;if(1==g||-5==g)break}d&&(d[0]=(b||0)+c.next_in_index);if(1==a.length)return a[0].buffer;b=new Uint8Array(h);for(c=d=0;c<a.length;++c)h=a[c],y(h,0,b,d,h.length),d+=h.length;return b.buffer}function K(a,b){this.block=a;this.offset=b}function G(a,b,c){var d=4294967296*(a[b+6]&255)+16777216*(a[b+5]&255)+65536*(a[b+4]&255)+256*(a[b+3]&255)+(a[b+2]&255);a=a[b+\n1]<<8|a[b];return 0!=d||0!=a||c?new K(d,a):null}function L(a,b){b=Math.min(b||1,a.byteLength-50);for(var c=[],d=[0],h=0;d[0]<b;){var f=new Uint8Array(a,d[0],12),f=f[11]<<8|f[10],f=J(a,12+f+d[0],Math.min(65536,a.byteLength-12-f-d[0]),d);d[0]+=8;h+=f.byteLength;c.push(f)}if(1==c.length)return c[0];d=new Uint8Array(h);for(f=h=0;f<c.length;++f){var g=new Uint8Array(c[f]);y(g,0,d,h,g.length);h+=g.length}return d.buffer}function M(a,b){this.minv=a;this.maxv=b}function U(a,b){var c,d=[];--b;d.push(0);for(c=\n1+(a>>26);c<=1+(b>>26);++c)d.push(c);for(c=9+(a>>23);c<=9+(b>>23);++c)d.push(c);for(c=73+(a>>20);c<=73+(b>>20);++c)d.push(c);for(c=585+(a>>17);c<=585+(b>>17);++c)d.push(c);for(c=4681+(a>>14);c<=4681+(b>>14);++c)d.push(c);return d}function F(a){this.blob=a}function z(a,b,c,d){d||(\"object\"===typeof b?(d=b,b=void 0):d={});this.url=a;this.start=b||0;c&&(this.end=c);this.opts=d}function N(a){if(!a)return null;for(var b=new Uint8Array(a.length),c=0;c<b.length;++c)b[c]=a.charCodeAt(c);return b.buffer}function O(a,\nb){var c=new ArrayBuffer(8),d=new Uint8Array(c),c=new Float32Array(c);d[0]=a[b];d[1]=a[b+1];d[2]=a[b+2];d[3]=a[b+3];return c[0]}function t(a,b){return a[b+3]<<24|a[b+2]<<16|a[b+1]<<8|a[b]}function P(a,b){return a[b+1]<<8|a[b]}function V(a,b){return a[b]}function H(){}function Q(a,b,c,d,h){function f(a){if(!a)return d(null,\"Couldn't access BAM\");a=L(a,a.byteLength);a=new Uint8Array(a);var b=t(a,0);if(21840194!=b)return d(null,\"Not a BAM file, magic=0x\"+b.toString(16));for(var c=t(a,4),e=\"\",b=0;b<c;++b)e+=\nString.fromCharCode(a[b+8]);e=t(a,c+8);c+=12;g.chrToIndex={};g.indexToChr=[];for(b=0;b<e;++b){for(var f=t(a,c),h=\"\",k=0;k<f-1;++k)h+=String.fromCharCode(a[c+4+k]);t(a,c+f+4);g.chrToIndex[h]=b;0==h.indexOf(\"chr\")?g.chrToIndex[h.substring(3)]=b:g.chrToIndex[\"chr\"+h]=b;g.indexToChr.push(h);c=c+8+f}if(g.indices)return d(g)}var g=new H;g.data=a;g.bai=b;g.indexChunks=c;var e=g.indexChunks?g.indexChunks.minBlockIndex:1E9;if(g.indexChunks){b=g.indexChunks.chunks;g.indices=[];for(var k=0;k<b.length;k++)g.indices[k]=\nnull;g.data.slice(0,e).fetch(f)}else g.bai.fetch(function(b){var k,q,n;if(b){var l=new Uint8Array(b),u=t(l,0);if(21578050!=u)b=d(null,\"Not a BAI file, magic=0x\"+u.toString(16));else{u=t(l,4);g.indices=[];for(var s=8,w=0;w<u;++w){var I=s;k=l;var r=n=I;q=t(k,r);for(var r=r+4,v=0;v<q;++v){t(k,r);var x=t(k,r+4),r=r+(8+16*x)}for(var v=t(k,r),r=r+4,x=1E9,y=r,A=0;A<v;++A){var z=G(k,y),y=y+8;if(z){k=z.block;0<z.offset&&(k+=65536);k<x&&(x=k);break}}r+=8*v;k=x;n=r-n;s+=n;e=Math.min(k,e);0<q&&(g.indices[w]=\nnew Uint8Array(b,I,s-I))}b=!0}}else b=\"Couldn't access BAI\";!0!==b?g.bai.url&&\"undefined\"===typeof h?(g.bai.url=g.data.url.replace(/.bam$/,\".bai\"),Q(a,g.bai,c,d,!0)):d(null,b):g.data.slice(0,e).fetch(f)})}function W(){}var x=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],X=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,\n0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,\n138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,\n80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,\n23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,\n0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,\n205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,\n0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,\n7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],Y=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],Z=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,\n115,131,163,195,227,258,0,0],aa=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],ba=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];C.prototype.inflateInit=function(a,b){a||(a=15);b&&(b=!1);this.istate=new A;return this.istate.inflateInit(this,b?-a:a)};C.prototype.inflate=function(a){return null==this.istate?-2:this.istate.inflate(this,a)};C.prototype.inflateEnd=\nfunction(){if(null==this.istate)return-2;var a=istate.inflateEnd(this);this.istate=null;return a};C.prototype.inflateSync=function(){return istate.inflateSync(this)};C.prototype.inflateSetDictionary=function(a,b){return istate.inflateSetDictionary(this,a,b)};A.prototype.inflateReset=function(a){if(null==a||null==a.istate)return-2;a.total_in=a.total_out=0;a.msg=null;a.istate.mode=0!=a.istate.nowrap?7:0;a.istate.blocks.reset(a,null);return 0};A.prototype.inflateEnd=function(a){null!=this.blocks&&this.blocks.free(a);\nthis.blocks=null;return 0};A.prototype.inflateInit=function(a,b){this.blocks=a.msg=null;nowrap=0;0>b&&(b=-b,nowrap=1);if(8>b||15<b)return this.inflateEnd(a),-2;this.wbits=b;a.istate.blocks=new B(a,0!=a.istate.nowrap?null:this,1<<b);this.inflateReset(a);return 0};A.prototype.inflate=function(a,b){var c,d;if(null==a||null==a.istate||null==a.next_in)return-2;b=4==b?-5:0;for(c=-5;;)switch(a.istate.mode){case 0:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;if(8!=((a.istate.method=a.next_in[a.next_in_index++])&\n15)){a.istate.mode=13;a.msg=\"unknown compression method\";a.istate.marker=5;break}if((a.istate.method>>4)+8>a.istate.wbits){a.istate.mode=13;a.msg=\"invalid window size\";a.istate.marker=5;break}a.istate.mode=1;case 1:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;d=a.next_in[a.next_in_index++]&255;if(0!=((a.istate.method<<8)+d)%31){a.istate.mode=13;a.msg=\"incorrect header check\";a.istate.marker=5;break}if(0==(d&32)){a.istate.mode=7;break}a.istate.mode=2;case 2:if(0==a.avail_in)return c;c=b;\na.avail_in--;a.total_in++;a.istate.need=(a.next_in[a.next_in_index++]&255)<<24&4278190080;a.istate.mode=3;case 3:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<16&16711680;a.istate.mode=4;case 4:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<8&65280;a.istate.mode=5;case 5:if(0==a.avail_in)return c;a.avail_in--;a.total_in++;a.istate.need+=a.next_in[a.next_in_index++]&255;a.adler=\na.istate.need;a.istate.mode=6;return 2;case 6:return a.istate.mode=13,a.msg=\"need dictionary\",a.istate.marker=0,-2;case 7:c=a.istate.blocks.proc(a,c);if(-3==c){a.istate.mode=13;a.istate.marker=0;break}0==c&&(c=b);if(1!=c)return c;c=b;a.istate.blocks.reset(a,a.istate.was);if(0!=a.istate.nowrap){a.istate.mode=12;break}a.istate.mode=8;case 8:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need=(a.next_in[a.next_in_index++]&255)<<24&4278190080;a.istate.mode=9;case 9:if(0==a.avail_in)return c;\nc=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<16&16711680;a.istate.mode=10;case 10:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<8&65280;a.istate.mode=11;case 11:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=a.next_in[a.next_in_index++]&255;if(a.istate.was[0]!=a.istate.need){a.istate.mode=13;a.msg=\"incorrect data check\";a.istate.marker=5;break}a.istate.mode=12;case 12:return 1;\ncase 13:return-3;default:return-2}};A.prototype.inflateSetDictionary=function(a,b,c){var d=0,h=c;if(null==a||null==a.istate||6!=a.istate.mode)return-2;if(a._adler.adler32(1,b,0,c)!=a.adler)return-3;a.adler=a._adler.adler32(0,null,0,0);h>=1<<a.istate.wbits&&(h=(1<<a.istate.wbits)-1,d=c-h);a.istate.blocks.set_dictionary(b,d,h);a.istate.mode=7;return 0};var da=[0,0,255,255];A.prototype.inflateSync=function(a){var b,c,d;if(null==a||null==a.istate)return-2;13!=a.istate.mode&&(a.istate.mode=13,a.istate.marker=\n0);if(0==(b=a.avail_in))return-5;c=a.next_in_index;for(d=a.istate.marker;0!=b&&4>d;)a.next_in[c]==da[d]?d++:d=0!=a.next_in[c]?0:4-d,c++,b--;a.total_in+=c-a.next_in_index;a.next_in_index=c;a.avail_in=b;a.istate.marker=d;if(4!=d)return-3;b=a.total_in;c=a.total_out;this.inflateReset(a);a.total_in=b;a.total_out=c;a.istate.mode=7;return 0};A.prototype.inflateSyncPoint=function(a){return null==a||null==a.istate||null==a.istate.blocks?-2:a.istate.blocks.sync_point()};var R=[16,17,18,0,8,7,9,6,10,5,11,4,\n12,3,13,2,14,1,15];B.prototype.reset=function(a,b){b&&(b[0]=this.check);6==this.mode&&this.codes.free(a);this.read=this.write=this.bitb=this.bitk=this.mode=0;this.checkfn&&(a.adler=this.check=a._adler.adler32(0,null,0,0))};B.prototype.proc=function(a,b){var c,d,h,f,g,e,k;f=a.next_in_index;g=a.avail_in;d=this.bitb;h=this.bitk;e=this.write;for(k=e<this.read?this.read-e-1:this.end-e;;)switch(this.mode){case 0:for(;3>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,\na.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}c=d&7;this.last=c&1;switch(c>>>1){case 0:d>>>=3;h-=3;c=h&7;d>>>=c;h-=c;this.mode=1;break;case 1:var m=new Int32Array(1),p=new Int32Array(1),q=[],n=[];c=p;var l=q,u=n;m[0]=9;c[0]=5;l[0]=X;u[0]=Y;this.codes.init(m[0],p[0],q[0],0,n[0],0,a);d>>>=3;h-=3;this.mode=6;break;case 2:d>>>=3;h-=3;this.mode=3;break;case 3:return d>>>=3,h-=3,this.mode=13,a.msg=\"invalid block type\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=\ng,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b)}break;case 1:for(;32>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}if((~d>>>16&65535)!=(d&65535))return this.mode=13,a.msg=\"invalid stored block lengths\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,\nb);this.left=d&65535;d=h=0;this.mode=0!=this.left?2:0!=this.last?7:0;break;case 2:if(0==g)return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,write=e,this.inflate_flush(a,b);if(0==k&&(e==end&&0!=read&&(e=0,k=e<this.read?this.read-e-1:this.end-e),0==k&&(this.write=e,b=this.inflate_flush(a,b),e=this.write,k=e<this.read?this.read-e-1:this.end-e,e==this.end&&0!=this.read&&(e=0,k=e<this.read?this.read-e-1:this.end-e),0==k)))return this.bitb=d,this.bitk=h,a.avail_in=\ng,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);b=0;c=this.left;c>g&&(c=g);c>k&&(c=k);y(a.next_in,f,this.window,e,c);f+=c;g-=c;e+=c;k-=c;if(0!=(this.left-=c))break;this.mode=0!=this.last?7:0;break;case 3:for(;14>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}this.table=c=d&16383;if(29<(c&31)||29<(c>>5&31))return this.mode=\n9,a.msg=\"too many length or distance symbols\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);c=258+(c&31)+(c>>5&31);if(null==this.blens||this.blens.length<c)this.blens=new Int32Array(c);else for(k=0;k<c;k++)this.blens[k]=0;d>>>=14;h-=14;this.index=0;mode=4;case 4:for(;this.index<4+(this.table>>>10);){for(;3>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,\nthis.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}this.blens[R[this.index++]]=d&7;d>>>=3;h-=3}for(;19>this.index;)this.blens[R[this.index++]]=0;this.bb[0]=7;c=this.inftree.inflate_trees_bits(this.blens,this.bb,this.tb,this.hufts,a);if(0!=c)return b=c,-3==b&&(this.blens=null,this.mode=9),this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,write=e,this.inflate_flush(a,b);this.index=0;this.mode=5;case 5:for(;;){c=this.table;if(!(this.index<258+\n(c&31)+(c>>5&31)))break;for(c=this.bb[0];h<c;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}c=this.hufts[3*(this.tb[0]+(d&x[c]))+1];p=this.hufts[3*(this.tb[0]+(d&x[c]))+2];if(16>p)d>>>=c,h-=c,this.blens[this.index++]=p;else{k=18==p?7:p-14;for(m=18==p?11:3;h<c+k;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=\nf,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}d>>>=c;h-=c;m+=d&x[k];d>>>=k;h-=k;k=this.index;c=this.table;if(k+m>258+(c&31)+(c>>5&31)||16==p&&1>k)return this.blens=null,this.mode=9,a.msg=\"invalid bit length repeat\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);p=16==p?this.blens[k-1]:0;do this.blens[k++]=p;while(0!=--m);this.index=k}}this.tb[0]=-1;m=new Int32Array(1);p=new Int32Array(1);q=\nnew Int32Array(1);n=new Int32Array(1);m[0]=9;p[0]=6;c=this.table;c=this.inftree.inflate_trees_dynamic(257+(c&31),1+(c>>5&31),this.blens,m,p,q,n,this.hufts,a);if(0!=c)return-3==c&&(this.blens=null,this.mode=13),b=c,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);this.codes.init(m[0],p[0],this.hufts,q[0],this.hufts,n[0],a);this.mode=6;case 6:this.bitb=d;this.bitk=h;a.avail_in=g;a.total_in+=f-a.next_in_index;a.next_in_index=f;\nthis.write=e;if(1!=(b=this.codes.proc(this,a,b)))return this.inflate_flush(a,b);b=0;this.codes.free(a);f=a.next_in_index;g=a.avail_in;d=this.bitb;h=this.bitk;e=this.write;k=e<this.read?this.read-e-1:this.end-e;if(0==this.last){this.mode=0;break}this.mode=7;case 7:this.write=e;b=this.inflate_flush(a,b);e=this.write;if(this.read!=this.write)return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);mode=12;case 8:return b=1,this.bitb=\nd,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);case 9:return b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);default:return b=-2,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b)}};B.prototype.free=function(a){this.reset(a,null);this.hufts=this.window=null};B.prototype.set_dictionary=\nfunction(a,b,c){y(a,b,window,0,c);this.read=this.write=c};B.prototype.sync_point=function(){return 1==this.mode};B.prototype.inflate_flush=function(a,b){var c,d,h;d=a.next_out_index;h=this.read;c=(h<=this.write?this.write:this.end)-h;c>a.avail_out&&(c=a.avail_out);0!=c&&-5==b&&(b=0);a.avail_out-=c;a.total_out+=c;null!=this.checkfn&&(a.adler=this.check=a._adler.adler32(this.check,this.window,h,c));y(this.window,h,a.next_out,d,c);d+=c;h+=c;h==this.end&&(h=0,this.write==this.end&&(this.write=0),c=this.write-\nh,c>a.avail_out&&(c=a.avail_out),0!=c&&-5==b&&(b=0),a.avail_out-=c,a.total_out+=c,null!=this.checkfn&&(a.adler=this.check=a._adler.adler32(this.check,this.window,h,c)),y(this.window,h,a.next_out,d,c),d+=c,h+=c);a.next_out_index=d;this.read=h;return b};D.prototype.init=function(a,b,c,d,h,f,g){this.mode=0;this.lbits=a;this.dbits=b;this.ltree=c;this.ltree_index=d;this.dtree=h;this.dtree_index=f;this.tree=null};D.prototype.proc=function(a,b,c){var d,h,f=0,g=0,e=0,k,m,p,e=b.next_in_index;k=b.avail_in;\nf=a.bitb;g=a.bitk;m=a.write;for(p=m<a.read?a.read-m-1:a.end-m;;)switch(this.mode){case 0:if(258<=p&&10<=k&&(a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,c=this.inflate_fast(this.lbits,this.dbits,this.ltree,this.ltree_index,this.dtree,this.dtree_index,a,b),e=b.next_in_index,k=b.avail_in,f=a.bitb,g=a.bitk,m=a.write,p=m<a.read?a.read-m-1:a.end-m,0!=c)){this.mode=1==c?7:9;break}this.need=this.lbits;this.tree=this.ltree;this.tree_index=this.ltree_index;this.mode=\n1;case 1:for(d=this.need;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}d=3*(this.tree_index+(f&x[d]));f>>>=this.tree[d+1];g-=this.tree[d+1];h=this.tree[d];if(0==h){this.lit=this.tree[d+2];this.mode=6;break}if(0!=(h&16)){this.get=h&15;this.len=this.tree[d+2];this.mode=2;break}if(0==(h&64)){this.need=h;this.tree_index=d/3+this.tree[d+2];break}if(0!=(h&32)){this.mode=7;break}this.mode=\n9;b.msg=\"invalid literal/length code\";c=-3;a.bitb=f;a.bitk=g;b.avail_in=k;b.total_in+=e-b.next_in_index;b.next_in_index=e;a.write=m;return a.inflate_flush(b,c);case 2:for(d=this.get;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}this.len+=f&x[d];f>>=d;g-=d;this.need=this.dbits;this.tree=this.dtree;this.tree_index=this.dtree_index;this.mode=3;case 3:for(d=this.need;g<d;){if(0!=\nk)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}d=3*(this.tree_index+(f&x[d]));f>>=this.tree[d+1];g-=this.tree[d+1];h=this.tree[d];if(0!=(h&16)){this.get=h&15;this.dist=this.tree[d+2];this.mode=4;break}if(0==(h&64)){this.need=h;this.tree_index=d/3+this.tree[d+2];break}this.mode=9;b.msg=\"invalid distance code\";c=-3;a.bitb=f;a.bitk=g;b.avail_in=k;b.total_in+=e-b.next_in_index;b.next_in_index=\ne;a.write=m;return a.inflate_flush(b,c);case 4:for(d=this.get;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}this.dist+=f&x[d];f>>=d;g-=d;this.mode=5;case 5:for(d=m-this.dist;0>d;)d+=a.end;for(;0!=this.len;){if(0==p&&(m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p&&(a.write=m,c=a.inflate_flush(b,c),m=a.write,p=m<a.read?a.read-m-1:a.end-m,m==a.end&&0!=a.read&&\n(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p)))return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);a.window[m++]=a.window[d++];p--;d==a.end&&(d=0);this.len--}this.mode=0;break;case 6:if(0==p&&(m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p&&(a.write=m,c=a.inflate_flush(b,c),m=a.write,p=m<a.read?a.read-m-1:a.end-m,m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p)))return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=\ne-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);c=0;a.window[m++]=this.lit;p--;this.mode=0;break;case 7:7<g&&(g-=8,k++,e--);a.write=m;c=a.inflate_flush(b,c);m=a.write;if(a.read!=a.write)return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);this.mode=8;case 8:return c=1,a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);case 9:return c=-3,a.bitb=f,a.bitk=g,b.avail_in=\nk,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);default:return c=-2,a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c)}};D.prototype.free=function(a){};D.prototype.inflate_fast=function(a,b,c,d,h,f,g,e){var k,m,p,q,n,l,u,s,w,t,r,v;l=e.next_in_index;u=e.avail_in;q=g.bitb;n=g.bitk;s=g.write;w=s<g.read?g.read-s-1:g.end-s;a=x[a];t=x[b];do{for(;20>n;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=q&a;m=c;p=d;v=3*(p+k);if(0==\n(b=m[v]))q>>=m[v+1],n-=m[v+1],g.window[s++]=m[v+2],w--;else{do{q>>=m[v+1];n-=m[v+1];if(0!=(b&16)){b&=15;r=m[v+2]+(q&x[b]);q>>=b;for(n-=b;15>n;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=q&t;m=h;p=f;v=3*(p+k);b=m[v];do if(q>>=m[v+1],n-=m[v+1],0!=(b&16)){for(b&=15;n<b;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=m[v+2]+(q&x[b]);q>>=b;n-=b;w-=r;if(s>=k)k=s-k,g.window[s++]=g.window[k++],g.window[s++]=g.window[k++],r-=2;else{k=s-k;do k+=g.end;while(0>k);b=g.end-k;if(r>b){r-=b;if(0<s-k&&b>s-k){do g.window[s++]=g.window[k++];\nwhile(0!=--b)}else y(g.window,k,g.window,s,b),s+=b;k=0}}do g.window[s++]=g.window[k++];while(0!=--r);break}else if(0==(b&64))k+=m[v+2],k+=q&x[b],v=3*(p+k),b=m[v];else return e.msg=\"invalid distance code\",r=e.avail_in-u,r=n>>3<r?n>>3:r,u+=r,l-=r,n-=r<<3,g.bitb=q,g.bitk=n,e.avail_in=u,e.total_in+=l-e.next_in_index,e.next_in_index=l,g.write=s,-3;while(1);break}if(0==(b&64)){if(k+=m[v+2],k+=q&x[b],v=3*(p+k),0==(b=m[v])){q>>=m[v+1];n-=m[v+1];g.window[s++]=m[v+2];w--;break}}else{if(0!=(b&32))return r=e.avail_in-\nu,r=n>>3<r?n>>3:r,u+=r,l-=r,n-=r<<3,g.bitb=q,g.bitk=n,e.avail_in=u,e.total_in+=l-e.next_in_index,e.next_in_index=l,g.write=s,1;e.msg=\"invalid literal/length code\";r=e.avail_in-u;r=n>>3<r?n>>3:r;u+=r;l-=r;n-=r<<3;g.bitb=q;g.bitk=n;e.avail_in=u;e.total_in+=l-e.next_in_index;e.next_in_index=l;g.write=s;return-3}}while(1)}}while(258<=w&&10<=u);r=e.avail_in-u;r=n>>3<r?n>>3:r;l-=r;g.bitb=q;g.bitk=n-(r<<3);e.avail_in=u+r;e.total_in+=l-e.next_in_index;e.next_in_index=l;g.write=s;return 0};E.prototype.huft_build=\nfunction(a,b,c,d,h,f,g,e,k,m,p){var q,n,l,u,s,w,t,r,v;w=0;n=c;do this.c[a[b+w]]++,w++,n--;while(0!=n);if(this.c[0]==c)return g[0]=-1,e[0]=0;s=e[0];for(l=1;15>=l&&0==this.c[l];l++);u=l;s<l&&(s=l);for(n=15;0!=n&&0==this.c[n];n--);m=n;s>n&&(s=n);e[0]=s;for(e=1<<l;l<n;l++,e<<=1)if(0>(e-=this.c[l]))return-3;if(0>(e-=this.c[n]))return-3;this.c[n]+=e;this.x[1]=l=0;w=1;for(t=2;0!=--n;)this.x[t]=l+=this.c[w],t++,w++;w=n=0;do 0!=(l=a[b+w])&&(this.v[this.x[l]++]=n),w++;while(++n<c);c=this.x[m];w=this.x[0]=n=\n0;b=-1;r=-s;for(v=t=this.u[0]=0;u<=m;u++)for(a=this.c[u];0!=a--;){for(;u>r+s;){b++;r+=s;v=m-r;v=v>s?s:v;if((q=1<<(l=u-r))>a+1&&(q-=a+1,t=u,l<v))for(;++l<v&&!((q<<=1)<=this.c[++t]);)q-=this.c[t];v=1<<l;if(1440<this.hn[0]+v)return-3;this.u[b]=t=this.hn[0];this.hn[0]+=v;0!=b?(this.x[b]=n,this.r[0]=l,this.r[1]=s,l=n>>>r-s,this.r[2]=t-this.u[b-1]-l,y(this.r,0,k,3*(this.u[b-1]+l),3)):g[0]=t}this.r[1]=u-r;w>=c?this.r[0]=192:p[w]<d?(this.r[0]=256>this.v[w]?0:96,this.r[2]=this.v[w++]):(this.r[0]=f[this.v[w]-\nd]+16+64,this.r[2]=h[this.v[w++]-d]);q=1<<u-r;for(l=n>>>r;l<v;l+=q)y(this.r,0,k,3*(t+l),3);for(l=1<<u-1;0!=(n&l);l>>>=1)n^=l;n^=l;for(l=(1<<r)-1;(n&l)!=this.x[b];)b--,r-=s,l=(1<<r)-1}return 0!=e&&1!=m?-5:0};E.prototype.inflate_trees_bits=function(a,b,c,d,h){this.initWorkArea(19);this.hn[0]=0;a=this.huft_build(a,0,19,19,null,null,c,b,d,this.hn,this.v);if(-3==a)h.msg=\"oversubscribed dynamic bit lengths tree\";else if(-5==a||0==b[0])h.msg=\"incomplete dynamic bit lengths tree\",a=-3;return a};E.prototype.inflate_trees_dynamic=\nfunction(a,b,c,d,h,f,g,e,k){this.initWorkArea(288);this.hn[0]=0;f=this.huft_build(c,0,a,257,Z,aa,f,d,e,this.hn,this.v);if(0!=f||0==d[0])return-3==f?k.msg=\"oversubscribed literal/length tree\":-4!=f&&(k.msg=\"incomplete literal/length tree\",f=-3),f;this.initWorkArea(288);f=this.huft_build(c,a,b,0,ba,ca,g,h,e,this.hn,this.v);return 0!=f||0==h[0]&&257<a?(-3==f?k.msg=\"oversubscribed distance tree\":-5==f?(k.msg=\"incomplete distance tree\",f=-3):-4!=f&&(k.msg=\"empty distance tree with lengths\",f=-3),f):0};\nE.prototype.initWorkArea=function(a){null==this.hn&&(this.hn=new Int32Array(1),this.v=new Int32Array(a),this.c=new Int32Array(16),this.r=new Int32Array(3),this.u=new Int32Array(15),this.x=new Int32Array(16));this.v.length<a&&(this.v=new Int32Array(a));for(var b=0;b<a;b++)this.v[b]=0;for(b=0;16>b;b++)this.c[b]=0;for(b=0;3>b;b++)this.r[b]=0;y(this.c,0,this.u,0,15);y(this.c,0,this.x,0,16)};var T=\"function\"===typeof(new Uint8Array(1)).subarray;K.prototype.toString=function(){return\"\"+this.block+\":\"+this.offset};\nF.prototype.slice=function(a,b){var c;c=this.blob.slice?b?this.blob.slice(a,a+b):this.blob.slice(a):b?this.blob.webkitSlice(a,a+b):this.blob.webkitSlice(a);return new F(c)};F.prototype.salted=function(){return this};F.prototype.fetch=\"undefined\"!==typeof FileReader?function(a){var b=new FileReader;b.onloadend=function(c){a(N(b.result))};b.readAsBinaryString(this.blob)}:function(a){var b=new FileReaderSync;try{var c=b.readAsArrayBuffer(this.blob);a(c)}catch(d){a(null,d)}};z.prototype.slice=function(a,\nb){if(0>a)throw\"Bad slice \"+a;var c=this.start,d=this.end,c=c&&a?c+a:a||c;return new z(this.url,c,b&&c?c+b-1:d||b-1,this.opts)};0<=navigator.userAgent.indexOf(\"Safari\")&&navigator.userAgent.indexOf(\"Chrome\");z.prototype.fetchAsText=function(a){var b=this;this.getURL().then(function(c){try{var d=new XMLHttpRequest;d.open(\"GET\",c,!0);if(b.end){if(1E8<b.end-b.start)throw\"Monster fetch!\";d.setRequestHeader(\"Range\",\"bytes=\"+b.start+\"-\"+b.end)}d.onreadystatechange=function(){if(4==d.readyState)return 200==\nd.status||206==d.status?a(d.responseText):a(null)};b.opts.credentials&&(d.withCredentials=!0);d.send(\"\")}catch(h){return a(null)}}).fail(function(b){console.log(b);return a(null,b)})};z.prototype.salted=function(){var a=this.opts,b={},c;for(c in a)b[c]=a[c];b.salt=!0;return new z(this.url,this.start,this.end,b)};z.prototype.getURL=function(){return this.opts.resolver?this.opts.resolver(this.url).then(function(a){return\"string\"===typeof a?a:a.url}):$.Deferred().resolve(this.url)};z.prototype.fetch=\nfunction(a,b){var c=this;b=b||{};var d=b.attempt||1,h=b.truncatedLength;if(3<d)return a(null);this.getURL().then(function(f){try{var g;b.timeout&&!c.opts.credentials&&(g=setTimeout(function(){console.log(\"timing out \"+f);e.abort();return a(null,\"Timeout\")},b.timeout));var e=new XMLHttpRequest,k;e.open(\"GET\",f,!0);e.overrideMimeType(\"text/plain; charset=x-user-defined\");if(c.end){if(1E8<c.end-c.start)throw\"Monster fetch!\";e.setRequestHeader(\"Range\",\"bytes=\"+c.start+\"-\"+c.end);k=c.end-c.start+1}e.responseType=\n\"arraybuffer\";e.onreadystatechange=function(){if(4==e.readyState){g&&clearTimeout(g);if(200==e.status||206==e.status){if(e.response){var b=e.response.byteLength;return!k||k==b||h&&b==h?a(e.response):c.fetch(a,{attempt:d+1,truncatedLength:b})}if(e.mozResponseArrayBuffer)return a(e.mozResponseArrayBuffer);b=e.responseText;return!k||k==b.length||h&&b.length==h?a(N(e.responseText)):c.fetch(a,{attempt:d+1,truncatedLength:b.length})}return c.fetch(a,{attempt:d+1})}};c.opts.credentials&&(e.withCredentials=\n!0);e.send(\"\")}catch(m){return a(null)}}).fail(function(b){console.log(b);return a(null,b)})};H.prototype.blocksForRange=function(a,b,c){var d=this.indices[a];if(!d)return[];a=U(b,c);for(var h=[],f=0;f<a.length;++f)h[a[f]]=!0;a=[];for(var g=[],f=t(d,0),e=4,k=0;k<f;++k){var m=t(d,e),p=t(d,e+4),e=e+8;if(h[m])for(var q=0;q<p;++q){var n=G(d,e),l=G(d,e+8);(4681>m?g:a).push(new M(n,l));e+=16}else e+=16*p}f=t(d,e);h=null;b=Math.min(b>>14,f-1);c=Math.min(c>>14,f-1);for(f=b;f<=c;++f)(b=G(d,e+4+8*f))&&(!h||\nb.block<h.block||b.offset<h.offset)&&(h=b);d=[];if(null!=h)for(f=0;f<g.length;++f)c=g[f],c.maxv.block>=h.block&&c.maxv.offset>=h.offset&&d.push(c);g=d;d=[];for(f=0;f<g.length;++f)d.push(g[f]);for(f=0;f<a.length;++f)d.push(a[f]);d.sort(function(a,b){var c=a.minv.block-b.minv.block;return 0!=c?c:a.minv.offset-b.minv.offset});a=[];if(0<d.length){g=d[0];for(f=1;f<d.length;++f)c=d[f],c.minv.block==g.maxv.block?g=new M(g.minv,c.maxv):(a.push(g),g=c);a.push(g)}return a};H.prototype.fetch=function(a,b,c,\nd,h){function f(){if(q>=k.length)return d(p);if(n){var a=new Uint8Array(n),a=g.readBamRecords(a,k[q].minv.offset,p,b,c,e,h);n=null;++q;return a?d(p):f()}var m=k[q],a=m.minv.block;g.data.slice(a,m.maxv.block+65536-a).fetch(function(a){n=L(a,m.maxv.block-m.minv.block+1);return f()})}var g=this;h=h||{};var e=this.chrToIndex[a],k;if(void 0===e)k=[];else{if(null===this.indices[e]&&this.indexChunks.chunks[e]){var m=this.indexChunks.chunks[e];return this.bai.slice(m[0],m[1]).fetch(function(f){f=new Uint8Array(f);\nthis.indices[e]=f;return this.fetch(a,b,c,d,h)}.bind(this))}(k=this.blocksForRange(e,b,c))||d(null,\"Error in index fetch\")}var p=[],q=0,n;f()};var S=\"=ACxGxxxTxxxxxxN\".split(\"\"),ea=\"MIDNSHP=X???????\".split(\"\");H.prototype.readBamRecords=function(a,b,c,d,h,f,g){for(;;){var e=t(a,b),e=b+e+4;if(e>=a.length)return!1;var k=new W,m=t(a,b+4),p=t(a,b+8),q=t(a,b+12),n=(q&65280)>>8,l=q&255,q=t(a,b+16),u=(q&4294901760)>>16,s=q&65535,q=t(a,b+20),w=t(a,b+24),x=t(a,b+28);t(a,b+32);k.segment=this.indexToChr[m];\nk.flag=u;k.pos=p;k.mq=n;g.light&&(k.seqLength=q);if(!g.light){0<=w&&(k.nextSegment=this.indexToChr[w],k.nextPos=x);n=\"\";for(p=0;p<l-1;++p)n+=String.fromCharCode(a[b+36+p]);k.readName=n;b=b+36+l;l=\"\";for(p=0;p<s;++p)n=t(a,b),l=l+(n>>4)+ea[n&15],b+=4;k.cigar=l;s=\"\";l=q+1>>1;for(p=0;p<l;++p)n=a[b+p],s+=S[(n&240)>>4],s.length<q&&(s+=S[n&15]);b+=l;k.seq=s;s=\"\";for(p=0;p<q;++p)s+=String.fromCharCode(a[b+p]+33);b+=q;for(k.quals=s;b<e;){s=String.fromCharCode(a[b],a[b+1]);l=String.fromCharCode(a[b+2]);if(\"A\"==\nl)l=String.fromCharCode(a[b+3]),b+=4;else if(\"i\"==l||\"I\"==l)l=t(a,b+3),b+=7;else if(\"c\"==l||\"C\"==l)l=a[b+3],b+=4;else if(\"s\"==l||\"S\"==l)l=P(a,b+3),b+=5;else if(\"f\"==l)l=O(a,b+3),b+=7;else if(\"Z\"==l||\"H\"==l)for(b+=3,l=\"\";p=a[b++],0!=p;)l+=String.fromCharCode(p);else if(\"B\"==l){l=String.fromCharCode(a[b+3]);p=t(a,b+4);if(\"i\"==l||\"I\"==l||\"f\"==l)n=4,u=\"f\"==l?O:t;else if(\"s\"==l||\"S\"==l)n=2,u=P;else if(\"c\"==l||\"C\"==l)n=1,u=V;else throw\"Unknown array type \"+l;b+=8;l=[];for(w=0;w<p;++w)l.push(u(a,b)),b+=\nn}else throw\"Unknown type \"+l;k[s]=l}}if(!d||k.pos<=h&&k.pos+q>=d)void 0!==f&&m!=f||c.push(k);if(k.pos>h)return!0;b=e}};window.dallianceLib={URLFetchable:z,BlobFetchable:F,makeBam:function(a,b,c,d,h){a.slice(0,10).fetch(function(f){return f?Q(a,b,c,d,h):d(null,\"Couldn't access BAM.\")},{timeout:5E3})},inflateBuffer:J};\"object\"===typeof module&&\"object\"===typeof module.exports&&(module.exports=window.dallianceLib)})();\n","!function(a){var b=this;\"object\"==typeof exports?module.exports=a(b):\"function\"==typeof define&&define.amd?define([],function(){return a(b)}):b.jDataView=a(b)}(function(a){\"use strict\";function b(a,b){return\"object\"!=typeof a||null===a?!1:a.constructor===b||Object.prototype.toString.call(a)===\"[object \"+b.name+\"]\"}function c(a,c){return!c&&b(a,Array)?a:Array.prototype.slice.call(a)}function d(a,b){return void 0!==a?a:b}function e(a,c,f,g){if(e.is(a)){var h=a.slice(c,c+f);return h._littleEndian=d(g,h._littleEndian),h}if(!e.is(this))return new e(a,c,f,g);if(this.buffer=a=e.wrapBuffer(a),this._isArrayBuffer=j.ArrayBuffer&&b(a,ArrayBuffer),this._isPixelData=!0&&j.PixelData&&b(a,CanvasPixelArray),this._isDataView=j.DataView&&this._isArrayBuffer,this._isNodeBuffer=!1,!this._isArrayBuffer&&!this._isPixelData&&!b(a,Array))throw new TypeError(\"jDataView buffer has an incompatible type\");this._littleEndian=!!g;var i=\"byteLength\"in a?a.byteLength:a.length;this.byteOffset=c=d(c,0),this.byteLength=f=d(f,i-c),this._offset=this._bitOffset=0,this._isDataView?this._view=new DataView(a,c,f):this._checkBounds(c,f,i),this._engineAction=this._isDataView?this._dataViewAction:this._isArrayBuffer?this._arrayBufferAction:this._arrayAction}function f(a){for(var b=j.ArrayBuffer?Uint8Array:Array,c=new b(a.length),d=0,e=a.length;e>d;d++)c[d]=255&a.charCodeAt(d);return c}function g(a){return a>=0&&31>a?1<<a:g[a]||(g[a]=Math.pow(2,a))}function h(a,b){this.lo=a,this.hi=b}function i(){h.apply(this,arguments)}var j={NodeBuffer:!1,DataView:\"DataView\"in a,ArrayBuffer:\"ArrayBuffer\"in a,PixelData:!0&&\"CanvasPixelArray\"in a&&!(\"Uint8ClampedArray\"in a)&&\"document\"in a},k=a.TextEncoder,l=a.TextDecoder;if(j.PixelData)var m=document.createElement(\"canvas\").getContext(\"2d\"),n=function(a,b){var c=m.createImageData((a+3)/4,1).data;if(c.byteLength=a,void 0!==b)for(var d=0;a>d;d++)c[d]=b[d];return c};var o={Int8:1,Int16:2,Int32:4,Uint8:1,Uint16:2,Uint32:4,Float32:4,Float64:8};e.wrapBuffer=function(a){switch(typeof a){case\"number\":if(j.ArrayBuffer)a=new Uint8Array(a).buffer;else if(j.PixelData)a=n(a);else{a=new Array(a);for(var d=0;d<a.length;d++)a[d]=0}return a;case\"string\":a=f(a);default:return\"length\"in a&&!(j.ArrayBuffer&&b(a,ArrayBuffer)||j.PixelData&&b(a,CanvasPixelArray))&&(j.ArrayBuffer?b(a,ArrayBuffer)||(a=new Uint8Array(a).buffer,b(a,ArrayBuffer)||(a=new Uint8Array(c(a,!0)).buffer)):a=j.PixelData?n(a.length,a):c(a)),a}},e.is=function(a){return a&&a.jDataView},e.from=function(){return new e(arguments)},e.Uint64=h,h.prototype={valueOf:function(){return this.lo+g(32)*this.hi},toString:function(){return Number.prototype.toString.apply(this.valueOf(),arguments)}},h.fromNumber=function(a){var b=Math.floor(a/g(32)),c=a-b*g(32);return new h(c,b)},e.Int64=i,i.prototype=\"create\"in Object?Object.create(h.prototype):new h,i.prototype.valueOf=function(){return this.hi<g(31)?h.prototype.valueOf.apply(this,arguments):-(g(32)-this.lo+g(32)*(g(32)-1-this.hi))},i.fromNumber=function(a){var b,c;if(a>=0){var d=h.fromNumber(a);b=d.lo,c=d.hi}else c=Math.floor(a/g(32)),b=a-c*g(32),c+=g(32);return new i(b,c)};var p=e.prototype={compatibility:j,jDataView:!0,_checkBounds:function(a,b,c){if(\"number\"!=typeof a)throw new TypeError(\"Offset is not a number.\");if(\"number\"!=typeof b)throw new TypeError(\"Size is not a number.\");if(0>b)throw new RangeError(\"Length is negative.\");if(0>a||a+b>d(c,this.byteLength))throw new RangeError(\"Offsets are out of bounds.\")},_action:function(a,b,c,e,f){return this._engineAction(a,b,d(c,this._offset),d(e,this._littleEndian),f)},_dataViewAction:function(a,b,c,d,e){return this._offset=c+o[a],b?this._view[\"get\"+a](c,d):this._view[\"set\"+a](c,e,d)},_arrayBufferAction:function(b,c,e,f,g){var h,i=o[b],j=a[b+\"Array\"];if(f=d(f,this._littleEndian),1===i||(this.byteOffset+e)%i===0&&f)return h=new j(this.buffer,this.byteOffset+e,1),this._offset=e+i,c?h[0]:h[0]=g;var k=new Uint8Array(c?this.getBytes(i,e,f,!0):i);return h=new j(k.buffer,0,1),c?h[0]:(h[0]=g,void this._setBytes(e,k,f))},_arrayAction:function(a,b,c,d,e){return b?this[\"_get\"+a](c,d):this[\"_set\"+a](c,e,d)},_getBytes:function(a,b,e){e=d(e,this._littleEndian),b=d(b,this._offset),a=d(a,this.byteLength-b),this._checkBounds(b,a),b+=this.byteOffset,this._offset=b-this.byteOffset+a;var f=this._isArrayBuffer?new Uint8Array(this.buffer,b,a):(this.buffer.slice||Array.prototype.slice).call(this.buffer,b,b+a);return e||1>=a?f:c(f).reverse()},getBytes:function(a,b,e,f){var g=this._getBytes(a,b,d(e,!0));return f?c(g):g},_setBytes:function(a,b,e){var f=b.length;if(0!==f){if(e=d(e,this._littleEndian),a=d(a,this._offset),this._checkBounds(a,f),!e&&f>1&&(b=c(b,!0).reverse()),a+=this.byteOffset,this._isArrayBuffer)new Uint8Array(this.buffer,a,f).set(b);else for(var g=0;f>g;g++)this.buffer[a+g]=b[g];this._offset=a-this.byteOffset+f}},setBytes:function(a,b,c){this._setBytes(a,b,d(c,!0))},getString:function(a,b,c){var d=this._getBytes(a,b,!0);if(c=\"utf8\"===c?\"utf-8\":c||\"binary\",l&&\"binary\"!==c)return new l(c).decode(this._isArrayBuffer?d:new Uint8Array(d));var e=\"\";a=d.length;for(var f=0;a>f;f++)e+=String.fromCharCode(d[f]);return\"utf-8\"===c&&(e=decodeURIComponent(escape(e))),e},setString:function(a,b,c){c=\"utf8\"===c?\"utf-8\":c||\"binary\";var d;k&&\"binary\"!==c?d=new k(c).encode(b):(\"utf-8\"===c&&(b=unescape(encodeURIComponent(b))),d=f(b)),this._setBytes(a,d,!0)},getChar:function(a){return this.getString(1,a)},setChar:function(a,b){this.setString(a,b)},tell:function(){return this._offset},seek:function(a){return this._checkBounds(a,0),this._offset=a},skip:function(a){return this.seek(this._offset+a)},slice:function(a,b,c){function f(a,b){return 0>a?a+b:a}return a=f(a,this.byteLength),b=f(d(b,this.byteLength),this.byteLength),c?new e(this.getBytes(b-a,a,!0,!0),void 0,void 0,this._littleEndian):new e(this.buffer,this.byteOffset+a,b-a,this._littleEndian)},alignBy:function(a){return this._bitOffset=0,1!==d(a,1)?this.skip(a-(this._offset%a||a)):this._offset},_getFloat64:function(a,b){var c=this._getBytes(8,a,b),d=1-2*(c[7]>>7),e=((c[7]<<1&255)<<3|c[6]>>4)-1023,f=(15&c[6])*g(48)+c[5]*g(40)+c[4]*g(32)+c[3]*g(24)+c[2]*g(16)+c[1]*g(8)+c[0];return 1024===e?0!==f?0/0:1/0*d:-1023===e?d*f*g(-1074):d*(1+f*g(-52))*g(e)},_getFloat32:function(a,b){var c=this._getBytes(4,a,b),d=1-2*(c[3]>>7),e=(c[3]<<1&255|c[2]>>7)-127,f=(127&c[2])<<16|c[1]<<8|c[0];return 128===e?0!==f?0/0:1/0*d:-127===e?d*f*g(-149):d*(1+f*g(-23))*g(e)},_get64:function(a,b,c){c=d(c,this._littleEndian),b=d(b,this._offset);for(var e=c?[0,4]:[4,0],f=0;2>f;f++)e[f]=this.getUint32(b+e[f],c);return this._offset=b+8,new a(e[0],e[1])},getInt64:function(a,b){return this._get64(i,a,b)},getUint64:function(a,b){return this._get64(h,a,b)},_getInt32:function(a,b){var c=this._getBytes(4,a,b);return c[3]<<24|c[2]<<16|c[1]<<8|c[0]},_getUint32:function(a,b){return this._getInt32(a,b)>>>0},_getInt16:function(a,b){return this._getUint16(a,b)<<16>>16},_getUint16:function(a,b){var c=this._getBytes(2,a,b);return c[1]<<8|c[0]},_getInt8:function(a){return this._getUint8(a)<<24>>24},_getUint8:function(a){return this._getBytes(1,a)[0]},_getBitRangeData:function(a,b){var c=(d(b,this._offset)<<3)+this._bitOffset,e=c+a,f=c>>>3,g=e+7>>>3,h=this._getBytes(g-f,f,!0),i=0;(this._bitOffset=7&e)&&(this._bitOffset-=8);for(var j=0,k=h.length;k>j;j++)i=i<<8|h[j];return{start:f,bytes:h,wideValue:i}},getSigned:function(a,b){var c=32-a;return this.getUnsigned(a,b)<<c>>c},getUnsigned:function(a,b){var c=this._getBitRangeData(a,b).wideValue>>>-this._bitOffset;return 32>a?c&~(-1<<a):c},_setBinaryFloat:function(a,b,c,d,e){var f,h,i=0>b?1:0,j=~(-1<<d-1),k=1-j;0>b&&(b=-b),0===b?(f=0,h=0):isNaN(b)?(f=2*j+1,h=1):1/0===b?(f=2*j+1,h=0):(f=Math.floor(Math.log(b)/Math.LN2),f>=k&&j>=f?(h=Math.floor((b*g(-f)-1)*g(c)),f+=j):(h=Math.floor(b/g(k-c)),f=0));for(var l=[];c>=8;)l.push(h%256),h=Math.floor(h/256),c-=8;for(f=f<<c|h,d+=c;d>=8;)l.push(255&f),f>>>=8,d-=8;l.push(i<<d|f),this._setBytes(a,l,e)},_setFloat32:function(a,b,c){this._setBinaryFloat(a,b,23,8,c)},_setFloat64:function(a,b,c){this._setBinaryFloat(a,b,52,11,c)},_set64:function(a,b,c,e){\"object\"!=typeof c&&(c=a.fromNumber(c)),e=d(e,this._littleEndian),b=d(b,this._offset);var f=e?{lo:0,hi:4}:{lo:4,hi:0};for(var g in f)this.setUint32(b+f[g],c[g],e);this._offset=b+8},setInt64:function(a,b,c){this._set64(i,a,b,c)},setUint64:function(a,b,c){this._set64(h,a,b,c)},_setUint32:function(a,b,c){this._setBytes(a,[255&b,b>>>8&255,b>>>16&255,b>>>24],c)},_setUint16:function(a,b,c){this._setBytes(a,[255&b,b>>>8&255],c)},_setUint8:function(a,b){this._setBytes(a,[255&b])},setUnsigned:function(a,b,c){var d=this._getBitRangeData(c,a),e=d.wideValue,f=d.bytes;e&=~(~(-1<<c)<<-this._bitOffset),e|=(32>c?b&~(-1<<c):b)<<-this._bitOffset;for(var g=f.length-1;g>=0;g--)f[g]=255&e,e>>>=8;this._setBytes(d.start,f,!0)}};for(var q in o)!function(a){p[\"get\"+a]=function(b,c){return this._action(a,!0,b,c)},p[\"set\"+a]=function(b,c,d){this._action(a,!1,b,d,c)}}(q);p._setInt32=p._setUint32,p._setInt16=p._setUint16,p._setInt8=p._setUint8,p.setSigned=p.setUnsigned;for(var r in p)\"set\"===r.slice(0,3)&&!function(a){p[\"write\"+a]=function(){Array.prototype.unshift.call(arguments,void 0),this[\"set\"+a].apply(this,arguments)}}(r.slice(3));return e});\n//# sourceMappingURL=jdataview.js.map\n","(function () {\n\nif (typeof jDataView === 'undefined' && typeof require !== 'undefined') {\n\tjDataView = require('./jDataView.js');\n}\n\n// Extend code from underscorejs (modified for fast inheritance using prototypes)\nfunction inherit(obj) {\n  if ('create' in Object) {\n    obj = Object.create(obj);\n  } else {\n    function ClonedObject() {}\n    ClonedObject.prototype = obj;\n    obj = new ClonedObject();\n  }\n  for (var i = 1; i < arguments.length; ++i) {\n    var source = arguments[i];\n    for (var prop in source) {\n      if (source[prop] !== undefined) {\n        obj[prop] = source[prop];\n      }\n    }\n  }\n  return obj;\n}\n\nfunction jParser(view, structure) {\n  if (!(this instanceof arguments.callee)) {\n    throw new Error(\"Constructor may not be called as a function\");\n  }\n  if (!(view instanceof jDataView)) {\n    view = new jDataView(view, undefined, undefined, true);\n  }\n  this.view = view;\n  this.view.seek(0);\n  this._bitShift = 0;\n  this.structure = inherit(jParser.prototype.structure, structure);\n}\n\nfunction toInt(val) {\n  return val instanceof Function ? val.call(this) : val;\n}\n\njParser.prototype.structure = {\n  uint8: function () { return this.view.getUint8(); },\n  uint16: function () { return this.view.getUint16(); },\n  uint32: function () { return this.view.getUint32(); },\n  uint64 : function () { return parseInt(this.view.getUint64(),10); },\n  int8: function () { return this.view.getInt8(); },\n  int16: function () { return this.view.getInt16(); },\n  int32: function () { return this.view.getInt32(); },\n  float32: function () { return this.view.getFloat32(); },\n  float64: function () { return this.view.getFloat64(); },\n  char: function () { return this.view.getChar(); },\n  string: function (length) {\n    return this.view.getString(toInt.call(this, length));\n  },\n  array: function (type, length) {\n    length = toInt.call(this, length);\n    var results = [];\n    for (var i = 0; i < length; ++i) {\n      results.push(this.parse(type));\n    }\n    return results;\n  },\n  seek: function (position, block) {\n    position = toInt.call(this, position);\n    if (block instanceof Function) {\n      var old_position = this.view.tell();\n      this.view.seek(position);\n      var result = block.call(this);\n      this.view.seek(old_position);\n      return result;\n    } else {\n      return this.view.seek(position);\n    }\n  },\n  tell: function () {\n    return this.view.tell();\n  },\n  skip: function (offset) {\n    offset = toInt.call(this, offset);\n    this.view.seek(this.view.tell() + offset);\n    return offset;\n  },\n  err : function(e){\n    this.current = { error : e };\n    return;\n  },\n  if: function (predicate) {\n    if (predicate instanceof Function ? predicate.call(this) : predicate) {\n    return this.parse.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  }\n};\n\njParser.prototype.seek = jParser.prototype.structure.seek;\njParser.prototype.tell = jParser.prototype.structure.tell;\njParser.prototype.skip = jParser.prototype.structure.skip;\njParser.prototype.err  = jParser.prototype.structure.err;\n\njParser.prototype.parse = function (structure) {\n  if (typeof structure === 'number') {\n    var fieldValue = 0,\n    bitSize = structure;\n\n    if (this._bitShift < 0) {\n      var byteShift = this._bitShift >> 3; // Math.floor(_bitShift / 8)\n      this.skip(byteShift);\n      this._bitShift &= 7; // _bitShift + 8 * Math.floor(_bitShift / 8)\n    }\n    if (this._bitShift > 0 && bitSize >= 8 - this._bitShift) {\n      fieldValue = this.view.getUint8() & ~(-1 << (8 - this._bitShift));\n      bitSize -= 8 - this._bitShift;\n      this._bitShift = 0;\n    }\n    while (bitSize >= 8) {\n      fieldValue = this.view.getUint8() | (fieldValue << 8);\n      bitSize -= 8;\n    }\n    if (bitSize > 0) {\n      fieldValue = ((this.view.getUint8() >>> (8 - (this._bitShift + bitSize))) & ~(-1 << bitSize)) | (fieldValue << bitSize);\n      this._bitShift += bitSize - 8; // passing negative value for next pass\n    }\n\n    return fieldValue;\n  }\n\n  // f, 1, 2 means f(1, 2)\n  if (structure instanceof Function) {\n    return structure.apply(this, Array.prototype.slice.call(arguments, 1));\n  }\n\n  // 'int32', ... is a shortcut for ['int32', ...]\n  if (typeof structure === 'string') {\n    structure = Array.prototype.slice.call(arguments);\n  }\n\n  // ['string', 256] means structure['string'](256)\n  if (structure instanceof Array) {\n    var key = structure[0];\n    if (!(key in this.structure)) {\n      throw new Error(\"Missing structure for `\" + key + \"`\");\n    }\n    return this.parse.apply(this, [this.structure[key]].concat(structure.slice(1)));\n  }\n\n  // {key: val} means {key: parse(val)}\n  if (typeof structure === 'object') {\n    var output = {},\n    current = this.current;\n\n    this.current = output;\n\n    for (var key in structure) {\n      if(this.current.error){\n        output = this.current;\n        return output;\n      }\n      var value = this.parse(structure[key]);\n\n      // skipping undefined call results (useful for 'if' statement)\n      if (value !== undefined) {\n        output[key] = value;\n      }\n    }\n\n    this.current = current;\n\n    return output;\n  }\n\n  throw new Error(\"Unknown structure type `\" + structure + \"`\");\n};\n\n\nvar all;\nif (typeof self !== 'undefined') {\n  all = self;\n} else if (typeof window !== 'undefined') {\n  all = window;\n} else if (typeof global !== 'undefined') {\n  all = global;\n}\n// Browser + Web Worker\nall.jParser = jParser;\n\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = jParser;\n}\n\n})();\n","(function () {\n  var BWReader = function (data, callback) {\n    // constants: bigwig/bigbed file header signatures (magic numbers) (32 bit) , can be swapped ( big-endian | BE )\n    var BIG_WIG_MAGIC    = 0x888FFC26;\n    var BIG_WIG_MAGIC_BE = 0x26FC8F88;\n\n    var BIG_BED_MAGIC    = 0x8789F2EB;\n    var BIG_BED_MAGIC_BE = 0xEBF28987;\n\n    var CIRTREE_MAGIC = 0x78ca8c91;\n    var IDXTREE_MAGIC = 0x2468ace0;\n\n    // type of file converted to bigwig bedgraph |variable step wiggle | fixed step wiggle\n    var BIG_WIG_TYPE_GRAPH = 1;\n    var BIG_WIG_TYPE_VSTEP = 2;\n    var BIG_WIG_TYPE_FSTEP = 3;\n\n    // bigbed data color regex\n    var BED_COLOR_REGEXP = new RegExp(\"^[0-9]+,[0-9]+,[0-9]+\");\n\n    var M1 = 256;\n    var M2 = 256*256;\n    var M3 = 256*256*256;\n    var M4 = 256*256*256*256;\n\n    var bbi = {\n      fetchedData: new RTree()\n    };\n\n    function init() {\n      checkSignature();\n    }\n\n    function getData(start, length, cb) {\n      var end     = start + length;\n      var fetched = bbi.fetchedData.search({ x: start, w: length, y: 0, h: 1 }).filter(function (d) { return d[0] <= start && d[1] >= end; });\n\n      if (fetched.length == 1) {\n        cb(fetched[0][2].slice(start - fetched[0][0], start + length));\n      } else {\n        data.slice(start, length).fetch(function (d) {\n          bbi.fetchedData.insert({ x: start, w: length, y: 0, h: 1 }, [ start, start + length, d ]);\n          cb(d);\n        });\n      }\n    }\n\n    function checkSignature() {\n      getData(0, 512, function (header) {\n        var ba    = new Uint8Array(header);\n        var sa    = new Uint16Array(header);\n        var la    = new Uint32Array(header);\n        var magic = la[0];\n        var error, reduction, dataOffset, indexOffset;\n\n        if (magic === BIG_WIG_MAGIC) {\n          bbi.type = 'bigwig';\n        } else if (magic === BIG_BED_MAGIC) {\n          bbi.type = 'bigbed';\n        } else if (magic === BIG_WIG_MAGIC_BE || magic === BIG_BED_MAGIC_BE) {\n          error = 'big-endian files not supported yet!';\n        } else{\n          error = 'unsupported file format';\n        }\n\n        if (error) {\n          callback(null, error);\n        }\n\n        bbi.version             = sa[2];\n        bbi.numZoomLevels       = sa[3];\n        bbi.chromTreeOffset     = read64Bit(ba, 8);\n        bbi.unzoomedDataOffset  = read64Bit(ba, 16);\n        bbi.unzoomedIndexOffset = read64Bit(ba, 24);\n        bbi.fieldCount          = sa[16];\n        bbi.definedFieldCount   = sa[17];\n        bbi.asOffset            = read64Bit(ba, 36);\n        bbi.totalSummaryOffset  = read64Bit(ba, 44);\n        bbi.uncompressBufSize   = la[13];\n        bbi.extHeaderOffset     = read64Bit(ba, 56);\n        bbi.compressed          = bbi.uncompressBufSize  > 0;\n        bbi.summary             = bbi.totalSummaryOffset > 0;\n        bbi.extHeader           = bbi.extHeaderOffset    > 0;\n        bbi.zoomHeaders         = [];\n\n        for (var i = 0; i < bbi.numZoomLevels; i++) {\n          reduction   = la[16 + 6*i];\n          dataOffset  = read64Bit(ba, 72 + 24*i);\n          indexOffset = read64Bit(ba, 80 + 24*i);\n\n          bbi.zoomHeaders.push({\n            reductionLevel : reduction,\n            dataOffset     : dataOffset,\n            indexOffset    : indexOffset\n          });\n        }\n\n        readAutoSQL(readChromTree); // reading autoSQL passing next task as callback\n      });\n    }\n\n    // autoSQL could be present in some bigbed files\n    function readAutoSQL(cb) {\n      if (bbi.asOffset === 0) {\n        cb(); // no autoSQL present\n      } else {\n        // autoSQL present, need to parse\n        getData(bbi.asOffset, 2048, function (d) {\n          var ba = new Uint8Array(d);\n          var s  = '';\n\n          for (var i = 0; i < ba.length; i++) {\n            if (ba[i] === 0) {\n              break;\n            }\n\n            s += String.fromCharCode(ba[i]);\n          }\n\n          var header_re   = /(\\w+)\\s+(\\w+)\\s+(\"([^\"]+)\")?\\s*\\(\\s*/;\n          var field_re    = /([\\w\\[\\]]+)\\s+(\\w+)\\s*;\\s*(\"([^\"]+)\")?\\s*/g;\n          var headerMatch = header_re.exec(s);\n\n          if (headerMatch) {\n            var as = {\n              declType : headerMatch[1],\n              name     : headerMatch[2],\n              comment  : headerMatch[4],\n              fields   : []\n            };\n\n            s = s.substring(headerMatch[0]);\n\n            for (var m = field_re.exec(s); m !== null; m = field_re.exec(s)) {\n              as.fields.push({\n                type    : m[1],\n                name    : m[2],\n                comment : m[4]\n              });\n            }\n\n            bbi.schema = as;\n          }\n\n          cb();\n        });\n      }\n    }\n\n    // reading B+ tree which maps chrom names to ids used in R-tree\n    function readChromTree() {\n      var len = bbi.unzoomedDataOffset - bbi.chromTreeOffset;\n          len = len + (4 - len%4);\n\n      getData(bbi.chromTreeOffset, len, function (d) {\n        var ba    = new Uint8Array(d);\n        var sa    = new Uint16Array(d);\n        var la    = new Uint32Array(d);\n        var magic = la[0];\n        var error;\n\n        function readChromTreeLeaf(nodeOffset) {\n          // padding 8 byte\n          var children = sa[(nodeOffset/2) + 1];\n          var offset   = nodeOffset + 4;\n          var chrom, i, c, idx, len;\n\n          while (children > 0) {\n            children--;\n            chrom = '';\n\n            for (i = 0; i < bbi.bpTree.keySize; i++) {\n              c = ba[offset + i];\n\n              if (c !== 0) {\n                chrom += String.fromCharCode(c);\n              }\n            }\n\n            offset += bbi.bpTree.keySize;\n\n            idx = (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset + 0]);\n            len = (ba[offset + 7] << 24) | (ba[offset + 6] << 16) | (ba[offset + 5] << 8) | (ba[offset + 4]);\n\n            offset += 8;\n\n            bbi.chroms[idx]  = chrom;\n            bbi.lengths[idx] = len;\n          }\n        }\n\n        if (magic === CIRTREE_MAGIC) {\n          bbi.bpTree = {\n            itemsPerBlock : la[1],\n            keySize       : la[2],\n            valueSize     : la[3],\n            itemCount     : read64Bit(ba, 16)\n          };\n\n          bbi.chroms  = new Array(bbi.bpTree.itemCount);\n          bbi.lengths = new Array(bbi.bpTree.itemCount);\n        } else {\n          error = 'chromosome id B+ tree not found!';\n        }\n\n        if (error) {\n          callback(null, error);\n        } else {\n          readChromTreeLeaf(32);\n        }\n\n        readRTreeIndex();\n      });\n    }\n\n    function readRTreeIndex() {\n      getData(bbi.unzoomedIndexOffset, 48, function (d) {\n        var ba    = new Uint8Array(d);\n        var la    = new Uint32Array(d);\n        var magic = la[0];\n\n        if (magic === IDXTREE_MAGIC) {\n          bbi.Rheader = {\n            blockSize     : la[1],\n            nItems        : read64Bit(ba, 8),\n            chrIdxStart   : la[4],\n            baseStart     : la[5],\n            chrIdxEnd     : la[6],\n            baseEnd       : la[7],\n            endFileOffset : read64Bit(ba, 32),\n            nItemsPerSlot : la[10]\n          };\n\n          bbi.rootOffset = bbi.unzoomedIndexOffset + 48;\n          bbi.getValues  = getValues;\n\n          callback(bbi);\n        } else {\n          callback(null, 'R-tree not found!');\n        }\n      });\n    }\n\n    function getRTreeNode(treedata, offset) {\n      var ba       = new Uint8Array(treedata);\n      var sa       = new Uint16Array(treedata);\n      var la       = new Uint32Array(treedata);\n      var children = sa[offset/2 + 1];\n      var lo, i;\n\n      var node = {\n        isLeaf      : ba[offset],\n        children    : children,\n        chrIdxStart : new Array(children),\n        baseStart   : new Array(children),\n        chrIdxEnd   : new Array(children),\n        baseEnd     : new Array(children),\n        dataOffset  : new Array(children),\n        x           : {}\n      };\n\n      if (node.isLeaf) {\n        node.x.size = new Array(children);\n      } else {\n        node.x.child = new Array(children);\n\n        for (i = 0; i < children; i++) {\n          node.x.child[i] = -1;\n        }\n      }\n\n      offset += 4;\n\n      for (i = 0; i < children; i++) {\n        lo = offset / 4;\n\n        node.chrIdxStart[i] = la[lo];\n        node.baseStart[i]   = la[lo + 1];\n        node.chrIdxEnd[i]   = la[lo + 2];\n        node.baseEnd[i]     = la[lo + 3];\n        node.dataOffset[i]  = read64Bit(ba, offset + 16);\n\n        offset += 24;\n\n        if (node.isLeaf) {\n          node.x.size[i] = read64Bit(ba, offset);\n          offset += 8;\n        }\n      }\n\n      return node;\n    }\n\n    function getValues(chrom, start, end, cb) {\n      var vals    = [];\n      var chromid = bbi.chroms.indexOf(chrom);\n\n      if (chromid == -1) {\n        chromid = bbi.chroms.indexOf('chr' + chrom);\n\n        if (chromid == -1) {\n          return cb([], 'chrom not found');\n        }\n      }\n\n      var query = {\n        chrom : chromid,\n        start : start,\n        end   : end\n      };\n\n      function traverseRTree() {\n        var outstanding = 0;\n\n        function fetchRTreeKids(offset, level) {\n          outstanding += offset.length;\n\n          var min         = offset[0];\n          var maxNodeSize = 4 + bbi.Rheader.blockSize*32;\n          var max         = offset[offset.length - 1] + maxNodeSize;\n\n          getData(min, max - min, function (treedata) {\n            // traverse kids\n            for (var i = 0; i < offset.length; i++) {\n              traverseRTreeKids(treedata, offset[i] - min, level);\n\n              if (--outstanding === 0) {\n                fetchBlocks();\n              }\n            }\n          });\n        }\n\n        function traverseRTreeKids(treedata, offset, level) {\n          var node     = getRTreeNode(treedata, offset);\n          var overlaps = findOverlaps(node);\n          var i;\n\n          if (node.isLeaf) {\n            for (i = 0; i < overlaps.length; i++){\n              vals.push({\n                offset : node.dataOffset[overlaps[i]],\n                size   : node.x.size[overlaps[i]]\n              });\n            }\n\n            return [];\n          } else {\n            fetchRTreeKids(overlaps.map(function (o) { return node.dataOffset[o]; }), level + 1);\n          }\n        }\n\n        function findOverlaps(node) {\n          var children = node.children;\n          var overlaps = [];\n\n          for (var i = 0; i < children; i++) {\n            var startChrom = node.chrIdxStart[i];\n            var startBase  = node.baseStart[i];\n            var endChrom   = node.chrIdxEnd[i];\n            var endBase    = node.baseEnd[i];\n\n            if (\n              ((startChrom < query.chrom) || (startChrom == query.chrom && startBase <= query.end)) &&\n              ((endChrom   > query.chrom) || (endChrom   == query.chrom && endBase   >= query.start))\n            ) {\n              overlaps.push(i);\n            }\n          }\n\n          return overlaps;\n        }\n\n        fetchRTreeKids([bbi.rootOffset], 1);\n      }\n\n      function fetchBlocks() {\n        vals.sort(function (b0, b1) {\n          return (b0.offset | 0) - (b1.offset | 0);\n        });\n\n        if (vals.length === 0) {\n          return getBlocks();\n        }\n\n        var totalSize = 0;\n        var base      = vals[0].offset;\n\n        for (var i = 0; i < vals.length; i++) {\n          totalSize += vals[i].size;\n        }\n\n        getData(base, totalSize, function (buffer) {\n          var ioffset = 0;\n          var bi      = 0;\n          var fb, blockData;\n\n          while (ioffset < totalSize) {\n            fb = vals[bi];\n\n            if (bbi.uncompressBufSize > 0) {\n              blockData = dallianceLib.inflateBuffer(buffer, ioffset + 2, fb.size - 2);\n            } else {\n              blockData = buffer.slice(ioffset, ioffset + fb.size);\n            }\n\n            vals[bi].data = blockData;\n            ioffset      += fb.size;\n            bi++;\n          }\n\n          getBlocks();\n        });\n      }\n\n      function getBlocks() {\n        var parser = bbi.type == 'bigwig' ? WiggleParser : bbi.type == 'bigbed' ? BEDParser : false;\n        var result = [];\n\n        if (parser && vals.length) {\n          for (var i = 0; i < vals.length; i++) {\n            result = result.concat(parser(vals[i].data, query));\n          }\n        }\n\n        cb(result);\n      }\n\n      traverseRTree();\n    }\n\n    function WiggleParser(data, query) {\n      var arr        = [];\n      var ba         = new Uint8Array(data);\n      var sa         = new Int16Array(data);\n      var la         = new Int32Array(data);\n      var fa         = new Float32Array(data);\n      var chromId    = la[0];\n      var chr        = parseInt(bbi.chroms[chromId].replace('chr', ''), 10);\n      var blockStart = la[1] + 1;\n      var itemStep   = la[3];\n      var itemSpan   = la[4];\n      var blockType  = ba[20];\n      var itemCount  = sa[11];\n      var i, start, end, score;\n\n      if (blockType === BIG_WIG_TYPE_FSTEP) { // fixedStep wiggle\n        for (i = 0; i < itemCount; i++) {\n          start = blockStart + i*itemStep;\n          end   = start + itemSpan - 1;\n          score = fa[i + 6];\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      } else if (blockType === BIG_WIG_TYPE_VSTEP) { // variable step wiggle\n        for (i = 0; i < itemCount; i++) {\n          start = la[i*2 + 6] + 1;\n          end   = start + itemSpan - 1;\n          score = fa[i*2 + 7];\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      } else if (blockType === BIG_WIG_TYPE_GRAPH) { // bedGraph\n        for (i = 0; i < itemCount; i++) {\n          start = la[i*3 + 6] + 1;\n          end   = la[i*3 + 7];\n          score = fa[i*3 + 8];\n\n          if (start > end) {\n            start = end;\n          }\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      }\n\n      return arr;\n    }\n\n    function BEDParser(data, query) {\n      var arr      = [];\n      var ba       = new Uint8Array(data);\n      var la       = new Int32Array(data);\n      var offset   = 0;\n      var bbRecord, ch, rest;\n\n      while (offset < la.length) {\n        bbRecord = {\n          chromid : la[offset],\n          chr     : bbi.chroms[la[offset]],\n          start   : la[offset + 1],\n          end     : la[offset + 2]\n        };\n\n        offset += 12;\n\n        while (true) {\n          ch = ba[offset++];\n\n          if (ch !== 0) {\n            rest += String.fromCharCode(ch);\n          } else {\n            break;\n          }\n        }\n\n        if (bbRecord.chromid === query.chrom) {\n          arr.push([ bbRecord.chr, bbRecord.start, bbRecord.end, rest ].join('\\t'));\n        }\n      }\n\n      return arr;\n    }\n\n    // reads 8 bytes from data\n    function read64Bit(ba, o) {\n      var val = ba[o] + ba[o+1]*M1 + ba[o+2]*M2 + ba[o+3]*M3 + ba[o+4]*M4;\n      return val;\n    }\n\n    function readFloat(ba, o) {\n      var a = new Uint8Array([ ba[o], ba[o+1], ba[o+2], ba[o+3] ]);\n      var b = a.buffer;\n      var c = new Float32Array(b);\n      return c[0];\n    }\n\n    // reads 4 bytes from data\n    function read32Bit(ba, o) {\n      var a = ba[o];\n      var b = ba[o+1];\n      var c = ba[o+2];\n      var d = ba[o+3];\n      var r = (a | ((b << 8) >>> 0) | ((c << 16) >>> 0) | ((d << 24) >>> 0)) >>> 0;\n      return r;\n    }\n\n     // reads 2 bytes from data\n    function read16Bit(ba, o) {\n      var r = ba[o] | (ba[o+1] << 8);\n      return r;\n    }\n\n    // reads 1 byte from data\n    function read8Bit(ba, o) {\n      return ba[o];\n    }\n\n    init();\n  };\n\n  window.BWReader = BWReader;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = BWReader;\n  }\n})();\n","(function () {\n  var tabi_fmt = {\n    string0: function (size) {\n      return this.parse(['string', size]).replace(/\\0+$/, '');\n    },\n    header: {\n      magic   : ['string', 4],\n      n_ref   : 'int32',\n      format  : 'int32',\n      col_seq : 'int32',\n      col_beg : 'int32',\n      col_end : 'int32',\n      meta    : 'int32',\n      skip    : 'int32',\n      l_nm    : 'int32',\n      names   : ['string0', function () { return this.current.l_nm; }]\n    },\n    chunk: {\n      cnk_beg: 'uint64',\n      cnk_end: 'uint64'\n    },\n    bin: {\n      bin      : 'uint32',\n      n_chunk  : 'int32',\n      chunkseq : ['array', 'chunk', function () { return this.current.n_chunk; }]\n    },\n    index: {\n      n_bin     : 'int32',\n      binseq    : ['array', 'bin', function () { return this.current.n_bin; }],\n      n_intv    : 'int32',\n      intervseq : ['array', 'uint64', function () { return this.current.n_intv; }]\n    },\n    tabix: {\n      head     : 'header',\n      indexseq : ['array', 'index', function () { return this.current.head.n_ref; }]\n    }\n  };\n\n  var bgzf_hd_fmt = {\n    header: {\n      id1   : 'uint8',\n      id2   : 'uint8',\n      cm    : 'uint8',\n      flg   : 'uint8',\n      mtime : 'uint32',\n      xfl   : 'uint8',\n      os    : 'uint8',\n      xlen  : 'uint16'\n    },\n    subheader: {\n      si1   : 'uint8',\n      si2   : 'uint8',\n      slen  : 'uint16',\n      bsize : 'uint16'\n    },\n    bgzfHd: { head: 'header', subhead: 'subheader' }\n  };\n\n  var hdSize  = 18;\n  var inflate = dallianceLib.inflateBuffer;\n  var _2p16   = 1 << 16;\n\n  var VCFReader = function (vcf, tbi) {\n    this.vcf_data = vcf;\n    this.tbi_data = tbi;\n  };\n\n  VCFReader.prototype.readTabix = function (cb) {\n    var bins2hash = function (binseq) {\n      var hash = {};\n      var i    = 0;\n      var b;\n\n      for (var x in binseq) {\n        b       = binseq[x].bin;\n        hash[b] = i;\n        i++;\n      }\n\n      return hash;\n    };\n\n    var parse_tabix = function (tabix_buffer) {\n      var tabix = new jParser(tabix_buffer, tabi_fmt).parse('tabix');\n\n      tabix.head.names = tabix.head.names.split('\\0');\n      tabix.bhash = {};\n\n      for (var i = 0; i < tabix.head.n_ref; i++){\n        tabix.bhash[i] = bins2hash(tabix.indexseq[i].binseq);\n      }\n\n      cb(tabix);\n    };\n\n    this.inflateRegion(this.tbi_data, 0, 100000000, parse_tabix);\n  };\n\n  VCFReader.prototype.getRecords = function (ref, beg, end, callback) {\n    var records = [];\n    var chunks  = this.getChunks(ref, beg, end);\n    var vcfThis = this;\n\n    if (chunks == -1) {\n      return callback([]);\n    }\n\n    (function loop(x) {\n      if (x < chunks.length) {\n        vcfThis.inflateRegion(vcfThis.vcf_data, chunks[x].start, chunks[x].end, function (record, ebsz) {\n          var last = record.byteLength - ebsz + chunks[x].inner_end;\n          record = vcfThis.buffer2String(record).slice(chunks[x].inner_start, last);\n\n          if (record.length > 0) {\n            record = record.split('\\n').filter(function (rec) {\n              if (rec.length > 0) {\n                var n = parseInt(rec.split('\\t')[1]);\n                return ((beg <= n) && (n <= end));\n              }\n            }).join('\\n');\n\n            records.push(record);\n          }\n\n          loop(++x);\n        });\n      } else {\n        callback(records.join('\\n'));\n      }\n    })(0);\n  };\n\n  VCFReader.prototype.getChunks = function (ref, beg, end) {\n    var tbi     = this.tabix;\n    var vcfThis = this;\n\n    ref = tbi.head.names.indexOf(ref.toString());\n\n    if (ref == -1) {\n      return -1;\n    }\n\n    var bids  = this.reg2bins(beg, end + 1).filter(function (x) { return typeof tbi.bhash[ref][x] != 'undefined'; });\n    var bcnks = bids.map(function (x) { return vcfThis.bin2Ranges(tbi, ref, x); });\n    var cnks  = bcnks.reduce(function (V, ranges) {\n      ranges.forEach(function (item) { V.push(item); });\n      return V;\n    }, []);\n\n    cnks = this.remove_duplicates(cnks);\n\n    return cnks;\n  };\n\n  VCFReader.prototype.inflateRegion = function (d, beg, end, cbfn) {\n    var blocks  = [];\n    var vcfThis = this;\n\n    var cb = function (block, nextBlockOffset) {\n      blocks.push(block);\n\n      if (nextBlockOffset == -1) {\n        cbfn(vcfThis.appendBuffers(blocks), blocks[blocks.length - 1].byteLength);\n      } else if (nextBlockOffset <= end) {\n        vcfThis.inflateBlock(d, nextBlockOffset, cb);\n      } else {\n        cbfn(vcfThis.appendBuffers(blocks), blocks[blocks.length - 1].byteLength);\n      }\n    };\n\n    this.inflateBlock(d, beg, cb);\n  };\n\n  VCFReader.prototype.inflateBlock = function (d, blockOffset, cbfn) {\n    var cb2 = function (hdobj) {\n      d.slice(blockOffset, hdobj.subhead.bsize + 1).fetch(function (block) {\n        var inflated_block  = inflate(block, hdSize, block.byteLength - hdSize);\n        var nextBlockOffset = blockOffset + hdobj.subhead.bsize + 1;\n\n        if (hdobj.subhead.bsize == 27) {\n          nextBlockOffset = -1; // last bgzf block\n        }\n\n        cbfn(inflated_block, nextBlockOffset);\n      });\n    };\n\n    this.getBGZFHD(d, blockOffset, cb2);\n  };\n\n  VCFReader.prototype.getBGZFHD = function (d, offset, cbfn) {\n    d.slice(offset, hdSize + 1).fetch(function (buf) {\n      var parser = new jParser(buf, bgzf_hd_fmt);\n      var hdobj  = parser.parse('bgzfHd');\n      cbfn(hdobj);\n    });\n  };\n\n  VCFReader.prototype.appendBuffers = function (bufferVec) {\n    var totalSize = 0;\n\n    for (var i = 0; i < bufferVec.length; i++) {\n      totalSize = totalSize + bufferVec[i].byteLength;\n    }\n\n    var tmp    = new Uint8Array(totalSize);\n    var offset = 0;\n\n    for (i = 0; i < bufferVec.length; i++) {\n      tmp.set(new Uint8Array(bufferVec[i]), offset);\n      offset = offset + bufferVec[i].byteLength;\n    }\n\n    return tmp.buffer;\n  };\n\n  VCFReader.prototype.buffer2String = function (resultBuffer) {\n    var s        = '';\n    var resultBB = new Uint8Array(resultBuffer);\n\n    for (var i = 0; i < resultBB.length; ++i) {\n      s += String.fromCharCode(resultBB[i]);\n    }\n\n    return s;\n  };\n\n  VCFReader.prototype.remove_duplicates = function (objectsArray) {\n    var usedObjects = {};\n\n    for (var i = objectsArray.length - 1; i >= 0; i--) {\n      var so = JSON.stringify(objectsArray[i]);\n\n      if (usedObjects[so]) {\n        objectsArray.splice(i, 1);\n      } else {\n        usedObjects[so] = true;\n      }\n    }\n\n    return objectsArray;\n  };\n\n  VCFReader.prototype.bin2Ranges = function (tbi, ref, binid) {\n    var ranges = [];\n    var bs     = tbi.indexseq[ref].binseq;\n    var cnkseq = bs[tbi.bhash[ref][binid]].chunkseq;\n    var cnk;\n\n    for (var i = 0; i < cnkseq.length; i++) {\n      cnk = cnkseq[i];\n\n      ranges.push({\n        start       : Math.floor(cnk.cnk_beg / _2p16),\n        inner_start : cnk.cnk_beg % _2p16,\n        end         : Math.floor(cnk.cnk_end / _2p16),\n        inner_end   : cnk.cnk_end % _2p16\n      });\n    }\n\n    return ranges;\n  };\n\n  VCFReader.prototype.reg2bins = function (beg, end) {\n    var list = [];\n    var i;\n\n    --end;\n\n    list.push(0);\n\n    for (i = 1    + (beg >> 26); i <= 1    + (end >> 26); ++i) { list.push(i); }\n    for (i = 9    + (beg >> 23); i <= 9    + (end >> 23); ++i) { list.push(i); }\n    for (i = 73   + (beg >> 20); i <= 73   + (end >> 20); ++i) { list.push(i); }\n    for (i = 585  + (beg >> 17); i <= 585  + (end >> 17); ++i) { list.push(i); }\n    for (i = 4681 + (beg >> 14); i <= 4681 + (end >> 14); ++i) { list.push(i); }\n\n    return list;\n  };\n\n  window.VCFReader = VCFReader;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = VCFReader;\n  }\n})();\n","var Genoverse = Base.extend({\n  // Defaults\n  urlParamTemplate   : 'r=__CHR__:__START__-__END__', // Overwrite this for your URL style\n  width              : 1000,\n  longestLabel       : 30,\n  defaultLength      : 5000,\n  defaultScrollDelta : 100,\n  tracks             : [],\n  highlights         : [],\n  plugins            : [],\n  dragAction         : 'scroll',         // Options are: scroll, select, off\n  wheelAction        : 'off',            // Options are: zoom, off\n  isStatic           : false,            // If true, will stop drag, select and zoom actions occurring\n  saveable           : false,            // If true, track configuration and ordering will be saved in sessionStorage/localStorage\n  saveKey            : '',               // Default key for sessionStorage/localStorage configuration is 'genoverse'. saveKey will be appended to this if it is set\n  storageType        : 'sessionStorage', // Set to localStorage for permanence\n  autoHideMessages   : true,             // Determines whether to collapse track messages by default\n  trackAutoHeight    : false,            // Determines whether to automatically resize tracks to show all their features (can be overridden by track.autoHeight)\n  hideEmptyTracks    : true,             // Determines whether to hide an automatically resized tracks if it has no features, or to show it empty (can be overridden by track.hideEmpty)\n  genome             : undefined,        // The genome used in the browser - can be an object or a string, which will be used to obtain a javascript file\n  useHash            : undefined,        // If true, window.location.hash is changed on navigation. If false, window.history.pushState is used. If undefined, pushState will be used if present in the browser\n\n  // Default coordinates for initial view, overwrite in your config\n  chr   : 1,\n  start : 1,\n  end   : 1000000,\n\n  constructor: function (config) {\n    var browser = this;\n\n    if (!this.supported()) {\n      return this.die('Your browser does not support this functionality');\n    }\n\n    config = config || {};\n\n    config.container = $(config.container); // Make sure container is a jquery object, jquery recognises itself automatically\n\n    if (!(config.container && config.container.length)) {\n      config.container = $('<div>').appendTo('body');\n    }\n\n    config.container.addClass('genoverse').data('genoverse', this);\n\n    $.extend(this, config);\n\n    this.eventNamespace = '.genoverse.' + (++Genoverse.id);\n    this.events         = { browser: {}, tracks: {} };\n\n    $.when(Genoverse.ready, this.loadGenome(), this.loadPlugins()).always(function () {\n      Genoverse.wrapFunctions(browser);\n      browser.init();\n    });\n  },\n\n  loadGenome: function () {\n    if (typeof this.genome === 'string') {\n      var genomeName = this.genome;\n\n      return $.ajax({\n        url      : Genoverse.origin + 'js/genomes/' + genomeName + '.js',\n        dataType : 'script',\n        context  : this,\n        success  : function () {\n          this.genome = Genoverse.Genomes[genomeName];\n\n          if (!this.genome) {\n            this.die('Unable to load genome ' + genomeName);\n          }\n        }\n      });\n    }\n  },\n\n  loadPlugins: function (plugins) {\n    var browser         = this;\n    var loadPluginsTask = $.Deferred();\n\n    plugins = plugins || this.plugins;\n\n    this.loadedPlugins = this.loadedPlugins || {};\n\n    for (var i in Genoverse.Plugins) {\n      this.loadedPlugins[i] = this.loadedPlugins[i] || 'script';\n    }\n\n    if (typeof plugins === 'string') {\n      plugins = [ plugins ];\n    }\n\n    function loadPlugin(plugin) {\n      var css      = Genoverse.origin + 'css/'        + plugin + '.css';\n      var js       = Genoverse.origin + 'js/plugins/' + plugin + '.js';\n      var deferred = $.Deferred();\n\n      function getCSS() {\n        function done() {\n          browser.loadedPlugins[plugin] = browser.loadedPlugins[plugin] || 'script';\n          deferred.resolve(plugin);\n        }\n\n        if (Genoverse.Plugins[plugin].noCSS || $('link[href=\"' + css + '\"]').length) {\n          return done();\n        }\n\n        $('<link href=\"' + css + '\" rel=\"stylesheet\">').on('load', done).appendTo('body');\n      }\n\n      if (browser.loadedPlugins[plugin] || $('script[src=\"' + js + '\"]').length) {\n        getCSS();\n      } else {\n        $.getScript(js, getCSS);\n      }\n\n      return deferred;\n    }\n\n    function initializePlugin(plugin) {\n      if (typeof Genoverse.Plugins[plugin] !== 'function' || browser.loadedPlugins[plugin] === true) {\n        return [];\n      }\n\n      var requires = Genoverse.Plugins[plugin].requires;\n      var deferred = $.Deferred();\n\n      function init() {\n        if (browser.loadedPlugins[plugin] !== true) {\n          Genoverse.Plugins[plugin].call(browser);\n          browser.container.addClass('gv-' + plugin.replace(/([A-Z])/g, '-$1').toLowerCase() + '-plugin');\n          browser.loadedPlugins[plugin] = true;\n        }\n\n        deferred.resolve();\n      }\n\n      if (requires) {\n        $.when(browser.loadPlugins(requires)).done(init);\n      } else {\n        init();\n      }\n\n      return deferred;\n    }\n\n    // Load plugins css file\n    $.when.apply($, $.map(plugins, loadPlugin)).done(function () {\n      var pluginsLoaded = [];\n      var plugin;\n\n      for (var i = 0; i < arguments.length; i++) {\n        plugin = arguments[i];\n\n        if (browser.loadedPlugins[plugin] !== true) {\n          pluginsLoaded.push(initializePlugin(plugin));\n        }\n      }\n\n      $.when.apply($, pluginsLoaded).always(loadPluginsTask.resolve);\n    });\n\n    return loadPluginsTask;\n  },\n\n  init: function () {\n    var width = this.width;\n\n    this.addDomElements(width);\n    this.addUserEventHandlers();\n\n    if (this.isStatic) {\n      this.dragAction       = this.wheelAction = 'off';\n      this.urlParamTemplate = false;\n    }\n\n    this.tracksById       = {};\n    this.prev             = {};\n    this.legends          = {};\n    this.saveKey          = this.saveKey ? 'genoverse-' + this.saveKey : 'genoverse';\n    this.urlParamTemplate = this.urlParamTemplate || '';\n    this.useHash          = typeof this.useHash === 'boolean' ? this.useHash : typeof window.history.pushState !== 'function';\n    this.textWidth        = document.createElement('canvas').getContext('2d').measureText('W').width;\n    this.labelWidth       = this.labelContainer.outerWidth(true);\n    this.width           -= this.labelWidth;\n    this.paramRegex       = this.urlParamTemplate ? new RegExp('([?&;])' + this.urlParamTemplate\n      .replace(/(\\b(\\w+=)?__CHR__(.)?)/,   '$2([\\\\w\\\\.]+)$3')\n      .replace(/(\\b(\\w+=)?__START__(.)?)/, '$2(\\\\d+)$3')\n      .replace(/(\\b(\\w+=)?__END__(.)?)/,   '$2(\\\\d+)$3') + '([;&])'\n    ) : '';\n\n    var urlCoords = this.getURLCoords();\n    var coords    = urlCoords.chr && urlCoords.start && urlCoords.end ? urlCoords : { chr: this.chr, start: this.start, end: this.end };\n\n    this.chr = coords.chr;\n\n    if (this.genome) {\n      this.chromosomeSize = this.genome[this.chr].size;\n    }\n\n    this.canChangeChr = !!this.genome;\n\n    if (this.saveable) {\n      this.loadConfig();\n    } else {\n      this.addTracks();\n    }\n\n    this.setRange(coords.start, coords.end);\n\n    if (this.highlights.length) {\n      this.addHighlights(this.highlights);\n    }\n  },\n\n  loadConfig: function () {\n    this.defaultTracks = $.extend([], true, this.tracks);\n\n    var config = window[this.storageType].getItem(this.saveKey);\n\n    if (config) {\n      config = JSON.parse(config);\n    } else {\n      return this.addTracks();\n    }\n\n    var tracksByNamespace = Genoverse.getAllTrackTypes();\n    var tracks            = [];\n    var tracksById        = {};\n    var savedConfig       = {};\n    var i, prop, track;\n\n    function setConfig(track, conf) {\n      for (prop in conf) {\n        if (prop === 'config') {\n          savedConfig[conf.id] = conf[prop];\n        } else {\n          if (prop === 'height') {\n            conf[prop] = parseInt(conf[prop], 10);\n\n            if (isNaN(conf[prop])) {\n              continue;\n            }\n          }\n\n          track.prototype[prop] = conf[prop];\n        }\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id) {\n        tracksById[this.tracks[i].prototype.id] = this.tracks[i];\n      }\n    }\n\n    for (i = 0; i < config.length; i++) {\n      track = tracksById[config[i].id];\n\n      if (track) {\n        setConfig(track, config[i]);\n        track._fromStorage = true;\n      } else if (tracksByNamespace[config[i].namespace]) {\n        track = tracksByNamespace[config[i].namespace];\n\n        this.trackIds = this.trackIds || {};\n        this.trackIds[track.prototype.id] = this.trackIds[track.prototype.id] || 1;\n\n        config[i].id = config[i].id || track.prototype.id;\n\n        track = track.extend({ id: !tracksById[config[i].id] ? config[i].id : track.prototype.id + (tracksById[track.prototype.id] ? this.trackIds[track.prototype.id]++ : '') });\n\n        setConfig(track, config[i]);\n        tracks.push(track);\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id && !this.tracks[i]._fromStorage) {\n        continue;\n      }\n\n      tracks.push(this.tracks[i]);\n    }\n\n    this.tracks      = tracks;\n    this.savedConfig = savedConfig;\n\n    this.addTracks();\n  },\n\n  saveConfig: function () {\n    if (this._constructing || !this.saveable) {\n      return;\n    }\n\n    var config = [];\n    var conf, j;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].id && !(this.tracks[i] instanceof Genoverse.Track.Legend) && !(this.tracks[i] instanceof Genoverse.Track.HighlightRegion)) {\n        // when saving height, initialHeight is the height of the track once margins have been added, while defaultHeight is the DEFINED height of the track.\n        // Subtracting the difference between them gives you back the correct height to input back into the track when loading configuration\n        conf = {\n          id         : this.tracks[i].id,\n          namespace  : this.tracks[i].namespace,\n          order      : this.tracks[i].order,\n          autoHeight : this.tracks[i].autoHeight,\n          height     : this.tracks[i].height - (this.tracks[i].initialHeight - this.tracks[i].defaultHeight)\n        };\n\n        if (this.tracks[i].config) {\n          for (j in this.tracks[i].config) {\n            conf.config    = conf.config || {};\n            conf.config[j] = this.tracks[i].config[j];\n          }\n        }\n\n        config.push(conf);\n      }\n    }\n\n    // Safari in private browsing mode does not allow writes to storage, so wrap in a try/catch to stop errors occuring\n    try {\n      window[this.storageType].setItem(this.saveKey, JSON.stringify(config));\n    } catch (e) {}\n  },\n\n  resetConfig: function () {\n    // Non removable highlights should be re-added after reset\n    var unremovableHighlights = [];\n\n    if (this.tracksById.highlights) {\n      this.tracksById.highlights.removeHighlights();\n      unremovableHighlights = $.map(this.tracksById.highlights.prop('featuresById'), function (h) { return h; });\n    }\n\n    window[this.storageType].removeItem(this.saveKey);\n\n    this._constructing = true;\n    this.savedConfig   = {};\n\n    this.removeTracks($.extend([],    this.tracks)); // Shallow clone to ensure that removeTracks doesn't hit problems when splicing this.tracks\n    this.addTracks($.extend(true, [], this.defaultTracks));\n\n    if (unremovableHighlights.length) {\n      this.addHighlights(unremovableHighlights);\n    }\n\n    this._constructing = false;\n  },\n\n  addDomElements: function (width) {\n    this.menus          = $();\n    this.labelContainer = $('<ul class=\"gv-label-container\">').appendTo(this.container).sortable({\n      items  : 'li:not(.gv-unsortable)',\n      handle : '.gv-handle',\n      axis   : 'y',\n      helper : 'clone',\n      cursor : 'move',\n      update : $.proxy(this.updateTrackOrder, this),\n      start  : function (e, ui) {\n        ui.placeholder.css({ height: ui.item.height(), visibility: 'visible' }).html(ui.item.html());\n        ui.helper.hide();\n      }\n    });\n\n    this.wrapper  = $('<div class=\"gv-wrapper\">').appendTo(this.container);\n    this.selector = $('<div class=\"gv-selector gv-crosshair\">').appendTo(this.wrapper);\n\n    this.selectorControls = this.zoomInHighlight = this.zoomOutHighlight = $();\n\n    this.container.addClass('gv-canvas-container').width(width);\n\n    if (!this.isStatic) {\n      this.selectorControls = $(\n        '<div class=\"gv-selector-controls gv-panel\">'         +\n        '  <div class=\"gv-button-set\">'                       +\n        '  <div class=\"gv-position\">'                         +\n        '    <div class=\"gv-chr\"></div>'                      +\n        '    <div class=\"gv-start-end\">'                      +\n        '      <div class=\"gv-start\"></div>'                  +\n        '      <div class=\"gv-end\"></div>'                    +\n        '    </div>'                                          +\n        '  </div>'                                            +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-zoom-here\">Zoom here</button>' +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-center\">Center</button>'       +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-highlight\">Highlight</button>' +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-cancel\">Cancel</button>'       +\n        '  </div>'                                            +\n        '</div>'\n      ).appendTo(this.selector);\n\n      this.zoomInHighlight = $(\n        '<div class=\"gv-canvas-zoom gv-i\">' +\n        '  <div class=\"gv-t gv-l gv-h\"></div>' +\n        '  <div class=\"gv-t gv-r gv-h\"></div>' +\n        '  <div class=\"gv-t gv-l gv-v\"></div>' +\n        '  <div class=\"gv-t gv-r gv-v\"></div>' +\n        '  <div class=\"gv-b gv-l gv-h\"></div>' +\n        '  <div class=\"gv-b gv-r gv-h\"></div>' +\n        '  <div class=\"gv-b gv-l gv-v\"></div>' +\n        '  <div class=\"gv-b gv-r gv-v\"></div>' +\n        '</div>'\n      ).appendTo('body');\n\n      this.zoomOutHighlight = this.zoomInHighlight.clone().toggleClass('gv-i gv-o').appendTo('body');\n    }\n  },\n\n  addUserEventHandlers: function () {\n    var browser        = this;\n    var documentEvents = {};\n\n    this.container.on({\n      mousedown: function (e) {\n        browser.hideMessages();\n\n        // Only scroll on left click, and do nothing if clicking on a button in selectorControls\n        if ((!e.which || e.which === 1) && !(this === browser.selector[0] && e.target !== this)) {\n          browser.mousedown(e);\n        }\n\n        return false;\n      },\n      mousewheel: function (e, delta, deltaX, deltaY) {\n        if (browser.noWheelZoom) {\n          return true;\n        }\n\n        browser.hideMessages();\n\n        if (deltaY === 0 && deltaX !== 0) {\n          browser.startDragScroll(e);\n          browser.move(-deltaX * 10);\n          browser.stopDragScroll(false);\n        } else if (browser.wheelAction === 'zoom') {\n          return browser.mousewheelZoom(e, delta);\n        }\n      },\n      dblclick: function (e) {\n        if (browser.isStatic) {\n          return true;\n        }\n\n        browser.hideMessages();\n        browser.mousewheelZoom(e, 1);\n      }\n    }, '.gv-image-container, .gv-selector');\n\n    this.selectorControls.on('click', function (e) {\n      var pos = browser.getSelectorPosition();\n\n      switch (e.target.className) {\n        case 'gv-zoom-here' : browser.setRange(pos.start, pos.end, true); break;\n        case 'gv-center'    : browser.moveTo(browser.chr, pos.start, pos.end, true, true); browser.cancelSelect(); break;\n        case 'gv-highlight' : browser.addHighlight({ chr: browser.chr, start: pos.start, end: pos.end });\n        case 'gv-cancel'    : browser.cancelSelect(); break;\n        default             : break;\n      }\n    });\n\n    documentEvents['mouseup'    + this.eventNamespace] = $.proxy(this.mouseup,   this);\n    documentEvents['mousemove'  + this.eventNamespace] = $.proxy(this.mousemove, this);\n    documentEvents['keydown'    + this.eventNamespace] = $.proxy(this.keydown,   this);\n    documentEvents['keyup'      + this.eventNamespace] = $.proxy(this.keyup,     this);\n    documentEvents['mousewheel' + this.eventNamespace] = function (e) {\n      if (browser.wheelAction === 'zoom') {\n        if (browser.wheelTimeout) {\n          clearTimeout(browser.wheelTimeout);\n        }\n\n        browser.noWheelZoom  = browser.noWheelZoom || e.target !== browser.container[0];\n        browser.wheelTimeout = setTimeout(function () { browser.noWheelZoom = false; }, 300);\n      }\n    };\n\n    $(document).on(documentEvents);\n    $(window).on((this.useHash ? 'hashchange' : 'popstate') + this.eventNamespace, $.proxy(this.popState, this));\n  },\n\n  onTracks: function () {\n    var args = $.extend([], arguments);\n    var func = args.shift();\n    var mvc;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].disabled) {\n        continue;\n      }\n\n      mvc = this.tracks[i]._interface[func];\n\n      if (mvc) {\n        this.tracks[i][mvc][func].apply(this.tracks[i][mvc], args);\n      } else if (this.tracks[i][func]) {\n        this.tracks[i][func].apply(this.tracks[i], args);\n      }\n    }\n  },\n\n  reset: function () {\n    this.onTracks.apply(this, [ 'reset' ].concat([].slice.call(arguments)));\n    this.prev  = {};\n    this.scale = 9e99; // arbitrary value so that setScale resets track scales as well\n    this.setRange(this.start, this.end);\n  },\n\n  setWidth: function (width) {\n    this.width  = width;\n    this.width -= this.labelWidth;\n\n    if (this.controlPanel) {\n      this.width -= this.controlPanel.width();\n    }\n\n    if (this.superContainer) {\n      this.superContainer.width(width);\n      this.container.width(this.width);\n    } else {\n      this.container.width(width);\n    }\n\n    this.onTracks('setWidth', this.width);\n    this.reset('resizing');\n  },\n\n  mousewheelZoom: function (e, delta) {\n    var browser = this;\n\n    clearTimeout(this.zoomDeltaTimeout);\n    clearTimeout(this.zoomTimeout);\n\n    this.zoomDeltaTimeout = setTimeout(function () {\n      if (delta > 0) {\n        browser.zoomInHighlight.css({ left: e.pageX - 20, top: e.pageY - 20, display: 'block' }).animate({\n          width: 80, height: 80, top: '-=20', left: '-=20'\n        }, {\n          complete: function () { $(this).css({ width: 40, height: 40, display: 'none' }); }\n        });\n      } else {\n        browser.zoomOutHighlight.css({ left: e.pageX - 40, top: e.pageY - 40, display: 'block' }).animate({\n          width: 40, height: 40, top: '+=20', left: '+=20'\n        }, {\n          complete: function () { $(this).css({ width: 80, height: 80, display: 'none' }); }\n        });\n      }\n    }, 100);\n\n    this.zoomTimeout = setTimeout(function () {\n      browser[delta > 0 ? 'zoomIn' : 'zoomOut'](e.pageX - browser.container.offset().left - browser.labelWidth);\n\n      if (browser.dragAction === 'select') {\n        browser.moveSelector(e);\n      }\n    }, 300);\n\n    return false;\n  },\n\n  startDragScroll: function (e) {\n    this.dragging    = 'scroll';\n    this.scrolling   = !e;\n    this.dragOffset  = e ? e.pageX - this.left : 0;\n    this.dragStart   = this.start;\n    this.scrollDelta = Math.max(this.scale, this.defaultScrollDelta);\n  },\n\n  stopDragScroll: function (update) {\n    this.dragging  = false;\n    this.scrolling = false;\n\n    if (update !== false) {\n      if (this.start !== this.dragStart) {\n        this.updateURL();\n      }\n\n      this.checkTrackHeights();\n    }\n  },\n\n  startDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    var x = Math.max(0, e.pageX - this.wrapper.offset().left - 2);\n\n    this.dragging        = 'select';\n    this.selectorStalled = false;\n    this.selectorStart   = x;\n\n    this.selector.css({ left: x, width: 0 }).removeClass('gv-crosshair');\n    this.selectorControls.hide();\n  },\n\n  stopDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    this.dragging        = false;\n    this.selectorStalled = true;\n\n    if (this.selector.outerWidth(true) < 2) {\n      return this.cancelSelect();\n    }\n\n    // Calculate the position, so that selectorControls appear near the mouse cursor\n    var top = Math.min(e.pageY - this.wrapper.offset().top, this.wrapper.outerHeight(true) - 1.2 * this.selectorControls.outerHeight(true));\n    var pos = this.getSelectorPosition();\n\n    this.selectorControls.find('.gv-chr').html(this.chr);\n    this.selectorControls.find('.gv-start').html(pos.start);\n    this.selectorControls.find('.gv-end').html(pos.end);\n\n    this.selectorControls.find('.gv-selector-location').html(this.chr + ':' + pos.start + '-' + pos.end).end().css({\n      top  : top,\n      left : this.selector.outerWidth(true) / 2 - this.selectorControls.outerWidth(true) / 2\n    }).show();\n  },\n\n  cancelSelect: function (keepDragging) {\n    if (!keepDragging) {\n      this.dragging = false;\n    }\n\n    this.selectorStalled = false;\n\n    this.selector.addClass('gv-crosshair').width(0);\n    this.selectorControls.hide();\n\n    if (this.dragAction === 'scroll') {\n      this.selector.hide();\n    }\n  },\n\n  dragSelect: function (e) {\n    var x = e.pageX - this.wrapper.offset().left;\n\n    if (x > this.selectorStart) {\n      this.selector.css({\n        left  : this.selectorStart,\n        width : Math.min(x - this.selectorStart, this.width - this.selectorStart - 1)\n      });\n    } else {\n      this.selector.css({\n        left  : Math.max(x, 1),\n        width : Math.min(this.selectorStart - x, this.selectorStart - 1)\n      });\n    }\n  },\n\n  setDragAction: function (action, keepSelect) {\n    this.dragAction = action;\n\n    if (this.dragAction === 'select') {\n      this.selector.addClass('gv-crosshair').width(0).show();\n    } else if (keepSelect && !this.selector.hasClass('gv-crosshair')) {\n      this.selectorStalled = false;\n    } else {\n      this.cancelSelect();\n      this.selector.hide();\n    }\n  },\n\n  toggleSelect: function (on) {\n    if (on) {\n      this.prev.dragAction = 'scroll';\n      this.setDragAction('select');\n    } else {\n      this.setDragAction(this.prev.dragAction, true);\n      delete this.prev.dragAction;\n    }\n  },\n\n  setWheelAction: function (action) {\n    this.wheelAction = action;\n  },\n\n  keydown: function (e) {\n    if (e.which === 16 && !this.prev.dragAction && this.dragAction === 'scroll') { // shift key\n      this.toggleSelect(true);\n    } else if (e.which === 27) { // escape key\n      this.cancelSelect();\n      this.closeMenus();\n    }\n  },\n\n  keyup: function (e) {\n    if (e.which === 16 && this.prev.dragAction) { // shift key\n      this.toggleSelect();\n    }\n  },\n\n  mousedown: function (e) {\n    if (e.shiftKey) {\n      if (this.dragAction === 'scroll') {\n        this.toggleSelect(true);\n      }\n    } else if (this.prev.dragAction) {\n      this.toggleSelect();\n    }\n\n    switch (this.dragAction) {\n      case 'select' : this.startDragSelect(e); break;\n      case 'scroll' : this.startDragScroll(e); break;\n      default       : break;\n    }\n  },\n\n  mouseup: function (e) {\n    switch (this.dragging) {\n      case 'select' : this.stopDragSelect(e); break;\n      case 'scroll' : this.stopDragScroll();  break;\n      default       : break;\n    }\n  },\n\n  mousemove: function (e) {\n    if (this.dragging && !this.scrolling) {\n      switch (this.dragAction) {\n        case 'scroll' : this.move(e.pageX - this.dragOffset - this.left); break;\n        case 'select' : this.dragSelect(e); break;\n        default       : break;\n      }\n    } else if (this.dragAction === 'select') {\n      this.moveSelector(e);\n    }\n  },\n\n  moveSelector: function (e) {\n    if (!this.selectorStalled) {\n      this.selector.css('left', e.pageX - this.wrapper.offset().left - 2);\n    }\n  },\n\n  move: function (delta) {\n    var scale = this.scale;\n    var start, end, left;\n\n    if (scale > 1) {\n      delta = Math.round(delta / scale) * scale; // Force stepping by base pair when in small regions\n    }\n\n    left = this.left + delta;\n\n    if (left <= this.minLeft) {\n      left  = this.minLeft;\n      delta = this.minLeft - this.left;\n    } else if (left >= this.maxLeft) {\n      left  = this.maxLeft;\n      delta = this.maxLeft - this.left;\n    }\n\n    start = Math.max(Math.round(this.start - delta / scale), 1);\n    end   = start + this.length - 1;\n\n    if (end > this.chromosomeSize) {\n      end   = this.chromosomeSize;\n      start = end - this.length + 1;\n    }\n\n    this.left = left;\n\n    if (start !== this.dragStart) {\n      this.closeMenus();\n      this.cancelSelect(true);\n    }\n\n    this.onTracks('move', delta);\n    this.setRange(start, end);\n  },\n\n  moveTo: function (chr, start, end, update, keepLength) {\n    if (typeof chr !== 'undefined' && chr != this.chr) {\n      if (this.canChangeChr) {\n        if (this.genome && this.genome[chr]) {\n          this.chr            = chr;\n          this.chromosomeSize = this.genome[chr].size;\n          this.start          = this.end = this.scale = -1;\n        } else {\n          this.die('Chromosome cannot be found in genome');\n        }\n\n        this.onTracks('changeChr');\n      } else {\n        this.die('Chromosome changing is not allowed');\n      }\n    }\n\n    this.setRange(start, end, update, keepLength);\n\n    if (this.prev.scale === this.scale) {\n      this.left = Math.max(Math.min(this.left + Math.round((this.prev.start - this.start) * this.scale), this.maxLeft), this.minLeft);\n      this.onTracks('moveTo', this.chr, this.start, this.end, (this.prev.start - this.start) * this.scale);\n    }\n  },\n\n  setRange: function (start, end, update, keepLength) {\n    this.prev.start = this.start;\n    this.prev.end   = this.end;\n    this.start      = Math.min(Math.max(typeof start === 'number' ? Math.floor(start) : parseInt(start, 10), 1), this.chromosomeSize);\n    this.end        = Math.max(Math.min(typeof end   === 'number' ? Math.floor(end)   : parseInt(end,   10), this.chromosomeSize), 1);\n\n    if (this.end < this.start) {\n      this.end = Math.min(this.start + this.defaultLength - 1, this.chromosomeSize);\n    }\n\n    if (keepLength && this.end - this.start + 1 !== this.length) {\n      if (this.end === this.chromosomeSize) {\n        this.start = this.end - this.length + 1;\n      } else {\n        var center = (this.start + this.end) / 2;\n        this.start = Math.max(Math.floor(center - this.length / 2), 1);\n        this.end   = this.start + this.length - 1;\n\n        if (this.end > this.chromosomeSize) {\n          this.end   = this.chromosomeSize;\n          this.start = this.end - this.length + 1;\n        }\n      }\n    } else {\n      this.length = this.end - this.start + 1;\n    }\n\n    this.setScale();\n\n    if (update === true && (this.prev.start !== this.start || this.prev.end !== this.end)) {\n      this.updateURL();\n    }\n  },\n\n  setScale: function () {\n    this.prev.scale  = this.scale;\n    this.scale       = this.width / this.length;\n    this.scaledStart = this.start * this.scale;\n\n    if (this.prev.scale !== this.scale) {\n      this.left        = 0;\n      this.minLeft     = Math.round((this.end   - this.chromosomeSize) * this.scale);\n      this.maxLeft     = Math.round((this.start - 1) * this.scale);\n      this.labelBuffer = Math.ceil(this.textWidth / this.scale) * this.longestLabel;\n\n      if (this.prev.scale) {\n        this.cancelSelect();\n        this.closeMenus();\n      }\n\n      this.onTracks('setScale');\n      this.onTracks('makeFirstImage');\n    }\n  },\n\n  checkTrackHeights: function () {\n    if (this.dragging) {\n      return;\n    }\n\n    this.onTracks('checkHeight');\n  },\n\n  resetTrackHeights: function () {\n    this.onTracks('resetHeight');\n  },\n\n  zoomIn: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start + x / (2 * this.scale));\n    var end   = this.length === 2 ? start : Math.round(start + (this.length - 1) / 2);\n\n    this.setRange(start, end, true);\n  },\n\n  zoomOut: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start - x / this.scale);\n    var end   = this.length === 1 ? start + 1 : Math.round(start + 2 * (this.length - 1));\n\n    this.setRange(start, end, true);\n  },\n\n  addTrack: function (track, after) {\n    return this.addTracks([ track ], after)[0];\n  },\n\n  addTracks: function (tracks, after) {\n    var defaults = {\n      browser : this,\n      width   : this.width\n    };\n\n    var push = !!tracks;\n    var order;\n\n    tracks = tracks || $.extend([], this.tracks);\n\n    if (push && !$.grep(this.tracks, function (t) { return typeof t === 'function'; }).length) {\n      var insertAfter = (after ? $.grep(this.tracks, function (t) { return t.order < after; }) : this.tracks).sort(function (a, b) { return b.order - a.order; })[0];\n\n      if (insertAfter) {\n        order = insertAfter.order + 0.1;\n      }\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      tracks[i] = new tracks[i]($.extend(defaults, {\n        namespace : Genoverse.getTrackNamespace(tracks[i]),\n        order     : typeof order === 'number' ? order : i,\n        config    : this.savedConfig ? $.extend(true, {}, this.savedConfig[tracks[i].prototype.id]) : undefined\n      }));\n\n      if (tracks[i].id) {\n        this.tracksById[tracks[i].id] = tracks[i];\n      }\n\n      if (push) {\n        this.tracks.push(tracks[i]);\n      } else {\n        this.tracks[i] = tracks[i];\n      }\n    }\n\n    this.sortTracks();\n    this.saveConfig();\n\n    return tracks;\n  },\n\n  removeTrack: function (track) {\n    this.removeTracks((track.prop('childTracks') || []).concat(track));\n  },\n\n  removeTracks: function (tracks) {\n    var i = tracks.length;\n    var track, j;\n\n    while (i--) {\n      track = tracks[i];\n      j     = this.tracks.length;\n\n      while (j--) {\n        if (track === this.tracks[j]) {\n          this.tracks.splice(j, 1);\n          break;\n        }\n      }\n\n      if (track.id) {\n        delete this.tracksById[track.id];\n      }\n\n      track.destructor(); // Destroy DOM elements and track itself\n    }\n\n    this.saveConfig();\n  },\n\n  sortTracks: function () {\n    if ($.grep(this.tracks, function (t) { return typeof t !== 'object'; }).length) {\n      return;\n    }\n\n    var sorted     = $.extend([], this.tracks).sort(function (a, b) { return a.order - b.order; });\n    var labels     = $();\n    var containers = $();\n    var container;\n\n    for (var i = 0; i < sorted.length; i++) {\n      if (sorted[i].prop('parentTrack')) {\n        continue;\n      }\n\n      if (!sorted[i].prop('fixedOrder')) {\n        sorted[i].prop('order', i);\n      }\n\n      container = sorted[i].prop('superContainer') || sorted[i].prop('container');\n\n      if (sorted[i].prop('menus').length) {\n        sorted[i].prop('top', container.position().top);\n      }\n\n      labels.push(sorted[i].prop('label')[0]);\n      containers.push(container[0]);\n    }\n\n    this.labelContainer.append(labels);\n    this.wrapper.append(containers);\n\n    // Correct the order\n    this.tracks = sorted;\n\n    labels.map(function () { return $(this).data('track'); }).each(function () {\n      if (this.prop('menus').length) {\n        var diff = (this.prop('superContainer') || this.prop('container')).position().top - this.prop('top');\n        this.prop('menus').css('top', function (i, top) { return parseInt(top, 10) + diff; });\n        this.prop('top', null);\n      }\n    });\n\n    sorted = labels = containers = null;\n  },\n\n  updateTrackOrder: function (e, ui) {\n    var track = ui.item.data('track');\n\n    if (track.prop('unsortable') || track.prop('fixedOrder')) {\n      return;\n    }\n\n    var prev = ui.item.prev().data('track');\n    var next = ui.item.next().data('track');\n    var p    = prev ? prev.prop('order') : 0;\n    var n    = next ? next.prop('order') : 0;\n    var o    = p || n;\n    var order;\n\n    if (prev && next && Math.floor(n) === Math.floor(p)) {\n      order = p + (n - p) / 2;\n    } else {\n      order = o + (p ? 1 : -1) * Math.abs(Math.round(o) - o || 1) / 2;\n    }\n\n    track.prop('order', order);\n\n    this.sortTracks();\n    this.saveConfig();\n  },\n\n  updateURL: function () {\n    if (this.urlParamTemplate) {\n      if (this.useHash) {\n        window.location.hash = this.getQueryString();\n      } else {\n        window.history.pushState({}, '', this.getQueryString());\n      }\n    }\n  },\n\n  popState: function () {\n    var coords = this.getURLCoords();\n    var start  = parseInt(coords.start, 10);\n    var end    = parseInt(coords.end,   10);\n\n    if (\n      (coords.chr && coords.chr != this.chr) ||\n      (coords.start && !(start === this.start && end === this.end))\n    ) {\n      // FIXME: a back action which changes scale or a zoom out will reset tracks, since scrollStart will not be the same as it was before\n      this.moveTo(coords.chr, start, end);\n    }\n\n    this.closeMenus();\n    this.hideMessages();\n  },\n\n  getURLCoords: function () {\n    var match  = ((this.useHash ? window.location.hash.replace(/^#/, '?') || window.location.search : window.location.search) + '&').match(this.paramRegex);\n    var coords = {};\n    var i      = 0;\n\n    if (!match) {\n      return coords;\n    }\n\n    match = match.slice(2, -1);\n\n    $.each(this.urlParamTemplate.split('__'), function () {\n      var tmp = this.match(/^(CHR|START|END)$/);\n\n      if (tmp) {\n        coords[tmp[1].toLowerCase()] = tmp[1] === 'CHR' ? match[i++] : parseInt(match[i++], 10);\n      }\n    });\n\n    return coords;\n  },\n\n  getQueryString: function () {\n    var location = this.urlParamTemplate\n      .replace('__CHR__',   this.chr)\n      .replace('__START__', this.start)\n      .replace('__END__',   this.end);\n\n    return this.useHash ? location : window.location.search ? (window.location.search + '&').replace(this.paramRegex, '$1' + location + '$5').slice(0, -1) : '?' + location;\n  },\n\n  getChromosomeSize: function (chr) {\n    return chr && this.genome && this.genome[chr] ? this.genome[chr].size : this.chromosomeSize;\n  },\n\n  supported: function () {\n    var el = document.createElement('canvas');\n    return !!(el.getContext && el.getContext('2d'));\n  },\n\n  die: function (error, el) {\n    if (el && el.length) {\n      el.html(error);\n    } else {\n      throw error;\n    }\n\n    this.failed = true;\n  },\n\n  menuTemplate: $(\n    '<div class=\"gv-menu\">'                                            +\n      '<div class=\"gv-close gv-menu-button fa fa-times-circle\"></div>' +\n      '<div class=\"gv-menu-loading\">Loading...</div>'                  +\n      '<div class=\"gv-menu-content\">'                                  +\n        '<div class=\"gv-title\"></div>'                                 +\n        '<a class=\"gv-focus\" href=\"#\">Focus here</a>'                  +\n        '<a class=\"gv-highlight\" href=\"#\">Highlight this feature</a>'  +\n        '<table></table>'                                              +\n      '</div>'                                                         +\n    '</div>'\n  ).on('click', function (e) {\n    if ($(e.target).hasClass('gv-close')) {\n      $(this).fadeOut('fast', function () {\n        var data = $(this).data();\n\n        if (data.track) {\n          data.track.prop('menus', data.track.prop('menus').not(this));\n        }\n\n        data.browser.menus = data.browser.menus.not(this);\n      });\n    }\n  }),\n\n  makeMenu: function (features, event, track) {\n    if (!features) {\n      return false;\n    }\n\n    if (!Array.isArray(features)) {\n      features = [ features ];\n    }\n\n    if (features.length === 0) {\n      return false;\n    } else if (features.length === 1) {\n      return this.makeFeatureMenu(features[0], event, track);\n    }\n\n    var browser   = this;\n    var menu      = this.menuTemplate.clone(true).data({ browser: this });\n    var contentEl = $('.gv-menu-content', menu).addClass('gv-menu-content-first');\n    var table     = $('table', contentEl);\n\n    $('.gv-focus, .gv-highlight, .gv-menu-loading', menu).remove();\n    $('.gv-title', menu).html(features.length + ' features');\n\n    $.each(features.sort(function (a, b) { return a.start - b.start; }), function (i, feature) {\n      var location = feature.chr + ':' + feature.start + (feature.end === feature.start ? '' : '-' + feature.end);\n      var title    = feature.menuLabel || feature.name || (Array.isArray(feature.label) ? feature.label.join(' ') : feature.label) || (feature.id + '');\n\n      $('<a href=\"#\">').html(title.match(location) ? title : (location + ' ' + title)).on('click', function (e) {\n        browser.makeFeatureMenu(feature, e, track);\n        return false;\n      }).appendTo($('<td>').appendTo($('<tr>').appendTo(table)));\n    });\n\n    $('<div class=\"gv-menu-scroll-wrapper\">').append(table).appendTo(contentEl)\n\n    menu.appendTo(this.superContainer || this.container).show();\n\n    if (event) {\n      menu.css({ left: 0, top: 0 }).position({ of: event, my: 'left top', collision: 'flipfit' });\n    }\n\n    this.menus = this.menus.add(menu);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(menu));\n    }\n\n    return menu;\n  },\n\n  makeFeatureMenu: function (feature, e, track) {\n    var browser   = this;\n    var container = this.superContainer || this.container;\n    var menu, content, loading, getMenu, isDeferred, i, j,  el, chr, start, end, linkData, key, columns, colspan;\n\n    function focus() {\n      var data    = $(this).data();\n      var length  = data.end - data.start + 1;\n      var context = Math.max(Math.round(length / 4), 25);\n\n      browser.moveTo(data.chr, data.start - context, data.end + context, true);\n\n      return false;\n    }\n\n    function highlight() {\n      browser.addHighlight($(this).data());\n      return false;\n    }\n\n    if (!feature.menuEl) {\n      menu       = browser.menuTemplate.clone(true).data({ browser: browser, feature: feature });\n      content    = $('.gv-menu-content', menu).remove();\n      loading    = $('.gv-menu-loading', menu);\n      getMenu    = track ? track.controller.populateMenu(feature) : feature;\n      isDeferred = typeof getMenu === 'object' && typeof getMenu.promise === 'function';\n\n      if (isDeferred) {\n        loading.show();\n      }\n\n      $.when(getMenu).done(function (properties) {\n        if (!Array.isArray(properties)) {\n          properties = [ properties ];\n        }\n\n        for (i = 0; i < properties.length; i++) {\n          table   = '';\n          el      = content.clone().addClass(i ? '' : 'gv-menu-content-first').appendTo(menu);\n          chr     = typeof properties[i].chr !== 'undefined' ? properties[i].chr : feature.chr;\n          start   = parseInt(typeof properties[i].start !== 'undefined' ? properties[i].start : feature.start, 10);\n          end     = parseInt(typeof properties[i].end   !== 'undefined' ? properties[i].end   : feature.end,   10);\n          columns = Math.max.apply(Math, $.map(properties[i], function (v) { return Array.isArray(v) ? v.length : 1; }));\n\n          $('.gv-title', el)[properties[i].title ? 'html' : 'remove'](properties[i].title);\n\n          if (track && start && end && !browser.isStatic) {\n            linkData = { chr: chr, start: start, end: Math.max(end, start), label: feature.label || (properties[i].title || '').replace(/<[^>]+>/g, ''), color: feature.color };\n\n            $('.gv-focus',     el).data(linkData).on('click', focus);\n            $('.gv-highlight', el).data(linkData).on('click', highlight);\n          } else {\n            $('.gv-focus, .gv-highlight', el).remove();\n          }\n\n          for (key in properties[i]) {\n            if (/^start|end$/.test(key) && properties[i][key] === false) {\n              continue;\n            }\n\n            if (key !== 'title') {\n              colspan = properties[i][key] === '' ? ' colspan=\"' + (columns + 1) + '\"' : '';\n              table  += '<tr><td' + colspan + '>' + key + '</td>';\n\n              if (!colspan) {\n                if (Array.isArray(properties[i][key])) {\n                  for (j = 0; j < properties[i][key].length; j++) {\n                    table += '<td>' + properties[i][key][j] + '</td>';\n                  }\n                } else if (columns === 1) {\n                  table += '<td>' + properties[i][key] + '</td>';\n                } else {\n                  table += '<td colspan=\"' + columns + '\">' + properties[i][key] + '</td>';\n                }\n              }\n\n              table += '</tr>';\n            }\n          }\n\n          $('table', el)[table ? 'html' : 'remove'](table);\n        }\n\n        if (isDeferred) {\n          loading.hide();\n        }\n      });\n\n      if (track) {\n        menu.addClass(track.id).data('track', track);\n      }\n\n      feature.menuEl = menu.appendTo(container);\n    } else {\n      feature.menuEl.appendTo(container); // Move the menu to the end of the container again, so that it will always be on top of other menus\n    }\n\n    browser.menus = browser.menus.add(feature.menuEl);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(feature.menuEl));\n    }\n\n    feature.menuEl.show(); // Must show before positioning, else position will be wrong\n\n    if (e) {\n      feature.menuEl.css({ left: 0, top: 0 }).position({ of: e, my: 'left top', collision: 'flipfit' });\n    }\n\n    return feature.menuEl;\n  },\n\n  closeMenus: function (obj) {\n    obj = obj || this;\n\n    obj.menus.filter(':visible').children('.gv-close').trigger('click');\n    obj.menus = $();\n  },\n\n  hideMessages: function () {\n    if (this.autoHideMessages) {\n      this.wrapper.find('.gv-message-container').addClass('gv-collapsed');\n    }\n  },\n\n  getSelectorPosition: function () {\n    var left  = this.selector.position().left;\n    var width = this.selector.outerWidth(true);\n    var start = Math.round(left / this.scale) + this.start;\n    var end   = Math.round((left + width) / this.scale) + this.start - 1;\n        end   = end <= start ? start : end;\n\n    return { start: start, end: end, left: left, width: width };\n  },\n\n  addHighlight: function (highlight) {\n    this.addHighlights([ highlight ]);\n  },\n\n  addHighlights: function (highlights) {\n    if (!this.tracksById.highlights) {\n      this.addTrack(Genoverse.Track.HighlightRegion);\n    }\n\n    this.tracksById.highlights.addHighlights(highlights);\n  },\n\n  on: function (events, obj, fn, once) {\n    var browser  = this;\n    var eventMap = {};\n    var i, j, f, fnString, event;\n\n    function makeEventMap(types, handler) {\n      types = types.split(' ');\n\n      for (var j = 0; j < types.length; j++) {\n        eventMap[types[j]] = (eventMap[types[j]] || []).concat(handler);\n      }\n    }\n\n    function makeFnString(func) {\n      return func.toString();\n    }\n\n    function compare(func) {\n      f = func.toString();\n\n      for (j = 0; j < fnString.length; j++) {\n        if (f === fnString[j]) {\n          return true;\n        }\n      }\n    }\n\n    if (typeof events === 'object') {\n      for (i in events) {\n        makeEventMap(i, events[i]);\n      }\n\n      obj = obj || this;\n    } else {\n      if (typeof fn === 'undefined') {\n        fn  = obj;\n        obj = this;\n      }\n\n      makeEventMap(events, fn);\n    }\n\n    var type = obj instanceof Genoverse.Track || obj === 'tracks' ? 'tracks' : 'browser';\n\n    for (i in eventMap) {\n      event = i + (once ? '.once' : '');\n\n      browser.events[type][event] = browser.events[type][event] || [];\n      fnString = $.map(eventMap[i], makeFnString);\n\n      if (!$.grep(browser.events[type][event], compare).length) {\n        browser.events[type][event].push.apply(browser.events[type][event], eventMap[i]);\n      }\n    }\n  },\n\n  once: function (events, obj, fn) {\n    this.on(events, obj, fn, true);\n  },\n\n  destroy: function () {\n    this.onTracks('destructor');\n    (this.superContainer || this.container).empty();\n\n    if (this.zoomInHighlight) {\n      this.zoomInHighlight.add(this.zoomOutHighlight).remove();\n    }\n\n    $(window).add(document).off(this.eventNamespace);\n\n    for (var key in this) {\n      delete this[key];\n    }\n  }\n}, {\n  id      : 0,\n  ready   : $.Deferred(),\n  origin  : (($('script[src]').filter(function () { return /\\/(?:Genoverse|genoverse\\.min.*)\\.js$/.test(this.src); }).attr('src') || '').match(/(.*)js\\/\\w+/) || [])[1] || '',\n  Genomes : {},\n  Plugins : {},\n\n  wrapFunctions: function (obj) {\n    for (var key in obj) {\n      if (typeof obj[key] === 'function' && typeof obj[key].ancestor !== 'function' && !key.match(/^(base|extend|constructor|on|once|prop|loadPlugins|loadGenome)$/)) {\n        Genoverse.functionWrap(key, obj);\n      }\n    }\n  },\n\n  /**\n   * functionWrap - wraps event handlers and adds debugging functionality\n   **/\n  functionWrap: function (key, obj) {\n    obj.functions = obj.functions || {};\n\n    if (obj.functions[key] || /^(before|after)/.test(key)) {\n      return;\n    }\n\n    var func      = key.substring(0, 1).toUpperCase() + key.substring(1);\n    var isBrowser = obj instanceof Genoverse;\n    var mainObj   = isBrowser || obj instanceof Genoverse.Track ? obj : obj.track;\n    var events    = isBrowser ? obj.events.browser : obj.browser.events.tracks;\n    var debug;\n\n    if (mainObj.debug) {\n      debug = [ isBrowser ? 'Genoverse' : mainObj.id || mainObj.name || 'Track' ];\n\n      if (!isBrowser && obj !== mainObj) {\n        debug.push(obj instanceof Genoverse.Track.Controller ? 'Controller' : obj instanceof Genoverse.Track.Model ? 'Model' : 'View');\n      }\n\n      debug = debug.concat(key).join('.');\n    }\n\n    obj.functions[key] = obj[key];\n\n    obj[key] = function () {\n      var args          = [].slice.call(arguments);\n      var currentConfig = (this._currentConfig || (this.track ? this.track._currentConfig : {}) || {}).func;\n      var rtn;\n\n      // Debugging functionality\n      // Enabled by \"debug\": true || 'time' || { functionName: true, ...} option\n      if (mainObj.debug === true) { // if \"debug\": true, simply log function call\n        console.log(debug);\n      } else if (mainObj.debug === 'time' || (typeof mainObj.debug === 'object' && mainObj.debug[key])) { // if debug: 'time' || { functionName: true, ...}, log function time\n        console.time('time: ' + debug);\n      }\n\n      function trigger(when) {\n        var once  = events[when + func + '.once'] || [];\n        var funcs = (events[when + func] || []).concat(once, typeof mainObj[when + func] === 'function' ? mainObj[when + func] : []);\n\n        if (once.length) {\n          delete events[when + func + '.once'];\n        }\n\n        for (var i = 0; i < funcs.length; i++) {\n          funcs[i].apply(this, args);\n        }\n      }\n\n      trigger.call(this, 'before');\n\n      if (currentConfig && currentConfig[key]) {\n         // override to add a value for this.base\n        rtn = function () {\n          this.base = this.functions[key] || function () {};\n          return currentConfig[key].apply(this, arguments);\n        }.apply(this, args);\n      } else {\n        rtn = this.functions[key].apply(this, args);\n      }\n\n      trigger.call(this, 'after');\n\n      if (mainObj.debug === 'time' || (typeof mainObj.debug === 'object' && mainObj.debug[key])) {\n        console.timeEnd('time: ' + debug);\n      }\n\n      return rtn;\n    };\n  },\n\n  getAllTrackTypes: function (namespace, n) {\n    namespace = namespace || Genoverse.Track;\n\n    if (n) {\n      namespace = namespace[n];\n    }\n\n    if (!namespace) {\n      return [];\n    }\n\n    var trackTypes = {};\n\n    $.each(namespace, function (type, func) {\n      if (typeof func === 'function' && !Base[type] && !/^(Controller|Model|View)$/.test(type)) {\n        $.each(Genoverse.getAllTrackTypes(namespace, type), function (subtype, fn) {\n          if (typeof fn === 'function') {\n            trackTypes[type + '.' + subtype] = fn;\n          }\n        });\n\n        trackTypes[type] = func;\n      }\n    });\n\n    return trackTypes;\n  },\n\n  getTrackNamespace: function (track) {\n    var trackTypes = Genoverse.getAllTrackTypes();\n    var namespaces = $.map(trackTypes, function (constructor, name) { return track === constructor || track.prototype instanceof constructor ? name : null }); // Find all namespaces which this track could be\n    var j          = namespaces.length;\n    var i;\n\n    // Find the most specific namespace for this track - the one which isn't a parent of any other namespaces this track could be\n    while (namespaces.length > 1) {\n      for (i = 0; i < namespaces.length - 1; i++) {\n        if (trackTypes[namespaces[i]].prototype instanceof trackTypes[namespaces[i + 1]]) {\n          namespaces.splice(i + 1, 1);\n          break;\n        } else if (trackTypes[namespaces[i + 1]].prototype instanceof trackTypes[namespaces[i]]) {\n          namespaces.splice(i, 1);\n          break;\n        }\n      }\n\n      if (j-- < 0) {\n        break; // Stop infinite loop if something went really wrong\n      }\n    }\n\n    return namespaces[0];\n  }\n});\n\n$(function () {\n  if ($('link[href^=\"' + Genoverse.origin + 'css/genoverse.css\"]').length) {\n    Genoverse.ready.resolve();\n  } else {\n    $('<link href=\"' + Genoverse.origin + 'css/genoverse.css\" rel=\"stylesheet\">').appendTo('body').on('load', Genoverse.ready.resolve);\n  }\n});\n\nwindow.Genoverse = Genoverse;\n\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = Genoverse;\n}\n","Genoverse.Track = Base.extend({\n  height     : 12,        // The height of the gv-track-container div\n  margin     : 2,         // The spacing between this track and the next\n  resizable  : true,      // Is the track resizable - can be true, false or 'auto'. Auto means the track will automatically resize to show all features, but the user cannot resize it themselves.\n  border     : true,      // Does the track have a bottom border\n  unsortable : false,     // Is the track unsortable by the user\n  fixedOrder : false,     // Is the track unsortable by the user or automatically - use for tracks which always need to go at the top/bottom\n  invert     : false,     // If true, features are drawn from the bottom of the track, rather than from the top. This is actually achieved by performing a CSS transform on the gv-image-container div\n  legend     : false,     // Does the track have a legend - can be true, false, or a Genoverse.Track.Legend extension/child class.\n  children   : undefined, // Does the track have any child tracks - can be one or an array of Genoverse.Track extension/child classes.\n  name       : undefined, // The name of the track, which appears in its label\n  autoHeight : undefined, // Does the track automatically resize so that all the features are visible\n  hideEmpty  : undefined, // If the track automatically resizes, should it be hidden when there are no features, or should an empty track still be shown\n\n  constructor: function (config) {\n    if (this.stranded || config.stranded) {\n      this.controller = this.controller || Genoverse.Track.Controller.Stranded;\n      this.model      = this.model      || Genoverse.Track.Model.Stranded;\n    }\n\n    this.models = {};\n    this.views  = {};\n\n    this.setInterface();\n    this.extend(config);\n    this.setDefaults();\n    this.setEvents();\n\n    Genoverse.wrapFunctions(this);\n\n    this.setLengthMap();\n    this.setMVC();\n\n    if (this.browser.scale) {\n      this.controller.setScale();\n      this.controller.makeFirstImage();\n    }\n\n    if (this.children) {\n      this.addChildTracks();\n    }\n\n    if (this.legend) {\n      this.addLegend();\n    }\n  },\n\n  setEvents: $.noop,\n\n  setDefaults: function () {\n    this.config            = this.config         || {};\n    this.configSettings    = this.configSettings || {};\n    this.defaultConfig     = this.defaultConfig  || {};\n    this.controls          = this.controls       || [];\n    this.defaultHeight     = this.height;\n    this.defaultAutoHeight = this.autoHeight;\n    this.autoHeight        = typeof this.autoHeight !== 'undefined' ? this.autoHeight : this.browser.trackAutoHeight;\n    this.hideEmpty         = typeof this.hideEmpty  !== 'undefined' ? this.hideEmpty  : this.browser.hideEmptyTracks;\n    this.height           += this.margin;\n    this.initialHeight     = this.height;\n\n    if (this.resizable === 'auto') {\n      this.autoHeight = true;\n    }\n\n    this.setDefaultConfig();\n  },\n\n  setDefaultConfig: function () {\n    for (var i in this.defaultConfig) {\n      if (typeof this.config[i] === 'undefined') {\n        this.config[i] = this.defaultConfig[i];\n      }\n    }\n\n    this._setCurrentConfig();\n  },\n\n  setInterface: function () {\n    var mvc = [ 'Controller', 'Model', 'View', 'controller', 'model', 'view' ];\n    var prop;\n\n    this._interface = {};\n\n    for (var i = 0; i < 3; i++) {\n      for (prop in Genoverse.Track[mvc[i]].prototype) {\n        if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(prop)) {\n          this._interface[prop] = mvc[i + 3];\n        }\n      }\n    }\n  },\n\n  setMVC: function () {\n    if (this.model && typeof this.model.abort === 'function') { // TODO: don't abort unless model is changed?\n      this.model.abort();\n    }\n\n    this._defaults = this._defaults || {};\n\n    var settings           = $.extend(true, {}, this.constructor.prototype, this.getSettingsForLength()[1]); // model, view, options\n    var controllerSettings = { prop: {}, func: {} };\n    var trackSettings      = {};\n    var i;\n\n    settings.controller = settings.controller || this.controller || Genoverse.Track.Controller;\n\n    for (i in settings) {\n      if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(i) && isNaN(i)) {\n        if (this._interface[i] === 'controller') {\n          controllerSettings[typeof settings[i] === 'function' ? 'func' : 'prop'][i] = settings[i];\n        }\n        // If we allow trackSettings to overwrite the MVC properties, we will potentially lose of information about instantiated objects that the track needs to perform future switching correctly.\n        else if (!Genoverse.Track.prototype.hasOwnProperty(i) && !/^(controller|models|views|config|disabled)$/.test(i)) {\n          if (typeof this._defaults[i] === 'undefined') {\n            this._defaults[i] = this[i];\n          }\n\n          trackSettings[i] = settings[i];\n        }\n      }\n    }\n\n    for (i in this._defaults) {\n      if (typeof trackSettings[i] === 'undefined') {\n        trackSettings[i] = this._defaults[i];\n      }\n    }\n\n    // If there are configSettings for the track, ensure that any properties in _currentConfig are set for the model/view/controller/track as appropriate.\n    // Functions in _currentConfig are accessed via Genoverse.functionWrap, so nothing needs to be done with them here.\n    if (!$.isEmptyObject(this._currentConfig)) {\n      var changed = {};\n      var type;\n\n      for (i in this._currentConfig.prop) {\n        type = this._interface[i];\n\n        if (/model|view/.test(type)) {\n          if (trackSettings[type][i] !== this._currentConfig.prop[i]) {\n            trackSettings[type][i] = this._currentConfig.prop[i];\n            changed[type] = true;\n          }\n        } else if (type === 'controller') {\n          controllerSettings.prop[i] = this._currentConfig.prop[i];\n        } else {\n          trackSettings[i] = this._currentConfig.prop[i];\n        }\n      }\n\n      for (type in changed) {\n        trackSettings[type].setDefaults(true);\n      }\n    }\n\n    /*\n     * Abandon all hope! If you've tracked a bug to this line of code, be afraid.\n     * It will almost certainly be due to the wonderful way the javascript objects work.\n     *\n     * Consider the following:\n     *\n     * var Obj = function () {};\n     *\n     * Obj.prototype = {\n     *   scalar : 1,\n     *   array  : [ 1, 2, 3 ],\n     *   hash   : { a: 1, b : 2 }\n     * };\n     *\n     * var x = new Obj();\n     *\n     * x.scalar   = 10;\n     * x.array[0] = 10;\n     * x.hash.a   = 10;\n     *\n     * var y = new Obj();\n     *\n     * y is now { scalar: 1, array: [ 10, 2, 3 ], hash: { a: 10, b : 2 } }, since memory locations of objects in prototypes are shared.\n     *\n     * This has been the cause of numerous Genoverse bugs in the past, due to property sharing between different tracks, models, views, and controllers.\n     */\n    this.extend(trackSettings);\n\n    this.model.setChrProps(); // make sure the data stores for the current chromsome are being used\n\n    if (!this.controller || typeof this.controller === 'function') {\n      this.controller = this.newMVC(settings.controller, controllerSettings.func, $.extend(controllerSettings.prop, { model: this.model, view: this.view }));\n    } else {\n      controllerSettings.prop.threshold = controllerSettings.prop.threshold || this.controller.constructor.prototype.threshold;\n      $.extend(this.controller, controllerSettings.prop, { model: this.model, view: this.view });\n    }\n  },\n\n  newMVC: function (object, functions, properties) {\n    return new (object.extend(\n      $.extend(true, {}, object.prototype, functions, {\n        prop: $.proxy(this.prop, this)\n      })\n    ))(\n      $.extend(properties, {\n        browser : this.browser,\n        width   : this.width,\n        track   : this\n      })\n    );\n  },\n\n  setLengthMap: function () {\n    var mv        = [ 'model', 'view' ];\n    var lengthMap = [];\n    var models    = {};\n    var views     = {};\n    var settings, value, deepCopy, prevLengthMap, mvSettings, type, prevType, i, j;\n\n    function compare(a, b) {\n      var checked = { browser: true, width: true, track: true }; // Properties set in newMVC should be ignored, as they will be missing if comparing an object with a prototype\n\n      for (var key in a) {\n        if (checked[key]) {\n          continue;\n        }\n\n        checked[key] = true;\n\n        if (typeof a[key] !== typeof b[key]) {\n          return false;\n        } else if (typeof a[key] === 'function' && typeof b[key] === 'function') {\n          if (a[key].toString() !== b[key].toString()) {\n            return false;\n          }\n        } else if (typeof a[key] === 'object' && !(a[key] instanceof $) && !compare(a[key], b[key])) {\n          return false;\n        } else if (a[key] !== b[key]) {\n          return false;\n        }\n      }\n\n      for (key in b) {\n        if (!checked[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    // Find all scale-map like keys\n    for (var key in this) {\n      if (!isNaN(key)) {\n        key   = parseInt(key, 10);\n        value = this[key];\n\n        lengthMap.push([ key, value === false ? { threshold: key, resizable: 'auto', featureHeight: 0, model: Genoverse.Track.Model, view: Genoverse.Track.View } : $.extend(true, {}, value) ]);\n      }\n    }\n\n    // Force at least one lengthMap entry to exist, containing the base model and view. lengthMap entries above -1 without a model or view will inherit from -1.\n    lengthMap.push([ -1, { view: this.view || Genoverse.Track.View, model: this.model || Genoverse.Track.Model } ]);\n\n    lengthMap = lengthMap.sort(function (a, b) { return b[0] - a[0]; });\n\n    for (i = 0; i < lengthMap.length; i++) {\n      if (lengthMap[i][1].model && lengthMap[i][1].view) {\n        continue;\n      }\n\n      deepCopy = {};\n\n      if (lengthMap[i][0] !== -1) {\n        for (j in lengthMap[i][1]) {\n          if (this._interface[j]) {\n            deepCopy[this._interface[j]] = true;\n          }\n\n          if (deepCopy.model && deepCopy.view) {\n            break;\n          }\n        }\n      }\n\n      // Ensure that every lengthMap entry has a model and view property, copying them from entries with smaller lengths if needed.\n      for (j = i + 1; j < lengthMap.length; j++) {\n        if (!lengthMap[i][1].model && lengthMap[j][1].model) {\n          lengthMap[i][1].model = deepCopy.model ? Genoverse.Track.Model.extend($.extend(true, {}, lengthMap[j][1].model.prototype)) : lengthMap[j][1].model;\n        }\n\n        if (!lengthMap[i][1].view && lengthMap[j][1].view) {\n          lengthMap[i][1].view = deepCopy.view ? Genoverse.Track.View.extend($.extend(true, {}, lengthMap[j][1].view.prototype)) : lengthMap[j][1].view;\n        }\n\n        if (lengthMap[i][1].model && lengthMap[i][1].view) {\n          break;\n        }\n      }\n    }\n\n    // Now every lengthMap entry has a model and a view class, create instances of those classes.\n    for (i = 0; i < lengthMap.length; i++) {\n      prevLengthMap = lengthMap[i - 1] ? lengthMap[i - 1][1] : {};\n      settings      = $.extend(true, {}, this.constructor.prototype, lengthMap[i][1]);\n      mvSettings    = { model: { prop: {}, func: {} }, view: { prop: {}, func: {} } };\n\n      // Work out which settings belong to models or views\n      for (j in settings) {\n        if (j !== 'constructor' && mvSettings[this._interface[j]]) {\n          mvSettings[this._interface[j]][typeof settings[j] === 'function' ? 'func' : 'prop'][j] = settings[j];\n        }\n      }\n\n      // Create models and views, if settings.model or settings.view is a class rather than an instance\n      for (j = 0; j < mv.length; j++) {\n        type = mv[j];\n\n        if (typeof settings[type] === 'function') {\n          prevType = this[mv[j] + 's'];\n\n          // If the previous lengthMap contains an instance of the class in settings, it can be reused.\n          // This allows sharing of models and views between lengthMap entries if they are the same, stopping the need to fetch identical data or draw identical images more than once\n          if (prevLengthMap[type] instanceof settings[type]) {\n            settings[type] = prevLengthMap[type];\n          } else {\n            // Make an instance of the model/view, based on the settings[type] class but with a prototype that contains the functions in mvSettings[type].func\n            settings[type] = this.newMVC(settings[type], mvSettings[type].func, mvSettings[type].prop);\n\n            // If the track already has this.models/this.views and the prototype of the new model/view is the same as the value of this.models/this.views for the same length key, reuse that value.\n            // This can happen if the track has configSettings and the user changes config but that only affects one of the model and view.\n            // Again, reusing the old value stops the need to fetch identical data or draw identical images more than once.\n            if (prevType[lengthMap[i][0]] && compare(prevType[lengthMap[i][0]].constructor.prototype, $.extend({}, settings[type].constructor.prototype, mvSettings[type].prop))) {\n              settings[type] = prevType[lengthMap[i][0]];\n            }\n          }\n        }\n      }\n\n      models[lengthMap[i][0]] = lengthMap[i][1].model = settings.model;\n      views[lengthMap[i][0]]  = lengthMap[i][1].view  = settings.view;\n    }\n\n    this.lengthMap = lengthMap;\n    this.models    = models;\n    this.views     = views;\n  },\n\n  getSettingsForLength: function () {\n    var length = this.browser.length || (this.browser.end - this.browser.start + 1);\n\n    for (var i = 0; i < this.lengthMap.length; i++) {\n      if (length > this.lengthMap[i][0] || length === 1 && this.lengthMap[i][0] === 1) {\n        return this.lengthMap[i];\n      }\n    }\n\n    return [];\n  },\n\n  prop: function (key, value) {\n    var mvc = [ 'controller', 'model', 'view' ];\n    var obj;\n\n    if (this._interface[key]) {\n      obj = this[this._interface[key]];\n    } else {\n      for (var i = 0; i < 3; i++) {\n        if (this[mvc[i]] && typeof this[mvc[i]][key] !== 'undefined') {\n          obj = this[mvc[i]];\n          break;\n        }\n      }\n\n      obj = obj || this;\n    }\n\n\n    if (typeof value !== 'undefined') {\n      if (value === null) {\n        delete obj[key];\n      } else {\n        obj[key] = value;\n      }\n    }\n\n    return obj ? obj[key] : undefined;\n  },\n\n  setHeight: function (height, forceShow) {\n    if (this.disabled || (forceShow !== true && height < this.prop('featureHeight')) || (this.prop('threshold') && !this.prop('thresholdMessage') && this.browser.length > this.prop('threshold'))) {\n      height = 0;\n    } else {\n      height = Math.max(height, this.prop('minLabelHeight'));\n    }\n\n    this.height = height;\n\n    return height;\n  },\n\n  resetHeight: function () {\n    if (this.resizable === true) {\n      var resizer = this.prop('resizer');\n\n      this.autoHeight = !!([ this.defaultAutoHeight, this.browser.trackAutoHeight ].sort(function (a, b) {\n        return (typeof a !== 'undefined' && a !== null ? 0 : 1) - (typeof b !== 'undefined' && b !== null ?  0 : 1);\n      })[0]);\n\n      this.controller.resize(this.autoHeight ? this.prop('fullVisibleHeight') : this.defaultHeight + this.margin + (resizer ? resizer.height() : 0));\n      this.initialHeight = this.height;\n    }\n  },\n\n  setConfig: function (config) {\n    if (typeof config === 'string' && arguments.length === 2) {\n      var _config = {};\n      _config[config] = arguments[1];\n      config = _config;\n    }\n\n    var configChanged = false;\n    var conf;\n\n    for (var type in config) {\n      conf = config[type];\n\n      if (typeof this.configSettings[type] === 'undefined' || typeof this.configSettings[type][conf] === 'undefined' || this.config[type] === conf) {\n        continue;\n      }\n\n      this.config[type] = conf;\n\n      configChanged = true;\n    }\n\n    if (configChanged) {\n      var features = this.prop('featuresById');\n\n      for (var i in features) {\n        delete features[i].menuEl;\n      }\n\n      this._setCurrentConfig();\n\n      if (!this.disabled) {\n        this.reset.apply(this, configChanged ? [ 'config', config ] : []);\n      }\n\n      (this.prop('childTracks') || []).forEach(function (track) {\n        track.setConfig(config);\n      });\n\n      this.browser.saveConfig();\n    }\n  },\n\n  _setCurrentConfig: function () {\n    var settings       = [];\n    var featureFilters = [];\n    var conf;\n\n    this._currentConfig = { prop: {}, func: {} };\n\n    for (i in this.configSettings) {\n      conf = this.getConfig(i);\n\n      if (conf) {\n        settings.push(conf);\n\n        if (conf.featureFilter) {\n          featureFilters.push(conf.featureFilter);\n        }\n      }\n    }\n\n    if (settings.length) {\n      settings = $.extend.apply($, [ true, {} ].concat(settings, { featureFilters: featureFilters }));\n      delete settings.featureFilter;\n    }\n\n    for (i in settings) {\n      this._currentConfig[typeof settings[i] === 'function' && !/^(before|after)/.test(i) ? 'func' : 'prop'][i] = settings[i];\n    }\n  },\n\n  getConfig: function (type) {\n    return this.configSettings[type][this.config[type]];\n  },\n\n  addChildTracks: function () {\n    if (!this.children) {\n      return;\n    }\n\n    var track    = this;\n    var browser  = this.browser;\n    var children = (Array.isArray(this.children) ? this.children : [ this.children ]).filter(function (child) { return child.prototype instanceof Genoverse.Track; });\n    var config   = {\n      parentTrack : this,\n      controls    : 'off',\n      threshold   : this.prop('threshold')\n    };\n\n    setTimeout(function () {\n      track.childTracks = children.map(function (child) {\n        if (child.prototype instanceof Genoverse.Track.Legend || child === Genoverse.Track.Legend) {\n          return track.addLegend(child.extend(config), true);\n        } else {\n          return browser.addTrack(child.extend(config));\n        }\n      });\n\n      track.controller.setLabelHeight();\n    }, 1);\n  },\n\n  addLegend: function (constructor, now) {\n    if (!(constructor || this.legend)) {\n      return;\n    }\n\n    constructor = constructor || (this.legend.prototype instanceof Genoverse.Track.Legend ? this.legend : Genoverse.Track.Legend);\n\n    var track       = this;\n    var legendType  = constructor.prototype.shared === true ? Genoverse.getTrackNamespace(constructor) : constructor.prototype.shared || this.id;\n    var config      = {\n      id   : legendType + 'Legend',\n      name : constructor.prototype.name || (this.name + ' Legend'),\n      type : legendType\n    };\n\n    this.legendType = legendType;\n\n    function makeLegendTrack() {\n      return track.legendTrack = track.browser.legends[config.id] || track.browser.addTrack(constructor.extend(config));\n    }\n\n    if (now === true) {\n      return makeLegendTrack();\n    } else {\n      setTimeout(makeLegendTrack, 1);\n    }\n  },\n\n  changeChr: function () {\n    for (var i in this.models) {\n      this.models[i].setChrProps();\n    }\n  },\n\n  updateName: function (name) {\n    this.controller.setName(name); // For ease of use in external code\n  },\n\n  enable: function () {\n    if (this.disabled === true) {\n      this.disabled = false;\n      this.controller.resize(this.initialHeight);\n      this.reset();\n    }\n  },\n\n  disable: function () {\n    if (!this.disabled) {\n      this.disabled = true;\n      this.controller.resize(0);\n    }\n  },\n\n  reset: function () {\n    this.setLengthMap();\n\n    for (var i in this.models) {\n      if (this.models[i].url !== false) {\n        this.models[i].init(true);\n      }\n    }\n\n    for (i in this.views) {\n      this.views[i].init();\n    }\n\n    this.controller.reset.apply(this.controller, arguments);\n  },\n\n  remove: function () {\n    this.browser.removeTrack(this);\n  },\n\n  destructor: function () {\n    this.controller.destroy();\n\n    var objs = [ this.view, this.model, this.controller, this ];\n\n    for (var obj in objs) {\n      for (var key in obj) {\n        delete obj[key];\n      }\n    }\n  }\n});\n","Genoverse.Track.Controller = Base.extend({\n  scrollBuffer   : 1.2,      // Number of widths, if left or right closer to the edges of viewpoint than the buffer, start making more images\n  threshold      : Infinity, // Length above which the track is not drawn\n  clickTolerance : 0,        // pixels of tolerance added to a click position when finding features for popup menus, when scale < 1\n  messages       : undefined,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function () {\n    this.setDefaults();\n    this.addDomElements();\n    this.addUserEventHandlers();\n\n    this.deferreds = []; // tracks deferreds so they can be stopped if the track is destroyed\n  },\n\n  setDefaults: function () {\n    this.imgRange    = {};\n    this.scrollRange = {};\n    this.messages    = this.messages || {\n      error     : 'ERROR: ',\n      threshold : 'Data for this track is not displayed in regions greater than ',\n      resize    : 'Some features are currently hidden, <a class=\"gv-resize\">resize to see all</a>'\n    };\n  },\n\n  reset: function () {\n    this.abort();\n    this.setDefaults();\n    this.resetImages();\n    this.browser.closeMenus(this);\n\n    if (arguments[0] !== 'resizing') {\n      this.setScale();\n      this.makeFirstImage();\n    }\n  },\n\n  resetImages: function () {\n    this.scrollContainer.empty();\n    this.resetImageRanges();\n  },\n\n  resetImageRanges: function () {\n    this.left        = 0;\n    this.scrollStart = [ 'ss', this.browser.chr, this.browser.start, this.browser.end ].join('-');\n\n    this.imgRange[this.scrollStart]    = this.imgRange[this.scrollStart]    || { left: this.width * -2, right: this.width * 2 };\n    this.scrollRange[this.scrollStart] = this.scrollRange[this.scrollStart] || { start: this.browser.start - this.browser.length, end: this.browser.end + this.browser.length };\n  },\n\n  setName: function (name) {\n    this.track.name = name;\n    this.labelName  = this.labelName || $('<span class=\"gv-name\">').appendTo(this.label);\n\n    this.labelName.attr('title', name).html(name);\n\n    this.minLabelHeight = Math.max(this.labelName.outerHeight(true), this.labelName.outerHeight());\n\n    this.setLabelHeight(true);\n  },\n\n  addDomElements: function () {\n    var name = this.track.name || '';\n\n    this.menus            = $();\n    this.container        = $('<div class=\"gv-track-container\">').appendTo(this.browser.wrapper);\n    this.scrollContainer  = $('<div class=\"gv-scroll-container\">').appendTo(this.container);\n    this.imgContainer     = $('<div class=\"gv-image-container\">').width(this.width).addClass(this.prop('invert') ? 'gv-invert' : '');\n    this.messageContainer = $('<div class=\"gv-message-container\"><div class=\"gv-messages\"></div><i class=\"gv-control gv-collapse fa fa-angle-double-left\"></i><i class=\"gv-control gv-expand fa fa-angle-double-right\"></i></div>').appendTo(this.container);\n    this.label            = $('<li>').appendTo(this.browser.labelContainer).height(this.prop('height')).data('track', this.track);\n    this.context          = $('<canvas>')[0].getContext('2d');\n\n    if (this.prop('border')) {\n      $('<div class=\"gv-track-border\">').appendTo(this.container);\n    }\n\n    if (this.prop('unsortable')) {\n      this.label.addClass('gv-unsortable');\n    } else {\n      $('<div class=\"gv-handle\">').appendTo(this.label);\n    }\n\n    if (this.prop('children')) {\n      this.superContainer = $('<div class=\"gv-track-container gv-track-super-container\">').insertAfter(this.container);\n      this.container.appendTo(this.superContainer);\n    } else if (this.prop('parentTrack')) {\n      this.superContainer = this.prop('parentTrack').prop('superContainer');\n\n      this.container.appendTo(this.superContainer);\n      this.label.remove();\n\n      this.label = this.prop('parentTrack').prop('label');\n    }\n\n    this.setName(name);\n\n    this.container.height(this.prop('disabled') ? 0 : Math.max(this.prop('height'), this.minLabelHeight));\n  },\n\n  addUserEventHandlers: function () {\n    var controller = this;\n    var browser    = this.browser;\n\n    this.container.on('mouseup', '.gv-image-container', function (e) {\n      if ((e.which && e.which !== 1) || (typeof browser.dragStart === 'number' && browser.start !== browser.dragStart) || (browser.dragAction === 'select' && browser.selector.outerWidth(true) > 2)) {\n        return; // Only show menus on left click when not dragging and not selecting\n      }\n\n      controller.click(e);\n    });\n\n    this.messageContainer.children().on('click', function () {\n      var collapsed = controller.messageContainer.children('.gv-messages').is(':visible') ? ' gv-collapsed' : '';\n      var code      = controller.messageContainer.find('.gv-msg').data('code');\n\n      controller.messageContainer.attr('class', 'gv-message-container' + collapsed);\n      controller.checkHeight();\n\n      if (code !== 'error') {\n        document.cookie = [ 'gv_msg', code, controller.prop('id') ].join('_') + '=1; expires=' + (collapsed ? 'Tue, 19 Jan 2038' : 'Thu, 01 Jan 1970') + ' 00:00:00 GMT; path=/';\n      }\n    });\n  },\n\n  click: function (e) {\n    var target = $(e.target);\n    var x      = e.pageX - this.container.parent().offset().left + this.browser.scaledStart;\n    var y      = e.pageY - target.offset().top;\n\n    if (this.imgContainer.hasClass('gv-invert')) {\n      y = target.height() - y;\n    }\n\n    return this.browser.makeMenu(this.getClickedFeatures(x, y, target), e, this.track);\n  },\n\n  getClickedFeatures: function (x, y, target) {\n    var bounds    = { x: x, y: y, w: 1, h: 1 };\n    var scale     = this.scale;\n    var tolerance = scale < 1 ? this.clickTolerance : 0;\n\n    if (tolerance) {\n      bounds.x -= tolerance / 2;\n      bounds.w += tolerance;\n    }\n\n    var features = this[target && target.hasClass('gv-labels') ? 'labelPositions' : 'featurePositions'].search(bounds);\n\n    if (tolerance) {\n      return features.sort(function (a, b) { return Math.abs(a.position[scale].start - x) - Math.abs(b.position[scale].start - x); });\n    } else {\n      return this.model.sortFeatures(features);\n    }\n  },\n\n  // FIXME: messages are now hidden/shown instead of removed/added. This will cause a problem if a new message arrives with the same code as one that already exists.\n  showMessage: function (code, additionalText) {\n    var messages = this.messageContainer.children('.gv-messages');\n\n    if (!messages.children('.gv-' + code).show().length) {\n      var msg = $('<div class=\"gv-msg gv-' + code + '\">' + this.messages[code] + (additionalText || '') + '</div>').data('code', code).prependTo(messages);\n\n      if (code === 'resize') {\n        msg.children('a.gv-resize').on('click', $.proxy(function () {\n          this.resize(this.fullVisibleHeight);\n        }, this));\n      }\n\n      this.messageContainer[document.cookie.match([ 'gv_msg', code, this.prop('id') ].join('_') + '=1') ? 'addClass' : 'removeClass']('gv-collapsed');\n    }\n\n    var height = this.messageContainer.show().outerHeight(true);\n\n    if (height > this.prop('height')) {\n      this.resize(height, undefined, false);\n    }\n\n    messages = null;\n  },\n\n  hideMessage: function (code) {\n    var messages = this.messageContainer.find('.gv-msg');\n\n    if (code) {\n      messages = messages.filter('.gv-' + code).hide();\n\n      if (messages.length && !messages.siblings().filter(function () { return this.style.display !== 'none'; }).length) {\n        this.messageContainer.hide();\n      }\n    } else {\n      messages.hide();\n      this.messageContainer.hide();\n    }\n\n    messages = null;\n  },\n\n  showError: function (error) {\n    this.showMessage('error', error);\n  },\n\n  checkHeight: function () {\n    if (this.browser.length > this.threshold) {\n      if (this.thresholdMessage) {\n        this.showMessage('threshold', this.thresholdMessage);\n        this.fullVisibleHeight = Math.max(this.messageContainer.outerHeight(true), this.minLabelHeight);\n      } else {\n        this.fullVisibleHeight = 0;\n      }\n    } else if (this.thresholdMessage) {\n      this.hideMessage('threshold');\n    }\n\n    if (!this.prop('resizable')) {\n      return;\n    }\n\n    var autoHeight;\n\n    if (this.browser.length > this.threshold) {\n      autoHeight = this.prop('autoHeight');\n      this.prop('autoHeight', true);\n    } else {\n      this.fullVisibleHeight = this.visibleFeatureHeight() || (this.messageContainer.is(':visible') ? this.messageContainer.outerHeight(true) : this.prop('hideEmpty') ? 0 : this.minLabelHeight);\n    }\n\n    this.autoResize();\n\n    if (typeof autoHeight !== 'undefined') {\n      this.prop('autoHeight', autoHeight);\n    }\n  },\n\n  visibleFeatureHeight: function () {\n    var bounds    = { x: this.browser.scaledStart, w: this.width, y: 0, h: 9e99 };\n    var scale     = this.scale;\n    var features  = this.featurePositions.search(bounds);\n    var minHeight = this.prop('hideEmpty') ? 0 : this.minLabelHeight;\n    var height    = Math.max.apply(Math, $.map(features, function (feature) { return feature.position[scale].bottom; }).concat(minHeight));\n\n    if (this.prop('labels') === 'separate') {\n      this.labelTop = height;\n      height += Math.max.apply(Math, $.map(this.labelPositions.search(bounds).concat(this.prop('repeatLabels') ? features : []), function (feature) { return feature.position[scale].label.bottom; }).concat(minHeight));\n    }\n\n    return height;\n  },\n\n  autoResize: function () {\n    var autoHeight = this.prop('autoHeight');\n\n    if (autoHeight || this.prop('labels') === 'separate') {\n      this.resize(autoHeight ? this.fullVisibleHeight : this.prop('height'), this.labelTop, false);\n    } else {\n      this.toggleExpander(false);\n    }\n  },\n\n  resize: function (height, arg, saveConfig) {\n    height = this.track.setHeight(height, arg);\n\n    if (typeof arg === 'number') {\n      this.imgContainers.children('.gv-labels').css('top', arg);\n    }\n\n    this.container.height(height)[height ? 'show' : 'hide']();\n    this.setLabelHeight();\n    this.toggleExpander();\n\n    if (saveConfig !== false) {\n      this.browser.saveConfig();\n    }\n  },\n\n  toggleExpander: function (saveConfig) {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var featureMargin = this.prop('featureMargin');\n    var height        = this.prop('height');\n\n    // Note: fullVisibleHeight - featureMargin.top - featureMargin.bottom is not actually the correct value to test against, but it's the easiest best guess to obtain.\n    // fullVisibleHeight is the maximum bottom position of the track's features in the region, which includes margin at the bottom of each feature and label\n    // Therefore fullVisibleHeight includes this margin for the bottom-most feature.\n    // The correct value (for a track using the default positionFeatures code) is:\n    // fullVisibleHeight - ([there are labels in this region] ? (labels === 'separate' ? 0 : featureMargin.bottom + 1) + 2 : featureMargin.bottom)\n    if (this.fullVisibleHeight - featureMargin.top - featureMargin.bottom > height && !this.prop('disabled')) {\n      this.showMessage('resize');\n\n      var controller = this;\n      var h          = this.messageContainer.outerHeight(true);\n\n      if (h > height) {\n        this.resize(h, undefined, saveConfig);\n      }\n\n      this.expander = (this.expander || $('<div class=\"gv-expander gv-static\">').width(this.width).appendTo(this.container).on('click', function () {\n        controller.resize(controller.fullVisibleHeight);\n      }))[this.prop('height') === 0 ? 'hide' : 'show']();\n    } else if (this.expander) {\n      this.hideMessage('resize');\n      this.expander.hide();\n    }\n  },\n\n  setLabelHeight: function (enforceMinHeight) {\n    var parent = this.prop('parentTrack');\n\n    if (parent) {\n      return parent.controller.setLabelHeight();\n    }\n\n    var tracks = [ this ].concat(this.prop('childTracks') || []);\n    var height = tracks.reduce(function (h, track) { return h + (track.prop('disabled') ? 0 : track.prop('height')); }, 0);\n\n    this.label.height(this.prop('disabled') ? 0 : enforceMinHeight && this.minLabelHeight ? Math.max(height, this.minLabelHeight) : height);\n\n    if (tracks.length > 1) {\n      var top = tracks[0].prop('height');\n\n      tracks.slice(1).forEach(function (track) {\n        var h = track.prop('height');\n\n        track.prop('labelName').css('top', top)[h ? 'removeClass' : 'addClass']('gv-hide');\n        top += h;\n      });\n    }\n  },\n\n  setWidth: function (width) {\n    var track = this.track;\n\n    $.each([ this, track, track.model, track.view ], function () {\n      this.width = width;\n    });\n\n    this.imgContainer.add(this.expander).width(width);\n  },\n\n  setScale: function () {\n    var controller = this;\n\n    this.scale = this.browser.scale;\n\n    this.track.setMVC();\n    this.resetImageRanges();\n\n    var labels = this.prop('labels');\n\n    if (labels && labels !== 'overlay') {\n      this.model.setLabelBuffer(this.browser.labelBuffer);\n    }\n\n    if (this.threshold !== Infinity && this.prop('resizable') !== 'auto') {\n      this.thresholdMessage = this.view.formatLabel(this.threshold);\n    }\n\n    $.each(this.view.setScaleSettings(this.scale), function (k, v) { controller[k] = v; });\n\n    this.hideMessage();\n  },\n\n  move: function (delta) {\n    this.left += delta;\n    this.scrollContainer.css('left', this.left);\n\n    var scrollStart = this.scrollStart;\n\n    if (this.imgRange[scrollStart] && this.imgRange[scrollStart].left + this.left > -this.scrollBuffer * this.width) {\n      var end = this.scrollRange[scrollStart].start - 1;\n\n      this.makeImage({\n        scale : this.scale,\n        chr   : this.browser.chr,\n        start : end - this.browser.length + 1,\n        end   : end,\n        left  : this.imgRange[scrollStart].left,\n        cls   : scrollStart\n      });\n\n      (this.imgRange[scrollStart]    || {}).left  -= this.width;\n      (this.scrollRange[scrollStart] || {}).start -= this.browser.length;\n    }\n\n    if (this.imgRange[scrollStart] && this.imgRange[scrollStart].right + this.left < this.scrollBuffer * this.width) {\n      var start = this.scrollRange[scrollStart].end + 1;\n\n      this.makeImage({\n        scale : this.scale,\n        chr   : this.browser.chr,\n        start : start,\n        end   : start + this.browser.length - 1,\n        left  : this.imgRange[scrollStart].right,\n        cls   : scrollStart\n      });\n\n      (this.imgRange[scrollStart]    || {}).right += this.width;\n      (this.scrollRange[scrollStart] || {}).end   += this.browser.length;\n    }\n  },\n\n  moveTo: function (chr, start, end, delta) {\n    var scrollRange = this.scrollRange[this.scrollStart];\n    var scrollStart = [ 'ss', chr, start, end ].join('-');\n\n    if (this.scrollRange[scrollStart] || start > scrollRange.end || end < scrollRange.start) {\n      this.resetImageRanges();\n      this.makeFirstImage(scrollStart);\n    } else {\n      this.move(typeof delta === 'number' ? delta : (start - this.browser.start) * this.scale);\n      this.checkHeight();\n    }\n  },\n\n  makeImage: function (params) {\n    params.scaledStart   = params.scaledStart   || params.start * params.scale;\n    params.width         = params.width         || this.width;\n    params.height        = params.height        || this.prop('height');\n    params.featureHeight = params.featureHeight || 0;\n    params.labelHeight   = params.labelHeight   || 0;\n\n    var deferred;\n    var controller = this;\n    var tooLarge   = this.browser.length > this.threshold;\n    var div        = this.imgContainer.clone().addClass((params.cls + ' gv-loading').replace('.', '_')).css({ left: params.left, display: params.cls === this.scrollStart ? 'block' : 'none' });\n    var bgImage    = params.background ? $('<img class=\"gv-bg\">').hide().addClass(params.background).data(params).prependTo(div) : false;\n    var image      = $('<img class=\"gv-data\">').hide().data(params).appendTo(div).on('load', function () {\n      $(this).fadeIn('fast').parent().removeClass('gv-loading');\n      $(this).siblings('.gv-bg').show();\n    });\n\n    params.container = div;\n\n    this.imgContainers.push(div[0]);\n    this.scrollContainer.append(this.imgContainers);\n\n    if (!tooLarge && !this.model.checkDataRange(params.chr, params.start, params.end)) {\n      var buffer = this.prop('dataBuffer');\n\n      params.start -= buffer.start;\n      params.end   += buffer.end;\n      deferred      = this.model.getData(params.chr, params.start, params.end);\n    }\n\n    if (!deferred) {\n      deferred = $.Deferred();\n      setTimeout($.proxy(deferred.resolve, this), 1); // This defer makes scrolling A LOT smoother, pushing render call to the end of the exec queue\n    }\n\n    this.deferreds.push(deferred);\n\n    return deferred.done(function () {\n      var features = tooLarge ? [] : controller.model.findFeatures(params.chr, params.start, params.end);\n      controller.render(features, image);\n\n      if (bgImage) {\n        controller.renderBackground(features, bgImage);\n      }\n    }).fail(function (e) {\n      controller.showError(e);\n    });\n  },\n\n  makeFirstImage: function (moveTo) {\n    var deferred = $.Deferred();\n\n    if (this.scrollContainer.children().hide().filter('.' + (moveTo || this.scrollStart)).show().length) {\n      this.scrollContainer.css('left', 0);\n      this.checkHeight();\n\n      return deferred.resolve();\n    }\n\n    var controller = this;\n    var chr        = this.browser.chr;\n    var start      = this.browser.start;\n    var end        = this.browser.end;\n    var length     = this.browser.length;\n    var scale      = this.scale;\n    var cls        = this.scrollStart;\n    var images     = [{ chr: chr, start: start, end: end, scale: scale, cls: cls, left: 0 }];\n    var left       = 0;\n    var width      = this.width;\n\n    if (!this.browser.isStatic) {\n      if (start > 1) {\n        images.push({ chr: chr, start: start - length, end: start - 1, scale: scale, cls: cls, left: -this.width });\n        left   = -this.width;\n        width += this.width;\n      }\n\n      if (end < this.browser.getChromosomeSize(chr)) {\n        images.push({ chr: chr, start: end + 1, end: end + length, scale: scale, cls: cls, left: this.width });\n        width += this.width;\n      }\n    }\n\n    var loading = this.imgContainer.clone().addClass('gv-loading').css({ left: left, width: width }).prependTo(this.scrollContainer.css('left', 0));\n\n    function makeImages() {\n      $.when.apply($, images.map(function (image) {\n        return controller.makeImage(image);\n      })).done(deferred.resolve);\n\n      loading.remove();\n    }\n\n    if (length > this.threshold || this.model.checkDataRange(chr, start, end)) {\n      makeImages();\n    } else {\n      var buffer = this.prop('dataBuffer');\n\n      this.model.getData(chr, start - buffer.start - length, end + buffer.end + length).done(makeImages).fail(function (e) {\n        controller.showError(e);\n      });\n    }\n\n    return deferred;\n  },\n\n  render: function (features, img) {\n    var params         = img.data();\n        features       = this.view.positionFeatures(this.view.scaleFeatures(features, params.scale), params); // positionFeatures alters params.featureHeight, so this must happen before the canvases are created\n    var featureCanvas  = $('<canvas>').attr({ width: params.width, height: params.featureHeight || 1 });\n    var labelCanvas    = this.prop('labels') === 'separate' && params.labelHeight ? featureCanvas.clone().attr('height', params.labelHeight) : featureCanvas;\n    var featureContext = featureCanvas[0].getContext('2d');\n    var labelContext   = labelCanvas[0].getContext('2d');\n\n    featureContext.font = labelContext.font = this.prop('font');\n\n    switch (this.prop('labels')) {\n      case false     : break;\n      case 'overlay' : labelContext.textAlign = 'center'; labelContext.textBaseline = 'middle'; break;\n      default        : labelContext.textAlign = 'left';   labelContext.textBaseline = 'top';    break;\n    }\n\n    this.view.draw(features, featureContext, labelContext, params.scale);\n\n    img.attr('src', featureCanvas[0].toDataURL());\n\n    if (labelContext !== featureContext) {\n      img.clone(true).attr({ 'class': 'gv-labels', src: labelCanvas[0].toDataURL() }).insertAfter(img);\n    }\n\n    this.checkHeight();\n\n    featureCanvas = labelCanvas = img = null;\n  },\n\n  renderBackground: function (features, img, height) {\n    var canvas = $('<canvas>').attr({ width: this.width, height: height || 1 })[0];\n    this.view.drawBackground(features, canvas.getContext('2d'), img.data());\n    img.attr('src', canvas.toDataURL());\n    canvas = img = null;\n  },\n\n  populateMenu: function (feature) {\n    var f    = $.extend(true, {}, feature);\n    var menu = {\n      title    : f.label ? f.label[0] : f.id,\n      Location : f.chr + ':' + f.start + '-' + f.end\n    };\n\n    delete f.chr;\n    delete f.start;\n    delete f.end;\n    delete f.sort;\n\n    for (var i in f) {\n      if (typeof f[i] === 'object' || menu.title === f[i]) {\n        delete f[i];\n      }\n    }\n\n    return $.extend(menu, f);\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.deferreds.length; i++) {\n      if (this.deferreds[i].state() === 'pending') {\n        this.deferreds[i].reject();\n      }\n    }\n\n    this.deferreds = [];\n  },\n\n  destroy: function () {\n    this.abort();\n    this.container.add(this.label).add(this.menus).remove();\n  }\n});\n","Genoverse.Track.Model = Base.extend({\n  dataType         : 'json',\n  allData          : false,\n  dataBuffer       : undefined, // e.g. { start: 0, end: 0 } - basepairs to extend data region for, when getting data from the origin\n  xhrFields        : undefined,\n  url              : undefined,\n  urlParams        : undefined, // hash of URL params\n  data             : undefined, // if defined, will be used instead of fetching data from a source\n  dataRequestLimit : undefined, // if defined, multiple requests will be made by getData if the region size exceeds its value\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function (reset) {\n    this.setDefaults(reset);\n\n    if (reset) {\n      for (var i in this.featuresById) {\n        delete this.featuresById[i].position;\n      }\n    }\n\n    if (!reset || this.data) {\n      delete this.dataRangesByChr;\n      delete this.featuresByChr;\n      this.featuresById = {};\n      this.setChrProps();\n    }\n\n    this.dataLoading = []; // tracks incomplete requests for data\n  },\n\n  setDefaults: function (reset) {\n    this.dataBuffer = this.dataBuffer || { start: 0, end: 0 }; // basepairs to extend data region for, when getting data from the origin\n    this.urlParams  = this.urlParams  || {};                   // hash of URL params\n    this.xhrFields  = this.xhrFields  || {};\n\n    this.dataBufferStart = this.dataBuffer.start; // Remember original dataBuffer.start, since dataBuffer.start is updated based on browser scale, in setLabelBuffer\n\n    if (!this._url) {\n      this._url = this.url; // Remember original url\n    }\n\n    if (reset && !this.url && this._url) {\n      this.url = this._url;\n    }\n  },\n\n  setChrProps: function () {\n    var chr = this.browser.chr;\n\n    this.dataRangesByChr = this.dataRangesByChr || {};\n    this.featuresByChr   = this.featuresByChr   || {};\n\n    this.dataRangesByChr[chr] = this.dataRangesByChr[chr] || new RTree();\n    this.featuresByChr[chr]   = this.featuresByChr[chr]   || new RTree();\n  },\n\n  features   : function (chr) { return this.featuresByChr[chr];   },\n  dataRanges : function (chr) { return this.dataRangesByChr[chr]; },\n\n  parseURL: function (chr, start, end, url) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.getChromosomeSize(chr);\n    }\n\n    return (url || this.url).replace(/__ASSEMBLY__/, this.browser.assembly).replace(/__CHR__/, chr).replace(/__START__/, start).replace(/__END__/, end);\n  },\n\n  setLabelBuffer: function (buffer) {\n    this.dataBuffer.start = Math.max(this.dataBufferStart, buffer);\n  },\n\n  getData: function (chr, start, end, done) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.getChromosomeSize(chr), end);\n\n    var deferred = $.Deferred();\n\n    if (typeof this.data !== 'undefined') {\n      this.receiveData(typeof this.data.sort === 'function' ? this.data.sort(function (a, b) { return a.start - b.start; }) : this.data, chr, start, end);\n      return deferred.resolveWith(this);\n    }\n\n    var model  = this;\n    var bins   = [];\n    var length = end - start + 1;\n\n    if (!this.url) {\n      return deferred.resolveWith(this);\n    }\n\n    if (this.dataRequestLimit && length > this.dataRequestLimit) {\n      var i = Math.ceil(length / this.dataRequestLimit);\n\n      while (i--) {\n        bins.push([ start, i ? start += this.dataRequestLimit - 1 : end ]);\n        start++;\n      }\n    } else {\n      bins.push([ start, end ]);\n    }\n\n    $.when.apply($, $.map(bins, function (bin) {\n      var request = $.ajax({\n        url       : model.parseURL(chr, bin[0], bin[1]),\n        data      : model.urlParams,\n        dataType  : model.dataType,\n        context   : model,\n        xhrFields : model.xhrFields,\n        success   : function (data) { this.receiveData(data, chr, bin[0], bin[1]); },\n        error     : function (xhr, statusText) { this.track.controller.showError(statusText + ' while getting the data, see console for more details', arguments); },\n        complete  : function (xhr) { this.dataLoading = $.grep(this.dataLoading, function (t) { return xhr !== t; }); }\n      });\n\n      request.coords = [ chr, bin[0], bin[1] ]; // store actual chr, start and end on the request, in case they are needed\n\n      if (typeof done === 'function') {\n        request.done(done);\n      }\n\n      model.dataLoading.push(request);\n\n      return request;\n    })).done(function () { deferred.resolveWith(model); });\n\n    return deferred;\n  },\n\n  receiveData: function (data, chr, start, end) {\n    start = Math.max(start, 1);\n    end   = Math.min(end, this.browser.getChromosomeSize(chr));\n\n    this.setDataRange(chr, start, end);\n    this.parseData(data, chr, start, end);\n\n    if (this.allData) {\n      this.url = false;\n    }\n  },\n\n  /**\n  * parseData(data, chr, start, end) - parse raw data from the data source (e.g. online web service)\n  * extract features and insert it into the internal features storage (RTree)\n  *\n  * >> data  - raw data from the data source (e.g. ajax response)\n  * >> chr   - chromosome of the data\n  * >> start - start location of the data\n  * >> end   - end   location of the data\n  * << nothing\n  *\n  * every feature extracted this routine must construct a hash with at least 3 values:\n  *  {\n  *    id    : [unique feature id, string],\n  *    start : [chromosomal start position, integer],\n  *    end   : [chromosomal end position, integer],\n  *    [other optional key/value pairs]\n  *  }\n  *\n  * and call this.insertFeature(feature)\n  */\n  parseData: function (data, chr, start, end) {\n    var feature;\n\n    // Example of parseData function when data is an array of hashes like { start: ..., end: ... }\n    for (var i = 0; i < data.length; i++) {\n      feature = data[i];\n\n      feature.chr  = feature.chr || chr;\n      feature.sort = start + i;\n\n      this.insertFeature(feature);\n    }\n  },\n\n  updateData: function (data) {\n    this.data = data;\n    this.track.reset();\n  },\n\n  setDataRange: function (chr, start, end) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.getChromosomeSize(chr);\n    }\n\n    this.dataRanges(chr).insert({ x: start, w: end - start + 1, y: 0, h: 1 }, [ start, end ]);\n  },\n\n  checkDataRange: function (chr, start, end) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.getChromosomeSize(chr), end);\n\n    var ranges = this.dataRanges(chr).search({ x: start, w: end - start + 1, y: 0, h: 1 }).sort(function (a, b) { return a[0] - b[0]; });\n\n    if (!ranges.length) {\n      return false;\n    }\n\n    var s = ranges.length === 1 ? ranges[0][0] : 9e99;\n    var e = ranges.length === 1 ? ranges[0][1] : -9e99;\n\n    for (var i = 0; i < ranges.length - 1; i++) {\n      // s0 <= s1 && ((e0 >= e1) || (e0 + 1 >= s1))\n      if (ranges[i][0] <= ranges[i + 1][0] && ((ranges[i][1] >= ranges[i + 1][1]) || (ranges[i][1] + 1 >= ranges[i + 1][0]))) {\n        s = Math.min(s, ranges[i][0]);\n        e = Math.max(e, ranges[i][1], ranges[i + 1][1]);\n      } else {\n        return false;\n      }\n    }\n\n    return start >= s && end <= e;\n  },\n\n  insertFeature: function (feature) {\n    if (!feature.chr) {\n      return;\n    }\n\n    // Make sure we have a unique ID, this method is not efficient, so better supply your own id\n    if (!feature.id) {\n      feature.id = feature.ID || this.hashCode(JSON.stringify($.extend({}, feature, { sort: '' }))); // sort is dependant on the browser's region, so will change on zoom\n    }\n\n    var features = this.features(feature.chr);\n\n    if (features && !this.featuresById[feature.id]) {\n      if (feature.subFeatures) {\n        feature.subFeatures.sort(function (a, b) { return a.start - b.start; });\n\n        for (var i = 0; i < feature.subFeatures.length; i++) {\n          feature.subFeatures[i].start = Math.min(Math.max(feature.subFeatures[i].start, feature.start), feature.end);\n          feature.subFeatures[i].end   = Math.max(Math.min(feature.subFeatures[i].end,   feature.end),   feature.start);\n        }\n\n        // Add \"fake\" sub-features at the start and end of the feature - this will allow joins to be drawn when there are no sub-features in the current region.\n        feature.subFeatures.unshift({ start: feature.start, end: feature.start, fake: true });\n        feature.subFeatures.push   ({ start: feature.end,   end: feature.end,   fake: true });\n      }\n\n      features.insert({ x: feature.start, y: 0, w: feature.end - feature.start + 1, h: 1 }, feature);\n      this.featuresById[feature.id] = feature;\n    }\n  },\n\n  findFeatures: function (chr, start, end) {\n    var features = this.features(chr).search({ x: start - this.dataBuffer.start, y: 0, w: end - start + this.dataBuffer.start + this.dataBuffer.end + 1, h: 1 });\n    var filters  = this.prop('featureFilters') || [];\n\n    for (var i = 0; i < filters.length; i++) {\n      features = $.grep(features, $.proxy(filters[i], this));\n    }\n\n    return this.sortFeatures(features);\n  },\n\n  sortFeatures: function (features) {\n    return features.sort(function (a, b) { return a.sort - b.sort; });\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.dataLoading.length; i++) {\n      this.dataLoading[i].abort();\n    }\n\n    this.dataLoading = [];\n  },\n\n  hashCode: function (string) {\n    var hash = 0;\n    var c;\n\n    if (!string.length) {\n      return hash;\n    }\n\n    for (var i = 0; i < string.length; i++) {\n      c    = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + c;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return '' + hash;\n  }\n});\n","Genoverse.Track.View = Base.extend({\n  fontHeight       : 10,\n  fontFamily       : 'sans-serif',\n  fontWeight       : 'normal',\n  fontColor        : undefined, // label color defaults to this, or feature color, or track.color (below), in that order of precedence\n  color            : '#000000',\n  minScaledWidth   : 0.5,\n  widthCorrection  : 1, // Pixels to add to the end of a feature when scale > 1 - ensures that 1bp features are always at least 1px wide\n  labels           : true,\n  repeatLabels     : false,\n  bump             : false,\n  alwaysReposition : false,\n  depth            : undefined,\n  featureHeight    : undefined, // defaults to track height\n  featureMargin    : undefined, // e.g. { top: 3, right: 1, bottom: 1, left: 0 }\n\n  subFeatureJoinStyle     : false, // Can be 'line', 'peak', 'curve'\n  subFeatureJoinLineWidth : 0.5,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  // difference between init and constructor: init gets called on reset, if reset is implemented\n  init: function () {\n    this.setDefaults();\n    this.scaleSettings = {};\n  },\n\n  setDefaults: function () {\n    this.featureMargin = this.featureMargin || { top: 3, right: 1, bottom: 1, left: 0 };\n\n    var margin = [ 'top', 'right', 'bottom', 'left' ];\n\n    for (var i = 0; i < margin.length; i++) {\n      if (typeof this.featureMargin[margin[i]] !== 'number') {\n        this.featureMargin[margin[i]] = 0;\n      }\n    }\n\n    this.context       = $('<canvas>')[0].getContext('2d');\n    this.featureHeight = typeof this.featureHeight !== 'undefined' ? this.featureHeight : this.prop('defaultHeight');\n    this.font          = this.fontWeight + ' ' + this.fontHeight + 'px ' + this.fontFamily;\n    this.labelUnits    = [ 'bp', 'kb', 'Mb', 'Gb', 'Tb' ];\n\n    this.context.font = this.font;\n\n    if (this.labels && this.labels !== 'overlay' && (this.depth || this.bump === 'labels')) {\n      this.labels = 'separate';\n    }\n  },\n\n  setScaleSettings: function (scale) {\n    var chr = this.browser.chr;\n\n    if (!this.scaleSettings[chr]) {\n      this.scaleSettings[chr] = {};\n    }\n\n    if (!this.scaleSettings[chr][scale]) {\n      var featurePositions = new RTree();\n\n      this.scaleSettings[chr][scale] = {\n        imgContainers    : $(),\n        featurePositions : featurePositions,\n        labelPositions   : this.labels === 'separate' ? new RTree() : featurePositions\n      };\n    }\n\n    return this.scaleSettings[chr][scale];\n  },\n\n  scaleFeatures: function (features, scale) {\n    var add = Math.max(scale, this.widthCorrection);\n    var feature, j;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (!feature.position) {\n        feature.position = {};\n      }\n\n      if (!feature.position[scale]) {\n        feature.position[scale] = {\n          start  : feature.start * scale,\n          width  : Math.max((feature.end - feature.start) * scale + add, this.minScaledWidth),\n          height : feature.height || this.featureHeight\n        };\n      }\n\n      if (feature.subFeatures) {\n        for (j = 0; j < feature.subFeatures.length; j++) {\n          if (typeof feature.subFeatures[j].height === 'undefined') {\n            feature.subFeatures[j].height = feature.position[scale].height;\n          }\n        }\n\n        this.scaleFeatures(feature.subFeatures, scale);\n      }\n    }\n\n    return features;\n  },\n\n  positionFeatures: function (features, params) {\n    params.margin = this.prop('margin');\n\n    for (var i = 0; i < features.length; i++) {\n      this.positionFeature(features[i], params);\n    }\n\n    params.width         = Math.ceil(params.width);\n    params.height        = Math.ceil(params.height);\n    params.featureHeight = Math.max(Math.ceil(params.featureHeight), this.prop('resizable') ? Math.max(this.prop('height'), this.prop('minLabelHeight')) : 0);\n    params.labelHeight   = Math.ceil(params.labelHeight);\n\n    return features;\n  },\n\n  positionFeature: function (feature, params) {\n    var scale         = params.scale;\n    var scaleSettings = this.scaleSettings[feature.chr][scale];\n\n    if (!scaleSettings) {\n      return;\n    }\n\n    var subFeatures = feature.subFeatures || [];\n    var i;\n\n    feature.position[scale].X = feature.position[scale].start - params.scaledStart; // FIXME: always have to reposition for X, in case a feature appears in 2 images. Pass scaledStart around instead?\n\n    for (i = 0; i < subFeatures.length; i++) {\n      subFeatures[i].position[scale].x = subFeatures[i].position[scale].start - params.scaledStart;\n\n      if (this.subFeatureJoinStyle) {\n        subFeatures[i].position[scale].join   = subFeatures[i].position[scale].join || {};\n        subFeatures[i].position[scale].join.x = subFeatures[i].position[scale].start + subFeatures[i].position[scale].width - params.scaledStart;\n      }\n    }\n\n    if (this.alwaysReposition || !feature.position[scale].positioned) {\n      feature.position[scale].H = feature.position[scale].height + this.featureMargin.bottom;\n      feature.position[scale].W = feature.position[scale].width  + (feature.marginRight || this.featureMargin.right);\n      feature.position[scale].Y = (\n        typeof feature.position[scale].y === 'number' ? feature.position[scale].y :\n        typeof feature.y                 === 'number' ? feature.y * feature.position[scale].H : 0\n      ) + (feature.marginTop || this.featureMargin.top);\n\n      if (feature.label) {\n        if (typeof feature.label === 'string') {\n          feature.label = feature.label.split('\\n');\n        }\n\n        var context = this.context;\n\n        feature.labelHeight = feature.labelHeight || (this.fontHeight + 2) * feature.label.length;\n        feature.labelWidth  = feature.labelWidth  || Math.max.apply(Math, $.map(feature.label, function (l) { return Math.ceil(context.measureText(l).width); })) + 1;\n\n        if (this.labels === true) {\n          feature.position[scale].H += feature.labelHeight;\n          feature.position[scale].W  = Math.max(feature.labelWidth, feature.position[scale].W);\n        } else if (this.labels === 'separate' && !feature.position[scale].label) {\n          feature.position[scale].label = {\n            x: feature.position[scale].start,\n            y: feature.position[scale].Y,\n            w: feature.labelWidth,\n            h: feature.labelHeight\n          };\n        }\n      }\n\n      var bounds = {\n        x: feature.position[scale].start,\n        y: feature.position[scale].Y,\n        w: feature.position[scale].W,\n        h: feature.position[scale].H + (feature.marginTop || this.featureMargin.top)\n      };\n\n      feature.position[scale].bounds = bounds;\n\n      if (this.bump === true) {\n        this.bumpFeature(bounds, feature, scale, scaleSettings.featurePositions);\n      }\n\n      scaleSettings.featurePositions.insert(bounds, feature);\n\n      feature.position[scale].bottom     = feature.position[scale].Y + bounds.h + params.margin;\n      feature.position[scale].positioned = true;\n    }\n\n    var join = this.subFeatureJoinStyle && subFeatures.length ? {\n      height : Math.max.apply(Math, subFeatures.map(function (c) { return c.fake ? 0 : c.position[scale].height; })) / 2 * (feature.strand > 0 ? -1 : 1),\n      y      : feature.position[scale].Y + feature.position[scale].height / 2\n    } : false;\n\n    for (i = 0; i < subFeatures.length; i++) {\n      subFeatures[i].position[scale].y = feature.position[scale].Y + (feature.position[scale].height - subFeatures[i].position[scale].height) / 2;\n\n      if (join && subFeatures[i + 1]) {\n        $.extend(subFeatures[i].position[scale].join, { width: subFeatures[i + 1].position[scale].x - subFeatures[i].position[scale].join.x }, join);\n      }\n    }\n\n    if (this.labels === 'separate' && feature.position[scale].label) {\n      if (this.alwaysReposition || !feature.position[scale].label.positioned) {\n        this.bumpFeature(feature.position[scale].label, feature, scale, scaleSettings.labelPositions);\n\n        feature.position[scale].label.bottom     = feature.position[scale].label.y + feature.position[scale].label.h + params.margin;\n        feature.position[scale].label.positioned = true;\n\n        scaleSettings.labelPositions.insert(feature.position[scale].label, feature);\n      }\n\n      params.labelHeight = Math.max(params.labelHeight, feature.position[scale].label.bottom);\n    }\n\n    params.featureHeight = Math.max(params.featureHeight, feature.position[scale].bottom);\n    params.height        = Math.max(params.height, params.featureHeight + params.labelHeight);\n  },\n\n  // FIXME: should label bumping bounds be distinct from feature bumping bounds when label is smaller than feature?\n  bumpFeature: function (bounds, feature, scale, tree) {\n    var depth         = 0;\n    var scaleSettings = this.scaleSettings[feature.chr][scale];\n    var labels        = tree === scaleSettings.labelPositions && tree !== scaleSettings.featurePositions;\n    var bump, clash;\n\n    do {\n      if (this.depth && ++depth >= this.depth) {\n        if (!labels && $.grep(scaleSettings.featurePositions.search(bounds), function (f) { return f.position[scale].visible !== false; }).length) {\n          feature.position[scale].visible = false;\n        }\n\n        break;\n      }\n\n      bump  = false;\n      clash = tree.search(bounds)[0];\n\n      if (clash && clash.id !== feature.id) {\n        bounds.y = clash.position[scale][labels ? 'label' : 'bounds'].y + clash.position[scale][labels ? 'label' : 'bounds'].h;\n        bump     = true;\n      }\n    } while (bump);\n\n    if (!labels) {\n      feature.position[scale].Y = bounds.y;\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var feature, f;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (feature.position[scale].visible !== false) {\n        // TODO: extend with feature.position[scale], rationalize keys\n        f = $.extend({}, feature, {\n          x             : feature.position[scale].X,\n          y             : feature.position[scale].Y,\n          width         : feature.position[scale].width,\n          height        : feature.position[scale].height,\n          labelPosition : feature.position[scale].label\n        });\n\n        this.drawFeature(f, featureContext, labelContext, scale);\n\n        if (f.legend !== feature.legend) {\n          feature.legend      = f.legend;\n          feature.legendColor = f.color;\n        }\n      }\n    }\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    if (feature.color !== false && !feature.color) {\n      this.setFeatureColor(feature);\n    }\n\n    if (feature.subFeatures) {\n      this.drawSubFeatures(feature, featureContext, labelContext, scale);\n    } else {\n      if (feature.x < 0 || feature.x + feature.width > this.width) {\n        this.truncateForDrawing(feature);\n      }\n\n      if (feature.color !== false) {\n        featureContext.fillStyle = feature.color;\n        featureContext.fillRect(feature.x, feature.y, feature.width, feature.height);\n      }\n\n      if (feature.clear === true) {\n        featureContext.clearRect(feature.x, feature.y, feature.width, feature.height);\n      }\n\n      if (feature.borderColor) {\n        featureContext.strokeStyle = feature.borderColor;\n        featureContext.strokeRect(feature.x, Math.floor(feature.y) + 0.5, feature.width, feature.height);\n      }\n    }\n\n    if (this.labels && feature.label) {\n      this.drawLabel(feature, labelContext, scale);\n    }\n\n    if (feature.decorations) {\n      this.decorateFeature(feature, featureContext, scale);\n    }\n  },\n\n  drawSubFeatures: function (feature, featureContext, labelContext, scale) {\n    var subFeatures = $.extend(true, [], feature.subFeatures);\n    var joinColor   = feature.joinColor || feature.color;\n\n    for (var i = 0; i < subFeatures.length; i++) {\n      if (!subFeatures[i].fake) {\n        this.drawFeature($.extend(true, {}, feature, { subFeatures: false, label: false }, subFeatures[i].position[scale], subFeatures[i]), featureContext, labelContext, scale);\n      }\n\n      if (subFeatures[i].position[scale].join && subFeatures[i].position[scale].join.width > 0) {\n        this.drawSubFeatureJoin($.extend({ color: joinColor }, subFeatures[i].position[scale].join), featureContext);\n      }\n    }\n  },\n\n  drawLabel: function (feature, context, scale) {\n    var original = feature.untruncated;\n    var width    = (original || feature).width;\n\n    if (this.labels === 'overlay' && feature.labelWidth >= Math.floor(width)) {\n      return;\n    }\n\n    if (feature.labelPosition) {\n      context.labelPositions = context.labelPositions || new RTree();\n    }\n\n    if (typeof feature.label === 'string') {\n      feature.label = [ feature.label ];\n    }\n\n    var x       = (original || feature).x;\n    var n       = this.repeatLabels ? Math.ceil((width - Math.max(scale, 1) - (this.labels === 'overlay' ? feature.labelWidth : 0)) / this.width) || 1 : 1;\n    var spacing = width / n;\n    var label, start, j, y, currentY, h;\n\n    if (this.repeatLabels && (scale > 1 || this.labels !== 'overlay')) { // Ensure there's always a label in each image\n      spacing = this.browser.length * scale;\n      n = Math.ceil(width / spacing);\n    }\n\n    if (!feature.labelColor) {\n      this.setLabelColor(feature);\n    }\n\n    context.fillStyle = feature.labelColor;\n\n    if (this.labels === 'overlay') {\n      label = [ feature.label.join(' ') ];\n      y     = feature.y + (feature.height + 1) / 2;\n      h     = 0;\n    } else {\n      label = feature.label;\n      y     = feature.labelPosition ? feature.labelPosition.y : feature.y + feature.height + this.featureMargin.bottom;\n      h     = this.fontHeight + 2;\n    }\n\n    var i      = context.textAlign === 'center' ? 0.5 : 0;\n    var offset = feature.labelWidth * i;\n\n    if (n > 1) {\n      i += Math.max(Math.floor(-(feature.labelWidth + x) / spacing), 0);\n    }\n\n    for (; i < n; i++) {\n      start = x + (i * spacing);\n\n      if (start + feature.labelWidth >= 0) {\n        if ((start - offset > this.width) || (i >= 1 && start + feature.labelWidth > feature.position[scale].X + feature.position[scale].width)) {\n          break;\n        }\n\n        for (j = 0; j < label.length; j++) {\n          currentY = y + (j * h);\n\n          if (context.labelPositions && context.labelPositions.search({ x: start, y: currentY, w: feature.labelWidth, h: h }).length) {\n            feature.position[scale].label.visible = false;\n            continue;\n          }\n\n          context.fillText(label[j], start, currentY);\n\n          if (context.labelPositions) {\n            context.labelPositions.insert({ x: start, y: currentY, w: feature.labelWidth, h: h }, label[j]);\n          }\n        }\n      }\n    }\n  },\n\n  setFeatureColor: function (feature) {\n    feature.color = this.color;\n  },\n\n  setLabelColor: function (feature) {\n    feature.labelColor = this.fontColor || feature.color || this.color;\n  },\n\n  // Method to lighten a color by an amount, adapted from http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n  shadeColor: function (color, percent) {\n    var f = parseInt(color.slice(1), 16);\n    var R = f >> 16;\n    var G = f >> 8 & 0x00FF;\n    var B = f & 0x0000FF;\n\n    return '#' + (\n      0x1000000 +\n      (Math.round((255 - R) * percent) + R) * 0x10000 +\n      (Math.round((255 - G) * percent) + G) * 0x100 +\n      (Math.round((255 - B) * percent) + B)\n    ).toString(16).slice(1);\n  },\n\n  // truncate features - make the features start at 1px outside the canvas to ensure no lines are drawn at the borders incorrectly\n  truncateForDrawing: function (feature) {\n    var start = Math.min(Math.max(feature.x, -1), this.width + 1);\n    var width = feature.x - start + feature.width;\n\n    if (width + start > this.width) {\n      width = this.width - start + 1;\n    }\n\n    feature.untruncated = { x: feature.x, width: feature.width };\n    feature.x           = start;\n    feature.width       = Math.max(width, 0);\n  },\n\n  drawSubFeatureJoin: function (join, context) {\n    var coords = this.truncateSubFeatureJoinForDrawing(join);\n\n    if (!coords) {\n      return;\n    }\n\n    var lineWidth = context.lineWidth;\n\n    context.strokeStyle = join.color;\n    context.lineWidth   = this.subFeatureJoinLineWidth;\n\n    context.beginPath();\n    context.moveTo(coords.x1, coords.y1);\n\n    switch (this.subFeatureJoinStyle) {\n      case 'line':\n        context.lineTo(coords.x3, coords.y1);\n        break;\n      case 'peak':\n        context.lineTo(coords.x2, coords.y2);\n        context.lineTo(coords.x3, coords.y3);\n        break;\n      case 'curve':\n        context.quadraticCurveTo(coords.x2, coords.y2, coords.x3, coords.y3);\n        break;\n      default: break;\n    }\n\n    context.stroke();\n\n    context.lineWidth = lineWidth;\n  },\n\n  truncateSubFeatureJoinForDrawing: function (coords) {\n    var y1 = coords.y; // y coord of the ends of the line (half way down the exon box)\n    var y3 = y1;\n\n    if (this.subFeatureJoinStyle === 'line') {\n      this.truncateForDrawing(coords);\n      y1 += 0.5; // Sharpen line\n    }\n\n    var x1 = coords.x;                // x coord of the right edge of the first exon\n    var x3 = coords.x + coords.width; // x coord of the left edge of the second exon\n\n    // Skip if completely outside the image's region\n    if (x3 < 0 || x1 > this.width) {\n      return false;\n    }\n\n    var x2, y2, xMid, yScale;\n\n    // Truncate the coordinates of the line being drawn, so it is inside the image's region\n    if (this.subFeatureJoinStyle === 'peak') {\n      xMid   = (x1 + x3) / 2;\n      x2     = xMid;                     // x coord of the peak of the peak/curve\n      y2     = coords.y + coords.height; // y coord of the peak of the peak/curve (level with the top (forward strand) or bottom (reverse strand) of the exon box)\n      yScale = (y2 - y1) / (xMid - x1);  // Scale factor for recalculating coords if points lie outside the image region\n\n      if (xMid < 0) {\n        y2 = coords.y + (yScale * x3);\n        x2 = 0;\n      } else if (xMid > this.width) {\n        y2 = coords.y + (yScale * (this.width - coords.x));\n        x2 = this.width;\n      }\n\n      if (x1 < 0) {\n        y1 = xMid < 0 ? y2 : coords.y - (yScale * coords.x);\n        x1 = 0;\n      }\n\n      if (x3 > this.width) {\n        y3 = xMid > this.width ? y2 : y2 - (yScale * (this.width - x2));\n        x3 = this.width;\n      }\n    } else if (this.subFeatureJoinStyle === 'curve') {\n      // TODO: try truncating when style is curve\n      x2 = coords.x + coords.width / 2;\n      y2 = coords.y + coords.height;\n    }\n\n    return {\n      x1: x1, y1: y1,\n      x2: x2, y2: y2,\n      x3: x3, y3: y3\n    };\n  },\n\n  formatLabel: function (label) {\n    var power = Math.floor((label.toString().length - 1) / 3);\n    var unit  = this.labelUnits[power];\n\n    label /= Math.pow(10, power * 3);\n\n    return Math.floor(label) + (unit === 'bp' ? '' : '.' + (label.toString().split('.')[1] || '').concat('00').substring(0, 2)) + ' ' + unit;\n  },\n\n  drawBackground  : $.noop,\n  decorateFeature : $.noop // decoration for the features\n});\n","Genoverse.Track.Controller.Static = Genoverse.Track.Controller.extend({\n  addDomElements: function () {\n    this.base();\n\n    this.image = $('<img>').appendTo(this.imgContainer);\n\n    this.container.toggleClass('gv-track-container gv-track-container-static').prepend(this.imgContainer);\n    this.scrollContainer.add(this.messageContainer).remove();\n  },\n\n  reset: function () {\n    delete this.stringified;\n    this.base.apply(this, arguments);\n  },\n\n  setWidth: function (width) {\n    this.base(width);\n    this.image.width = this.width;\n  },\n\n  makeFirstImage: function () {\n    this.base.apply(this, arguments);\n    this.container.css('left', 0);\n    this.imgContainer.show();\n  },\n\n  makeImage: function (params) {\n    if (this.prop('disabled')) {\n      return $.Deferred().resolve();\n    }\n\n    var features = this.view.positionFeatures(this.model.findFeatures(params.chr, params.start, params.end), params);\n\n    if (features) {\n      var string = JSON.stringify(features);\n\n      if (this.stringified !== string) {\n        var height = this.prop('height');\n\n        params.width         = this.width;\n        params.featureHeight = height;\n\n        this.render(features, this.image.data(params));\n        this.imgContainer.children(':last').show();\n        this.resize(height, undefined, false);\n\n        this.stringified = string;\n      }\n    }\n\n    return $.Deferred().resolve();\n  }\n});\n\nGenoverse.Track.Model.Static = Genoverse.Track.Model.extend({\n  url            : false,\n  checkDataRange : function () { return true; }\n});\n\nGenoverse.Track.View.Static = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 1, bottom: 0, left: 1 },\n\n  positionFeature : $.noop,\n  scaleFeatures   : function (features) { return features; },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    for (var i = 0; i < features.length; i++) {\n      this.drawFeature(features[i], featureContext, labelContext, scale);\n    }\n  }\n});\n\nGenoverse.Track.Static = Genoverse.Track.extend({\n  controls   : 'off',\n  resizable  : false,\n  controller : Genoverse.Track.Controller.Static,\n  model      : Genoverse.Track.Model.Static,\n  view       : Genoverse.Track.View.Static\n});\n","Genoverse.Track.Controller.Stranded = Genoverse.Track.Controller.extend({\n  constructor: function (properties) {\n    this.base(properties);\n\n    if (typeof this._makeImage === 'function') {\n      return;\n    }\n\n    var strand        = this.prop('strand');\n    var featureStrand = this.prop('featureStrand');\n\n    if (strand === -1) {\n      this._makeImage = this.track.makeReverseImage ? $.proxy(this.track.makeReverseImage, this) : this.makeImage;\n      this.makeImage  = $.noop;\n    } else {\n      strand = this.prop('strand', 1);\n\n      this._makeImage = this.makeImage;\n      this.makeImage  = this.makeForwardImage;\n\n      var track = this.track;\n\n      setTimeout(function () {\n        track.reverseTrack = track.browser.addTrack(track.constructor.extend({\n          id           : track.id ? track.id + 'Reverse' : undefined,\n          strand       : -1,\n          url          : false,\n          order        : typeof track.orderReverse === 'number' ? track.orderReverse : track.order,\n          forwardTrack : track\n        }));\n\n        $.each(track.controller._deferredReverseTrackImages, function (i, args) { track.controller._makeReverseTrackImage.apply(track.controller, args); });\n        delete track.controller._deferredReverseTrackImages;\n      }, 1);\n    }\n\n    if (!featureStrand) {\n      this.prop('featureStrand', strand);\n    }\n  },\n\n  makeForwardImage: function (params) {\n    this._makeReverseTrackImage(params, this._makeImage(params));\n  },\n\n  _makeReverseTrackImage: function (params, deferred) {\n    var reverseTrack = this.prop('reverseTrack');\n\n    if (!reverseTrack) {\n      this._deferredReverseTrackImages = (this._deferredReverseTrackImages || []).concat([[ params, deferred ]]);\n      return;\n    }\n\n    if (deferred && typeof deferred.done === 'function') {\n      deferred.done(function () {\n        reverseTrack.controller._makeImage(params, deferred);\n      });\n    } else {\n      reverseTrack.controller._makeImage(params, deferred);\n    }\n  },\n\n  destroy: function () {\n    if (this.removing) {\n      return;\n    }\n\n    this.removing = true;\n\n    this.browser.removeTrack(this.prop('forwardTrack') || this.prop('reverseTrack'));\n    this.base();\n  }\n});","Genoverse.Track.Model.Stranded = Genoverse.Track.Model.extend({\n  init: function (reset) {\n    this.base(reset);\n\n    if (!reset) {\n      var otherTrack = this.prop('forwardTrack');\n\n      if (otherTrack) {\n        this.featuresByChr = otherTrack.prop('featuresByChr');\n        this.features      = otherTrack.prop('features');\n        this.featuresById  = otherTrack.prop('featuresById');\n      }\n    }\n  },\n\n  parseURL: function () {\n    if (!this.urlParams.strand) {\n      this.urlParams.strand = this.prop('featureStrand');\n    }\n\n    return this.base.apply(this, arguments);\n  },\n\n  findFeatures: function () {\n    var strand = this.track.featureStrand;\n    return $.grep(this.base.apply(this, arguments), function (feature) { return feature.strand === strand; });\n  }\n});\n","// These are abstract classes, implemented by Graph.Bar and Graph.Line. They will not work properly on their own.\n\nGenoverse.Track.Controller.Graph = Genoverse.Track.Controller.extend({\n  setYRange: function (min, max) {\n    if (this.browser.dragging) {\n      return;\n    }\n\n    if (this.prop('showZeroY')) {\n      this.prop('range', [ Math.min(min, 0), Math.max(max, 0) ]);\n    } else {\n      this.prop('range', [ min, max ]);\n    }\n\n    this.track.reset();\n  },\n\n  yMinMaxFromFeatures: function (features) {\n    var min =  Infinity;\n    var max = -Infinity;\n    var i, j;\n\n    if (this.prop('type') === 'Line') {\n      for (i = 0; i < features.length; i++) {\n        for (j = 0; j < features[i].coords.length; j++) {\n          if (!isNaN(features[i].coords[j][1])) {\n            min = Math.min(min, features[i].coords[j][1]);\n            max = Math.max(max, features[i].coords[j][1]);\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < features.length; i++) {\n        if (!isNaN(features[i].height)) {\n          min = Math.min(min, features[i].height);\n          max = Math.max(max, features[i].height);\n        }\n      }\n    }\n\n    min = min ===  Infinity ? 0 : min;\n    max = max === -Infinity ? 0 : max;\n\n    return { min: min, max: max };\n  },\n\n  afterSetName: function () {\n    this.minLabelHeight = Math.max(this.minLabelHeight, this.prop('fontHeight') * 2 + this.prop('margin') + this.prop('marginTop')); // Minimum height that can contain axis labels for range[0] and range[1]\n  },\n\n  visibleFeatureHeight: function () {\n    if (this.prop('rescaleable') === 'auto') {\n      var yScale = this.track.getYScale();\n      var y      = this.yMinMaxFromFeatures(this.model.findFeatures(this.browser.chr, this.browser.start, this.browser.end));\n\n      return Math.ceil(Math.max(yScale * (y.max - y.min), this.prop('hideEmpty') ? 0 : this.minLabelHeight));\n    }\n\n    return this.prop('height');\n  },\n\n  resize: function () {\n    var prevHeight = this.prop('height');\n    var rtn        = this.base.apply(this, arguments);\n    var height     = this.prop('height');\n\n    if (prevHeight !== height) {\n      if (this.prop('rescaleable') === true) {\n        var prevRange     = this.prop('range');\n        var maxDP         = Math.max.apply(null, prevRange.map(function (r) { return (r.toString().split('.')[1] || '').length; }));\n        var prevRangeSize = prevRange[1] - prevRange[0];\n        var rangeChange   = Math.ceil((prevRangeSize * (height / prevHeight) - prevRangeSize) / 2);\n\n        this.setYRange(\n          parseFloat((prevRange[0] - rangeChange).toFixed(maxDP), 10),\n          parseFloat((prevRange[1] + rangeChange).toFixed(maxDP), 10)\n        );\n      } else {\n        this.track.reset();\n      }\n    }\n\n    (this.prop('expander') || $()).hide();\n    (this.prop('resizer')  || $()).removeClass('gv-resizer-expander');\n\n    return rtn;\n  },\n\n  autoResize: function () {\n    if (this.prop('rescaleable') === 'auto') {\n      var visibleFeatures = this.model.findFeatures(this.browser.chr, this.browser.start, this.browser.end);\n\n      if (visibleFeatures.length) {\n        var range = this.prop('range');\n        var y     = this.yMinMaxFromFeatures(visibleFeatures);\n\n        if (y.min || y.max) {\n          var maxDP = Math.max.apply(null, range.map(function (r) { return (r.toString().split('.')[1] || '').length; }));\n          var round = Math.pow(10, maxDP);\n          var minY  = parseFloat((Math.floor(y.min * round) / round).toFixed(maxDP), 10);\n          var maxY  = parseFloat((Math.ceil (y.max * round) / round).toFixed(maxDP), 10);\n\n          if (this.prop('showZeroY')) {\n            minY = Math.min(minY, 0);\n            maxY = Math.max(maxY, 0);\n          }\n\n          if (minY === maxY) {\n            maxY++;\n          }\n\n          if (minY !== range[0] || maxY !== range[1]) {\n            return this.setYRange(minY, maxY);\n          }\n        }\n      }\n    } else {\n      return this.base.apply(this, arguments);\n    }\n  },\n\n  makeFirstImage: function () {\n    var controller = this;\n\n    return this.base.apply(this, arguments).done(function () {\n      controller.prop('yAxisPlaceholder').hide();\n      controller.prop('offsetContainer')\n        .prepend(controller.prop('guidelinesCanvas'))\n        .before(controller.prop('yAxisCanvas').removeClass('gv-loading'));\n    });\n  },\n\n  typeWrapper        : function (func, args) { return (Genoverse.Track.Controller.Graph[this.prop('type')][func] || Genoverse.Track.Controller.prototype[func]).apply(this, args); },\n  click              : function () { return this.typeWrapper('click',              arguments); },\n  getClickedFeatures : function () { return this.typeWrapper('getClickedFeatures', arguments); },\n  populateMenu       : function () { return this.typeWrapper('populateMenu',       arguments); }\n});\n\nGenoverse.Track.Model.Graph = Genoverse.Track.Model.extend({\n  dataBuffer     : { start: 1, end: 1 },\n  setLabelBuffer : $.noop,\n  sortFeatures   : function (features) { return features.sort(function (a, b) { return a.start - b.start; }); }\n});\n\nGenoverse.Track.View.Graph = Genoverse.Track.View.extend({\n  featureMargin: {},\n\n  featureDataSets: function (features) {\n    var datasets = this.prop('datasets').concat({ name: '_default' });\n    var setNames = {};\n    var sets     = {};\n\n    for (var i = 0; i < datasets.length; i++) {\n      setNames[datasets[i].name] = true;\n    }\n\n    for (i = 0; i < features.length; i++) {\n      set = setNames[features[i].dataset] ? features[i].dataset : '_default';\n\n      sets[set] = sets[set] || [];\n      sets[set].push(features[i]);\n    }\n\n    return { list: datasets, features: sets };\n  }\n});\n\nGenoverse.Track.Graph = Genoverse.Track.extend({\n  controller   : Genoverse.Track.Controller.Graph,\n  margin       : 10,        // Same as fontHeight - needed to allow axis labels for range[0] and range[1] to be drawn without being cut off by the edge of the image\n  invert       : true,\n  yAxisLabels  : undefined, // An array of numerical labels for the y-axis. Should not be configured manually if the track is resizable.\n  yRange       : undefined, // An array of [ minY, maxY ] for the graph\n  showZeroY    : true,      // If true, 0 will always be included in auto-generated yRanges. If yRange is defined in configuration, this setting will be ignored.\n  globalAlpha  : 1,\n  axesSettings : { axisColor: 'black', axisLabelColor: 'black', scaleLineColor: '#E5E5E5' },\n  datasets     : [],\n  legend       : true,\n  labels       : false,\n\n  /*\n   * resizable and rescaleableY combine to define what happens when the track \"resizes\", as follows:\n   * resizable | rescaleableY | Effect\n   * --------- | ------------ | ------\n   * true      | true         | Users can change the track height, and doing so changes the y-axis range (y-axis range will change proportionally to track height change)\n   * true      | 'auto'       | Users can change the track height, and doing so does not change the y-axis range. However, the y-axis range will automatically change so that no peaks are cut off.\n   * true      | false        | Users can change the track height, and doing so does not change the y-axis range (peak heights will change proportionally to track height change)\n   * false     | true         | Like true/true\n   * false     | 'auto'       | Track height cannot be changed, but the y-axis range will automatically change so that no peaks are cut off\n   * false     | false        | Neither track height nor y-axis range can be changed, either by users or automatically\n   * 'auto'    | true         | Like false/'auto'\n   * 'auto'    | 'auto'       | Like false/'auto'\n   * 'auto'    | false        | Like false/'auto' (it is not possible to change a track's height such that no peaks are cut off without being able to change the y-axis range)\n   */\n  resizable    : true,\n  rescaleableY : 'auto',\n\n  setDefaults: function () {\n    this.range       = this.yRange || [ 0, this.height ];\n    this.rescaleable = this.rescaleableY;\n\n    if ($.isPlainObject(this.margin)) {\n      if (this.invert) {\n        this.marginTop = this.margin.bottom;\n        this.margin    = this.margin.top;\n      } else {\n        this.marginTop = this.margin.top;\n        this.margin    = this.margin.bottom;\n      }\n    }\n\n    this.marginTop = typeof this.marginTop === 'number' ? this.marginTop : this.margin;\n\n    if (this.resizable === false) {\n      this.resizable = this.rescaleable;\n    } else if (this.resizable === 'auto') {\n      this.rescaleable = 'auto';\n    }\n\n    this.base.apply(this, arguments);\n\n    if (this.legend && !this.datasets.length) {\n      this.legend = false;\n    }\n\n    this.height        += this.marginTop;\n    this.initialHeight += this.marginTop;\n  },\n\n  setHeight: function (height) {\n    return this.base(height, true); // always force show\n  },\n\n  setMVC: function () {\n    var hadController = this.controller instanceof Genoverse.Track.Controller;\n    var rtn           = this.base.apply(this, arguments);\n\n    if (!hadController) {\n      var scrollContainer = this.prop('scrollContainer');\n\n      this.yAxisPlaceholder = $('<div class=\"gv-image-container gv-loading\">');\n      this.yAxisCanvas      = $('<canvas class=\"gv-image-container gv-barchart-axis\">' ).attr('width', this.width);\n      this.guidelinesCanvas = $('<canvas class=\"gv-image-container gv-barchart-guide\">').attr('width', this.width);\n\n      if (this.disabled) {\n        this.yAxisCanvas.add(this.guidelinesCanvas).attr('height', 0);\n      }\n\n      this.offsetContainer = $('<div class=\"gv-scroll-container-offset\">')\n        .width(this.width)\n        .insertAfter(scrollContainer)\n        .append(scrollContainer)\n        .before(this.yAxisPlaceholder);\n\n      this.drawAxes();\n    }\n\n    return rtn;\n  },\n\n  afterSetMVC: function () {\n    // Never show the control to switch between auto-height and manual resizing, since its behaviour is not the same here as for standard tracks, due to interactions between resizable and rescaleableY.\n    (this.prop('heightToggler') || $()).addClass('gv-hidden');\n    (this.prop('resizer')       || $()).off('click');\n  },\n\n  reset: function () {\n    this.drawAxes();\n    return this.base.apply(this, arguments);\n  },\n\n  enable: function () {\n    var wasDisabled = this.disabled;\n    var rtn         = this.base.apply(this, arguments);\n\n    if (wasDisabled) {\n      this.drawAxes();\n    }\n\n    return rtn;\n  },\n\n  getYScale: function () {\n    var range  = this.prop('range');\n    var yScale = (this.prop('height') - this.prop('margin') - this.prop('marginTop')) / (range[1] - range[0]);\n\n    return yScale;\n  },\n\n  drawAxes: function () {\n    if (this.prop('disabled')) {\n      return;\n    }\n\n    var width        = this.width;\n    var height       = this.prop('height');\n    var invert       = this.prop('invert');\n    var margin       = this.prop('margin');\n    var marginTop    = this.prop('marginTop');\n    var fontHeight   = this.prop('fontHeight');\n    var range        = this.prop('range');\n    var axesSettings = this.prop('axesSettings');\n    var yAxisLabels  = this.prop('yAxisLabels');\n    var yScale       = this.getYScale();\n    var axisContext  = this.prop('yAxisCanvas'     ).attr('height', height)[0].getContext('2d');\n    var linesContext = this.prop('guidelinesCanvas').attr('height', height)[0].getContext('2d');\n    var y, n, i, interval, maxDP;\n\n    if (!yAxisLabels) {\n      n           = Math.floor((height - margin - marginTop) / (fontHeight * 2)); // number of labels that can be shown\n      interval    = (range[1] - range[0]) / n;                                    // label incrementor\n      yAxisLabels = [];\n\n      if (interval !== Math.round(interval)) { // floats\n        // Strenuously ensure that interval does not contain a floating point error.\n        // Assumes that values in range do not contain floating point errors.\n        maxDP = Math.max.apply(null, range.map(function (r) { return (r.toString().split('.')[1] || '').length; })) + 1;\n      }\n\n      for (i = 0; i <= n; i++) {\n        yAxisLabels.push((range[0] + interval * i)[maxDP ? 'toFixed' : 'toString'](maxDP));\n      }\n    }\n\n    var axisWidth = Math.max.apply(null, yAxisLabels.map(function (label) { return axisContext.measureText(label).width; })) + 10;\n\n    this.prop('offsetContainer').css('marginLeft',  axisWidth).width(width - axisWidth);\n    this.prop('scrollContainer').css('marginLeft', -axisWidth);\n\n    this.prop('yAxisPlaceholder').width(axisWidth).show();\n\n    axisContext.fillStyle = axesSettings.axisColor;\n    axisContext.fillRect(axisWidth - 1, invert ? margin : marginTop, 1, height - margin - marginTop); // Vertical line\n\n    linesContext.fillStyle  = axesSettings.scaleLineColor;\n    axisContext.fillStyle    = axesSettings.axisLabelColor;\n    axisContext.textBaseline = 'middle';\n    axisContext.textAlign    = 'right';\n\n    for (i = 0; i < yAxisLabels.length; i++) {\n      y = marginTop + (parseFloat(yAxisLabels[i], 10) - range[0]) * yScale;\n      y = invert ? height - y : y;\n\n      linesContext.fillRect(0, y, width, 1);                  // Horizontal line, indicating the y-position of a numerical value\n      axisContext.fillRect(axisWidth - 4, y, 4, 1);           // Horizontal line, indicating the y-position of a numerical value\n      axisContext.fillText(yAxisLabels[i], axisWidth - 6, y); // The numerical value for the horizontal line\n    }\n\n    // Draw a horizontal line at y = 0\n    y = (-range[0] * yScale) + marginTop;\n    linesContext.fillStyle = axesSettings.axisColor;\n    linesContext.fillRect(0, invert ? height - y : y, width, 1);\n  }\n});\n","Genoverse.Track.Controller.Graph.Line = {\n  click: function () {\n    if (this.prop('showPopups')) {\n      this.prop('menus').hide(); // Hide first, because closeMenus causes fadeOut to happen, which doens't look great in this scenario\n      this.browser.closeMenus(this);\n      return Genoverse.Track.Controller.prototype.click.apply(this, arguments);\n    }\n  },\n\n  getClickedFeatures: function (x) {\n    var bounds    = { x: x, y: 0, w: 1, h: 9e99 };\n    var tolerance = this.scale > 1 ? 0 : 1 / this.scale;\n    var xMid      = bounds.x / this.scale;\n    var xRange    = tolerance ? [ Math.floor(xMid - tolerance), Math.ceil(xMid + tolerance) ] : [ Math.floor(xMid), Math.floor(xMid) ];\n    var features  = {};\n\n    this.featurePositions.search(bounds).forEach(function (f) {\n      if (!features[f.dataset]) {\n        features[f.dataset] = f;\n      }\n    });\n\n    return [\n      this.model.sortFeatures(Object.keys(features).map(function (k) {\n        return $.extend(true, {}, features[k], { clickedCoords: features[k].coords.filter(function (c) { return c[0] >= xRange[0] && c[0] <= xRange[1]; }) });\n      }))\n    ];\n  },\n\n  populateMenu: function (features) {\n    if (!features.length || !features[0].clickedCoords.length) {\n      return [];\n    }\n\n    var start = features[0].clickedCoords[0][0];\n    var end   = features[0].clickedCoords[features[0].clickedCoords.length - 1][0];\n    var avg   = start !== end;\n    var menu  = { title: features[0].chr + ':' + (start === end ? start : start + '-' + end) };\n    var m, values, i;\n\n    function getValues(coords) {\n      var values = coords.map(function (c) { return c[1]; }).sort(function (a, b) { return a - b; });\n\n      return {\n        avg: values.reduce(function (n, v) { return n + v; }, 0) / values.length,\n        min: values[0],\n        max: values[values.length - 1]\n      };\n    }\n\n    if (avg) {\n      if (features.length === 1) {\n        values = getValues(features[0].clickedCoords);\n\n        menu['Average value'] = values.avg;\n        menu['Min value']     = values.min;\n        menu['Max value']     = values.max;\n      } else {\n        menu = [ menu ];\n\n        for (i = 0; i < features.length; i++) {\n          values    = getValues(features[i].clickedCoords);\n          m         = { title: features[i].dataset };\n          m.Average = values.avg;\n          m.Min     = values.min;\n          m.Max     = values.max;\n\n          menu.push(m);\n        }\n      }\n    } else {\n      if (features.length === 1) {\n        menu.Value = features[0].clickedCoords[0][1];\n      } else {\n        for (i = 0; i < features.length; i++) {\n          menu[features[i].dataset] = features[i].clickedCoords[0][1];\n        }\n      }\n    }\n\n    return menu;\n  }\n};\n\nGenoverse.Track.Model.Graph.Line = Genoverse.Track.Model.Graph.extend({\n  parseData: function (data, chr, start, end) {\n    var features = [];\n    var feature, x;\n\n    function getX(f) {\n      return typeof f.x !== 'undefined' ? f.x : f.start + (f.start === f.end ? 0 : (f.end - f.start + 1) / 2);\n    }\n\n    data.sort(function (a, b) { return (a.start - b.start) || (a.x - b.x); });\n\n    for (i = 0; i < data.length; i++) {\n      if (typeof data[i].y !== 'undefined' && !data[i].coords) {\n        x = getX(data[i]);\n\n        if (feature && feature.coords[feature.coords.length - 1][0] === x - 1) {\n          feature.coords.push([ x, data[i].y ]);\n          feature.end = x;\n        } else {\n          if (feature) {\n            features.push(feature);\n          }\n\n          feature = $.extend({ coords: [[ x, data[i].y ]], start: x, end: x }, data[i]);\n        }\n      } else {\n        if (feature) {\n          features.push(feature);\n          feature = undefined;\n        }\n\n        features.push(data[i]);\n      }\n    }\n\n    if (feature) {\n      features.push(feature);\n    }\n\n    return this.base(features, chr, start, end);\n  },\n\n  insertFeature: function (feature) {\n    var datasets = this.prop('datasets');\n\n    if (feature.coords) {\n      feature.coords = feature.coords.map(function (c, i) { return c.length > 1 ? c : [ feature.start + i, c ]; }).filter(function (c) { return c[0] >= feature.start && c[0] <= feature.end; });\n    } else if (feature.y) {\n      feature.coords = [[ feature.start + (feature.start === feature.end ? 0 : (feature.end - feature.start + 1) / 2), feature.y ]];\n    } else {\n      feature.coords = [];\n    }\n\n    if (datasets.length) {\n      feature.legend = feature.dataset;\n      feature.color  = (datasets.filter(function (s) { return s.name === feature.dataset; })[0] || { color: this.color }).color;\n    }\n\n    feature.id = feature.id || [ feature.chr, feature.start, feature.end, feature.dataset || '' ].join(':');\n\n    return this.base.apply(this, arguments);\n  }\n});\n\nGenoverse.Track.View.Graph.Line = Genoverse.Track.View.Graph.extend({\n  featureHeight: 1,\n\n  positionFeatures: function (features, params) {\n    var scale  = params.scale;\n    var yScale = this.track.getYScale();\n    var margin = this.prop('marginTop');\n    var zeroY  = margin - this.prop('range')[0] * yScale;\n    var add    = (scale > 1 ? scale / 2 : 0) - params.scaledStart;\n\n    function setCoords(c) {\n      return [ c[0] * scale + add, c[1] * yScale + zeroY ];\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      features[i].coordPositions = features[i].coords.map(setCoords);\n    }\n\n    params.featureHeight = this.prop('height');\n\n    return this.base(features, params);\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    if (!features.length) {\n      return;\n    }\n\n    var datasets     = this.featureDataSets(features);\n    var height       = this.prop('height');\n    var marginTop    = this.prop('marginTop');\n    var marginBottom = this.prop('margin');\n    var baseline     = Math.min(Math.max(marginTop, marginTop - this.prop('range')[0] * this.track.getYScale()), height - marginTop);\n    var binSize      = scale < 1 ? Math.floor(1 / scale) : 0;\n    var set, conf, feature, coords, binnedFeatures, lastBinSize, j, k, binStart, bin, l;\n\n    var defaults = {\n      color       : this.color,\n      fill        : this.prop('fill'),\n      lineWidth   : this.prop('lineWidth'),\n      globalAlpha : this.prop('globalAlpha')\n    };\n\n    for (var i = 0; i < datasets.list.length; i++) {\n      set  = datasets.list[i].name;\n      conf = $.extend({}, defaults, datasets.list[i]);\n\n      for (j = 0; j < (datasets.features[set] || []).length; j++) {\n        feature = datasets.features[set][j];\n        coords  = feature.coordPositions;\n\n        if (coords.length) {\n          if (binSize) {\n            binnedFeatures = [];\n            k              = 0;\n\n            while (k < coords.length) {\n              binStart = feature.coords[k][0];\n              bin      = [];\n\n              while (coords[k] && feature.coords[k][0] - binStart < binSize) {\n                bin.push(coords[k++]);\n              }\n\n              l      = bin.length;\n              bin    = bin.reduce(function (arr, b) { arr[0] += b[0]; arr[1] += b[1]; return arr; }, [ 0, 0 ]);\n              bin[0] = Math.round(bin[0] / l);\n\n              if (binnedFeatures.length && bin[0] === binnedFeatures[binnedFeatures.length - 1][0]) {\n                binnedFeatures[binnedFeatures.length - 1][1] = (binnedFeatures[binnedFeatures.length - 1][1] * lastBinSize + bin[1]) / (lastBinSize + l);\n              } else {\n                binnedFeatures.push([ bin[0], bin[1] / l ]);\n              }\n\n              lastBinSize = l;\n            }\n\n            coords = binnedFeatures;\n          }\n\n          featureContext.fillStyle = featureContext.strokeStyle = conf.color;\n          featureContext.lineWidth = conf.lineWidth;\n\n          if (conf.fill) {\n            featureContext.globalAlpha = conf.globalAlpha;\n          }\n\n          featureContext.beginPath();\n\n          if (conf.fill) {\n            featureContext.moveTo(coords[0][0], baseline);\n            featureContext.lineTo.apply(featureContext, coords[0]);\n          } else {\n            featureContext.moveTo.apply(featureContext, coords[0]);\n          }\n\n          for (k = 1; k < coords.length; k++) {\n            featureContext.lineTo.apply(featureContext, coords[k]);\n          }\n\n          featureContext.stroke();\n\n          if (conf.fill) {\n            featureContext.lineTo(coords[coords.length - 1][0], baseline);\n            featureContext.closePath();\n            featureContext.fill();\n            featureContext.globalAlpha = 1;\n          }\n        }\n      }\n    }\n\n    // Don't allow features to be drawn in the margins\n    featureContext.clearRect(0, 0,                     this.width, marginTop - 1);\n    featureContext.clearRect(0, height - marginBottom, this.width, marginBottom);\n  }\n});\n\nGenoverse.Track.Graph.Line = Genoverse.Track.Graph.extend({\n  type       : 'Line',\n  showPopups : true, // If true, clicking on the track will show popups. If false, popups will not appear.\n  fill       : false,\n  lineWidth  : 1,\n  model      : Genoverse.Track.Model.Graph.Line,\n  view       : Genoverse.Track.View.Graph.Line\n});","Genoverse.Track.Controller.Graph.Bar = {\n  getClickedFeatures: function (x, y) {\n    var yZero     = this.prop('marginTop') - (this.prop('range')[0] * this.track.getYScale());\n    var scale     = this.scale;\n    var tolerance = scale > 1 ? 0 : 1;\n\n    // Bars with negative values are stored in featurePositions with h < 0.\n    // While this works to a certain degree (fillRect allows negative height, drawing upwards from y), it makes them hard to search for in the RTree - to find such a feature you need to search with y = -h and h = y - h + 1\n    // It is therefore easier to search featuresByChr (i.e. the genomic positions) for a feature overlapping the x of the click, and then filter those results for y position manually.\n    var features = this.prop('featuresByChr')[this.browser.chr].search({\n      x: (x - (tolerance / 2)) / scale,\n      y: 0,\n      w: (1 + tolerance) / scale,\n      h: 1\n    });\n\n    if (features.length) {\n      if (\n        (y <  yZero && features.filter(function (f) { return f.position[scale].bounds.y + f.position[scale].bounds.h <= y && f.position[scale].bounds.y >= y; }).length === 0) ||\n        (y >= yZero && this.featurePositions.search({ x: x, y: y, w: 1, h: 1 }).length === 0)\n      ) {\n        features = [];\n      }\n    }\n\n    return features.length ? [ this.model.sortFeatures(features) ] : [];\n  },\n\n  populateMenu: function (features) {\n    if (!features.length) {\n      return [];\n    }\n\n    var start = features[0].start;\n    var end   = features[features.length - 1].end;\n    var avg   = features[0].start !== features[features.length - 1].start;\n    var menu  = { title: features[0].chr + ':' + (start === end ? start : start + '-' + end) };\n    var values, i;\n\n    function getValues(_features) {\n      var values = _features.map(function (f) { return f.height; }).sort(function (a, b) { return a - b; });\n\n      return {\n        avg: values.reduce(function (n, v) { return n + v; }, 0) / values.length,\n        min: values[0],\n        max: values[values.length - 1]\n      };\n    }\n\n    if (avg) {\n      if (features.length === 1) {\n        values = getValues(features);\n\n        menu['Average value'] = values.avg;\n        menu['Min value']     = values.min;\n        menu['Max value']     = values.max;\n      } else {\n        menu = [ menu ];\n\n        var datasets = this.prop('datasets');\n        var featuresByDataset;\n\n        if (datasets.length) {\n          featuresByDataset = datasets.reduce(function (hash, d) { hash[d.name] = []; return hash; }, {});\n\n          for (i = 0; i < features.length; i++) {\n            featuresByDataset[features[i].dataset].push(features[i]);\n          }\n        } else {\n          datasets          = [{ name: '' }];\n          featuresByDataset = { '': features };\n        }\n\n        for (i = 0; i < datasets.length; i++) {\n          values = getValues(featuresByDataset[datasets[i].name]);\n\n          menu.push($.extend({\n            Average : values.avg,\n            Min     : values.min,\n            Max     : values.max\n          }, datasets[i].name ? { title: datasets[i].name } : {}));\n        }\n      }\n    } else {\n      if (features.length === 1) {\n        menu.Value = features[0].height;\n      } else {\n        for (i = 0; i < features.length; i++) {\n          menu[features[i].dataset] = features[i].height;\n        }\n      }\n    }\n\n    return menu;\n  }\n};\n\nGenoverse.Track.Model.Graph.Bar = Genoverse.Track.Model.Graph.extend({\n  insertFeature: function (feature) {\n    var datasets = this.prop('datasets');\n\n    if (datasets.length) {\n      feature.legend = feature.dataset;\n      feature.color  = (datasets.filter(function (s) { return s.name === feature.dataset; })[0] || { color: this.color }).color;\n    }\n\n    feature.id = feature.id || [ feature.chr, feature.start, feature.end, feature.dataset || '' ].join(':');\n\n    return this.base.apply(this, arguments);\n  }\n});\n\nGenoverse.Track.View.Graph.Bar = Genoverse.Track.View.Graph.extend({\n  scaleFeatures: function (features, scale) {\n    var yScale = this.track.getYScale();\n    var zeroY  = this.prop('marginTop') - this.prop('range')[0] * yScale;\n\n    features = this.base(features, scale);\n\n    for (var i = 0; i < features.length; i++) {\n      features[i].position[scale].height = features[i].height * yScale;\n      features[i].position[scale].y      = zeroY;\n    }\n\n    return features;\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var datasets     = this.featureDataSets(features);\n    var marginBottom = this.prop('margin');\n    var binSize      = scale < 1 ? Math.ceil(1 / scale) : 0;\n    var conf, set, setFeatures, j, binnedFeatures, binStart, bin, f;\n\n    var defaults = {\n      color       : this.color,\n      globalAlpha : this.prop('globalAlpha')\n    };\n\n    for (var i = 0; i < datasets.list.length; i++) {\n      conf        = $.extend({}, defaults, datasets.list[i]);\n      set         = datasets.list[i].name;\n      setFeatures = $.extend(true, [], datasets.features[set] || []);\n\n      if (!setFeatures.length) {\n        continue;\n      }\n\n      if (binSize) {\n        binnedFeatures = [];\n        j              = 0;\n\n        while (j < setFeatures.length) {\n          binStart = setFeatures[j].start;\n          bin      = [];\n\n          while (setFeatures[j] && setFeatures[j].start - binStart < binSize) {\n            bin.push(setFeatures[j++]);\n          }\n\n\n          f = $.extend(true, {}, bin[0], {\n            height : bin.reduce(function (a, b) { return a + b.height; }, 0) / bin.length,\n            end    : bin[bin.length - 1].end\n          });\n\n          [ 'H', 'W', 'height', 'width' ].forEach(function (attr) {\n            f.position[scale][attr] = bin.reduce(function (a, b) { return a + b.position[scale][attr]; }, 0) / bin.length;\n          });\n\n          binnedFeatures.push(f);\n        }\n\n        setFeatures = binnedFeatures;\n      }\n\n      for (j = 0; j < setFeatures.length; j++) {\n        setFeatures[j].color = conf.color;\n      }\n\n      featureContext.globalAlpha = conf.globalAlpha;\n\n      this.base(setFeatures, featureContext, labelContext, scale);\n    }\n\n    // Don't allow features to be drawn in the margins\n    featureContext.clearRect(0, 0,                                  this.width, this.prop('marginTop') - 1);\n    featureContext.clearRect(0, this.prop('height') - marginBottom, this.width, marginBottom);\n  }\n});\n\nGenoverse.Track.Graph.Bar = Genoverse.Track.Graph.extend({\n  type      : 'Bar',\n  model     : Genoverse.Track.Model.Graph.Bar,\n  view      : Genoverse.Track.View.Graph.Bar,\n  threshold : 500000,\n\n  10000: $.extend( // Switch to line graph at 10000bp region\n    Object.keys(Genoverse.Track.Graph.Line.prototype).reduce(function (hash, key) {\n      if (Genoverse.Track.Graph.Line.prototype.hasOwnProperty(key) && !Base.prototype[key]) {\n        hash[key] = Genoverse.Track.Graph.Line.prototype[key];\n      }\n\n      return hash;\n    }, {}), {\n    fill  : true,\n    model : Genoverse.Track.Model.Graph.Line.extend({\n      parseData: function (data, chr, start, end) {\n        var coords = [];\n        var j;\n\n        for (var i = 0; i < data.length; i++) {\n          for (j = data[i].start; j < data[i].end; j++) {\n            coords.push([ j, data[i].height ]);\n          }\n        }\n\n        return this.base([{ chr: chr, start: start, end: end, coords: coords }], chr, start, end);\n      }\n    })\n  }),\n  50000: $.extend( // Switch to sparser line graph at 50000bp region\n    Object.keys(Genoverse.Track.Graph.Line.prototype).reduce(function (hash, key) {\n      if (Genoverse.Track.Graph.Line.prototype.hasOwnProperty(key) && !Base.prototype[key]) {\n        hash[key] = Genoverse.Track.Graph.Line.prototype[key];\n      }\n\n      return hash;\n    }, {}), {\n    fill  : true,\n    model : Genoverse.Track.Model.Graph.Line.extend({\n      parseData: function (data, chr, start, end) {\n        return this.base([{ chr: chr, start: start, end: end, coords: data.map(function (d) { return [ d.start, d.height ]; }) }], chr, start, end);\n      }\n    })\n  })\n});","Genoverse.Track.Controller.Sequence = Genoverse.Track.Controller.extend({\n  getClickedFeatures: function (x, y) {\n    var feature = this.base(x, y)[0];\n\n    return feature ? this.makeSeqFeatureMenu(feature, Math.floor(x / this.scale)) : false;\n  },\n\n  makeSeqFeatureMenu: function (feature, pos) {\n    feature.featureMenus      = feature.featureMenus      || {};\n    feature.featureMenus[pos] = feature.featureMenus[pos] || {\n      title    : feature.sequence.charAt(pos - feature.start),\n      Location : feature.chr + ':' + pos\n    }\n\n    return feature.featureMenus[pos].title ? feature.featureMenus[pos] : undefined;\n  }\n});\n","// Abstract Sequence model\n// assumes that the data source responds with raw sequence text\n// see Fasta model for more specific example\nGenoverse.Track.Model.Sequence = Genoverse.Track.Model.extend({\n  threshold : 100000,\n  chunkSize : 1000,\n  buffer    : 0,\n  dataType  : 'text',\n\n  setChrProps: function () {\n    var chr = this.browser.chr;\n\n    this.base();\n\n    this.chunksByChr      = this.chunksByChr || {};\n    this.chunksByChr[chr] = this.chunksByChr[chr] || {};\n  },\n\n  getData: function (chr, start, end) {\n    start = start - start % this.chunkSize + 1;\n    end   = end + this.chunkSize - end % this.chunkSize;\n    return this.base(chr, start, end);\n  },\n\n  parseData: function (data, chr, start, end) {\n    data = data.replace(/\\n/g, '');\n\n    if (this.prop('lowerCase')) {\n      data = data.toLowerCase();\n    }\n\n    for (var i = 0; i < data.length; i += this.chunkSize) {\n      if (this.chunksByChr[chr][start + i]) {\n        continue;\n      }\n\n      var feature = {\n        id       : chr + ':' + start + i,\n        chr      : chr,\n        start    : start + i,\n        end      : start + i + this.chunkSize,\n        sequence : data.substr(i, this.chunkSize),\n        sort     : start + i\n      };\n\n      this.chunksByChr[chr][feature.start] = feature;\n      this.insertFeature(feature);\n    }\n  }\n});\n","Genoverse.Track.Model.Sequence.Fasta = Genoverse.Track.Model.Sequence.extend({\n  url  : 'http://genoverse.org/data/Homo_sapiens.GRCh37.72.dna.chromosome.1.fa', // Example url\n\n  // Following settings could be left undefined and will be detected automatically via .getStartByte()\n  startByte  : undefined, // Byte in the file where the sequence actually starts\n  lineLength : undefined, // Length of the sequence line in the file\n\n  // TODO: Check if URL provided\n\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n\n    $.when(this.getStartByte()).done(function () {\n      start = start - start % this.chunkSize + 1;\n      end   = end + this.chunkSize - end % this.chunkSize;\n\n      var startByte = start - 1 + Math.floor((start - 1) / this.lineLength) + this.startByte;\n      var endByte   = end   - 1 + Math.floor((end   - 1) / this.lineLength) + this.startByte;\n\n      $.ajax({\n        url       : this.parseURL(),\n        dataType  : this.dataType,\n        context   : this,\n        headers   : { 'Range' : 'bytes=' + startByte + '-' + endByte },\n        xhrFields : this.xhrFields,\n        success   : function (data) { this.receiveData(data, chr, start, end); },\n        error     : this.track.controller.showError\n      }).done(function () { deferred.resolveWith(this); }).fail(function () { deferred.rejectWith(this); });\n    }).fail(function () { deferred.rejectWith(this); });\n\n    return deferred;\n  },\n\n  getStartByte: function () {\n    if (this.startByteRequest) {\n      return this.startByteRequest;\n    }\n\n    if (this.startByte === undefined || this.lineLength === undefined) {\n      this.startByteRequest = $.ajax({\n        url       : this.parseURL(),\n        dataType  : 'text',\n        context   : this,\n        headers   : { 'Range': 'bytes=0-300' },\n        xhrFields : this.xhrFields,\n        success   : function (data) {\n          if (data.indexOf('>') === 0) {\n            this.startByte = data.indexOf('\\n') + 1;\n          } else {\n            this.startByte = 0;\n          }\n\n          this.lineLength = data.indexOf('\\n', this.startByte) - this.startByte;\n        }\n      });\n\n      return this.startByteRequest;\n    }\n  }\n});\n","Genoverse.Track.Model.Sequence.Ensembl = Genoverse.Track.Model.Sequence.extend({\n  url              : '//rest.ensembl.org/sequence/region/human/__CHR__:__START__-__END__?content-type=text/plain', // Example url\n  dataRequestLimit : 10000000 // As per e! REST API restrictions\n});\n","Genoverse.Track.View.Sequence = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  colors        : { 'default': '#CCCCCC', A: '#73E973', T: '#DE4C61', G: '#FFFF77', C: '#688EC0' },\n  labelColors   : { 'default': '#000000', T: '#FFFFFF', C: '#FFFFFF' },\n  labels        : 'overlay',\n\n  setDefaults: function () {\n    this.base.apply(this, arguments);\n\n    var lowerCase = this.prop('lowerCase');\n\n    this.labelYOffset = typeof this.labelYOffset === 'number' ? this.labelYOffset : (this.featureHeight + 1) / 2;\n    this.widestLabel  = typeof this.widestLabel  === 'string' ? this.widestLabel : lowerCase ? 'g' : 'G';\n    this.labelWidth   = {};\n\n    this.labelWidth[this.widestLabel] = Math.ceil(this.context.measureText(this.widestLabel).width) + 1;\n\n    if (lowerCase) {\n      for (var key in this.colors) {\n        this.colors[key.toLowerCase()] = this.colors[key];\n      }\n\n      for (key in this.labelColors) {\n        this.labelColors[key.toLowerCase()] = this.labelColors[key];\n      }\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    featureContext.textBaseline = 'middle';\n    featureContext.textAlign    = 'left';\n\n    var width = Math.max(scale, this.minScaledWidth);\n\n    for (var i = 0; i < features.length; i++) {\n      this.drawSequence(features[i], featureContext, scale, width);\n    }\n  },\n\n  drawSequence: function (feature, context, scale, width) {\n    var drawLabels = this.labelWidth[this.widestLabel] < width - 1;\n    var start, bp;\n\n    for (var i = 0; i < feature.sequence.length; i++) {\n      start = feature.position[scale].X + i * scale;\n\n      if (start < -scale || start > context.canvas.width) {\n        continue;\n      }\n\n      bp = feature.sequence.charAt(i);\n\n      context.fillStyle = this.colors[bp] || this.colors['default'];\n      context.fillRect(start, feature.position[scale].Y, width, this.featureHeight);\n\n      if (!this.labelWidth[bp]) {\n        this.labelWidth[bp] = Math.ceil(context.measureText(bp).width) + 1;\n      }\n\n      if (drawLabels) {\n        context.fillStyle = this.labelColors[bp] || this.labelColors['default'];\n        context.fillText(bp, start + (width - this.labelWidth[bp]) / 2, feature.position[scale].Y + this.labelYOffset);\n      }\n    }\n  }\n});\n","Genoverse.Track.View.SequenceVariation = Genoverse.Track.View.Sequence.extend({\n  featureHeight : 15,\n  featureMargin : { top: 0, right: 0, bottom: 4, left: 0 },\n  bump          : true,\n  showLegend    : false,\n\n  positionFeature: function (feature, params) {\n    var position = feature.position[params.scale];\n\n    if (feature.alt_allele) {\n      if (!position.positioned) {\n        position.reference = { end: position.start + feature.ref_allele.length * params.scale };\n      }\n\n      position.reference.x = position.reference.end - params.scaledStart;\n    }\n\n    this.base(feature, params);\n  },\n\n  bumpFeature: function (bounds, feature) {\n    if (feature.alt_allele) {\n      this.base.apply(this, arguments);\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var drawing = { seq: [], snv: [] };\n\n    for (var i = 0; i < features.length; i++) {\n      drawing[features[i].alt_allele ? 'snv' : 'seq'].push(features[i]);\n    }\n\n    this.base(drawing.seq, featureContext, labelContext, scale);\n    this.highlightSNVs(drawing.snv, featureContext, scale);\n    this.base(drawing.snv, featureContext, labelContext, scale);\n    this.outlineSNVs(drawing.snv, featureContext, scale); // Redraw the outline for SNVs, since the feature will have been drawn on top of some of the outline created by highlightSNVs\n  },\n\n  highlightSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n\n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.reference.x, position.X + position.width ];\n\n      if (positionX[2] < 0 || positionX[0] > this.width) {\n        continue;\n      }\n\n      if (positionX[0] < 0 || positionX[2] > this.width) {\n        this.truncateForDrawing(positionX);\n      }\n\n      positionY = [ 0, position.Y - this.featureMargin.bottom / 2, position.Y, position.Y + this.featureHeight ];\n\n      if (!features[i].highlightColor) {\n        this.setHighlightColor(features[i]);\n      }\n\n      context.strokeStyle = context.fillStyle = features[i].highlightColor;\n      context.lineWidth   = 2;\n\n      context.beginPath();\n      context.moveTo(positionX[0], positionY[0]);\n      context.lineTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[2], positionY[2]);\n      context.lineTo(positionX[2], positionY[3]);\n      context.lineTo(positionX[0], positionY[3]);\n      context.closePath();\n      context.stroke();\n\n      context.lineWidth   = 1;\n      context.globalAlpha = 0.5;\n\n      context.fill();\n\n      context.globalAlpha = 1;\n    }\n  },\n\n  outlineSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n\n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.X + position.width ];\n      positionY = [ position.Y, position.Y + this.featureHeight ];\n\n      context.strokeStyle = features[i].highlightColor;\n\n      context.lineWidth = 2;\n\n      context.beginPath();\n      context.moveTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[0], positionY[1]);\n      context.lineTo(positionX[0], positionY[0]);\n      context.stroke();\n\n      context.lineWidth = 1;\n    }\n  },\n\n  truncateForDrawing: function (positionX) {\n    for (var i in positionX) {\n      positionX[i] = Math.min(Math.max(positionX[i], -1), this.width + 1);\n    }\n  },\n\n  setHighlightColor: function (feature) {\n    feature.highlightColor = feature.alt_allele === '-' || feature.alt_allele.length < feature.ref_allele.length ? '#D31D00' : '#1DD300';\n  }\n});\n","Genoverse.Track.Model.SequenceVariation = Genoverse.Track.Model.extend({\n  seqModel: Genoverse.Track.Model.Sequence.Ensembl,\n\n  getSeqModel: function () {\n    var models = this.prop('models');\n    return models.seq = models.seq || this.track.newMVC(this.seqModel);\n  },\n\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n    var seqData  = this.getSeqModel().checkDataRange(chr, start, end);\n\n    this.base(chr, start, end).done(function () {\n      if (seqData) {\n        deferred.resolve();\n      } else {\n        this.getSeqModel().getData(chr, start, end).done(deferred.resolve);\n      }\n    });\n\n    return deferred;\n  },\n\n  insertFeature: function (feature) {\n    return this.base($.extend(feature, {\n      end      : feature.start + feature.alt_allele.length - 1,\n      length   : feature.alt_allele.length,\n      sequence : feature.alt_allele\n    }));\n  },\n\n  checkDataRange: function (chr, start, end) {\n    return this.base(chr, start, end) && this.getSeqModel().checkDataRange(chr, start, end);\n  },\n\n  findFeatures: function (chr, start, end) {\n    return this.getSeqModel().findFeatures(chr, start, end).concat(this.base(chr, start, end));\n  }\n});\n","// Abstract Gene model\n// see sub-models for more specific examples\nGenoverse.Track.Model.Gene = Genoverse.Track.Model.extend({\n\n});","// Ensembl REST API Gene model\nGenoverse.Track.Model.Gene.Ensembl = Genoverse.Track.Model.Gene.extend({\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=gene;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n\n  // The url above responds in json format, data is an array\n  // We assume that parents always preceed children in data array, gene -> transcript -> exon\n  // See rest.ensembl.org/documentation/info/feature_region for more details\n  parseData: function (data, chr) {\n    for (var i = 0; i < data.length; i++) {\n      var feature = data[i];\n\n      if (feature.feature_type === 'gene' && !this.featuresById[feature.id]) {\n        feature.chr         = feature.chr || chr;\n        feature.label       = parseInt(feature.strand, 10) === 1 ? (feature.external_name || feature.id) + ' >' : '< ' + (feature.external_name || feature.id);\n        feature.transcripts = [];\n\n        this.insertFeature(feature);\n      }\n    }\n  }\n});\n","Genoverse.Track.View.Gene = Genoverse.Track.View.extend({\n  featureHeight : 5,\n  labels        : true,\n  repeatLabels  : true,\n  bump          : true\n});\n","Genoverse.Track.View.Gene.Ensembl = Genoverse.Track.View.Gene.extend({\n  setFeatureColor: function (feature) {\n    var processed_transcript = {\n      'sense_intronic'           : 1,\n      'sense_overlapping'        : 1,\n      'processed_transcript'     : 1,\n      'nonsense_mediated_decay'  : 1,\n      'non_stop_decay'           : 1,\n      'antisense'                : 1,\n      'retained_intron'          : 1,\n      'tec'                      : 1,\n      'non_coding'               : 1,\n      'ambiguous_orf'            : 1,\n      'disrupted_domain'         : 1,\n      '3prime_overlapping_ncrna' : 1\n    };\n\n    feature.color = '#000000';\n\n    if (feature.logic_name.indexOf('ensembl_havana') === 0) {\n      feature.color  = '#CD9B1D';\n      feature.legend = 'Merged Ensembl/Havana';\n    } else if (processed_transcript[feature.biotype]) {\n      feature.color  = '#0000FF';\n      feature.legend = 'Processed transcript';\n    } else if (feature.biotype === 'protein_coding') {\n      feature.color  = '#A00000';\n      feature.legend = 'Protein coding';\n    } else if (feature.biotype.indexOf('pseudogene') > -1) {\n      feature.color  = '#666666';\n      feature.legend = 'Pseudogene';\n    } else if (/rna/i.test(feature.biotype)) {\n      feature.color  = '#8B668B';\n      feature.legend = 'RNA gene';\n    } else if (/^tr_.+_gene$/i.test(feature.biotype)) {\n      feature.color  = '#CD6600';\n      feature.legend = 'TR gene';\n    } else if (/^ig_.+_gene$/i.test(feature.biotype)) {\n      feature.color  = '#8B4500';\n      feature.legend = 'IG gene';\n    }\n\n    feature.labelColor = feature.color;\n  }\n});","// Abstract Transcript model\n// see sub-models for more specific examples\nGenoverse.Track.Model.Transcript = Genoverse.Track.Model.extend({\n\n});","// Ensembl REST API Transcript model\nGenoverse.Track.Model.Transcript.Ensembl = Genoverse.Track.Model.Transcript.extend({\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=transcript;feature=exon;feature=cds;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n\n  setDefaults: function () {\n    this.geneIds   = {};\n    this.seenGenes = 0;\n\n    this.base.apply(this, arguments);\n  },\n\n  // The url above responds in json format, data is an array\n  // See rest.ensembl.org/documentation/info/overlap_region for more details\n  parseData: function (data, chr) {\n    var model        = this;\n    var featuresById = this.featuresById;\n    var ids          = [];\n\n    data.filter(function (d) { return d.feature_type === 'transcript'; }).forEach(function (feature, i) {\n      if (!featuresById[feature.id]) {\n        model.geneIds[feature.Parent] = model.geneIds[feature.Parent] || ++model.seenGenes;\n\n        feature.chr         = feature.chr || chr;\n        feature.label       = parseInt(feature.strand, 10) === 1 ? (feature.external_name || feature.id) + ' >' : '< ' + (feature.external_name || feature.id);\n        feature.sort        = (model.geneIds[feature.Parent] * 1e10) + (feature.logic_name.indexOf('ensembl_havana') === 0 ? 0 : 2e9) + (feature.biotype === 'protein_coding' ? 0 : 1e9) + feature.start + i;\n        feature.cdsStart    = Infinity;\n        feature.cdsEnd      = -Infinity;\n        feature.exons       = {};\n        feature.subFeatures = [];\n\n        model.insertFeature(feature);\n      }\n\n      ids.push(feature.id);\n    });\n\n    data.filter(function (d) { return d.feature_type === 'cds' && featuresById[d.Parent]; }).forEach(function (cds) {\n      featuresById[cds.Parent].cdsStart = Math.min(featuresById[cds.Parent].cdsStart, cds.start);\n      featuresById[cds.Parent].cdsEnd   = Math.max(featuresById[cds.Parent].cdsEnd,   cds.end);\n    });\n\n    data.filter(function (d) { return d.feature_type === 'exon' && featuresById[d.Parent] && !featuresById[d.Parent].exons[d.id]; }).forEach(function (exon) {\n      if (exon.end < featuresById[exon.Parent].cdsStart || exon.start > featuresById[exon.Parent].cdsEnd) {\n        exon.utr = true;\n      } else if (exon.start < featuresById[exon.Parent].cdsStart) {\n        featuresById[exon.Parent].subFeatures.push($.extend({ utr: true }, exon, { end: featuresById[exon.Parent].cdsStart }));\n\n        exon.start = featuresById[exon.Parent].cdsStart;\n      } else if (exon.end > featuresById[exon.Parent].cdsEnd) {\n        featuresById[exon.Parent].subFeatures.push($.extend({ utr: true }, exon, { start: featuresById[exon.Parent].cdsEnd }));\n\n        exon.end = featuresById[exon.Parent].cdsEnd;\n      }\n\n      featuresById[exon.Parent].subFeatures.push(exon);\n      featuresById[exon.Parent].exons[exon.id] = exon;\n    });\n\n    ids.forEach(function (id) {\n      featuresById[id].subFeatures.sort(function (a, b) { return a.start - b.start; });\n    });\n  }\n});\n","Genoverse.Track.View.Transcript = Genoverse.Track.View.extend({\n  featureHeight       : 10,\n  utrHeight           : 7,\n  labels              : true,\n  repeatLabels        : true,\n  bump                : true,\n  subFeatureJoinStyle : 'curve',\n\n  scaleFeatures: function (features, scale) {\n    var subFeatures, j;\n\n    for (var i = 0; i < features.length; i++) {\n      subFeatures = features[i].subFeatures || [];\n\n      if (subFeatures.length) {\n        for (j = 0; j < subFeatures.length; j++) {\n          if (subFeatures[j].utr) {\n            subFeatures[j].height = this.utrHeight;\n          }\n        }\n\n        features[i].height = Math.max.apply(Math, subFeatures.map(function (c) { return c.fake ? 0 : c.height || 0; }).concat(this.featureHeight));\n      }\n    }\n\n    return this.base(features, scale);\n  }\n});","Genoverse.Track.View.Transcript.Ensembl = Genoverse.Track.View.Transcript.extend({\n  setFeatureColor: function (feature) {\n    Genoverse.Track.View.Gene.Ensembl.prototype.setFeatureColor(feature);\n\n    for (var i = 0; i < (feature.subFeatures || []).length; i++) {\n      if (feature.subFeatures[i].utr) {\n        feature.subFeatures[i].color       = false;\n        feature.subFeatures[i].borderColor = feature.color;\n      }\n    }\n  }\n});","Genoverse.Track.Model.File = Genoverse.Track.Model.extend({\n  dataType: 'text',\n\n  init: function () {\n    if (this.isLocal) {\n      this.url = false;\n    }\n\n    if (!(this.largeFile || this.indexFile)) {\n      this.allData = true;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  getData: function (chr) {\n    var model = this;\n\n    if (this.isLocal && this.dataFile) {\n      var reader   = new FileReader();\n      var deferred = $.Deferred();\n\n      reader.onload = function (e) {\n        deferred.done(function () {\n          this.receiveData(e.target.result, chr, 1, this.browser.getChromosomeSize(chr));\n        }).resolveWith(model);\n      };\n\n      reader.readAsText(this.dataFile);\n\n      return deferred;\n    } else {\n      return this.base.apply(this, arguments);\n    }\n  }\n});\n","Genoverse.Track.Model.File.BAM = Genoverse.Track.Model.File.extend({\n  getData: function (chr, start, end) {\n    var model    = this;\n    var deferred = $.Deferred();\n\n    if (!this.bamFile) {\n      if (this.url) {\n        this.bamFile = new dallianceLib.URLFetchable(this.url);\n        this.baiFile = new dallianceLib.URLFetchable(this.url + this.prop('indexExt'));\n      } else if (this.dataFile && this.indexFile) {\n        this.bamFile = new dallianceLib.BlobFetchable(this.dataFile);\n        this.baiFile = new dallianceLib.BlobFetchable(this.indexFile);\n      } else {\n        return deferred.rejectWith(model, [ 'BAM files must be accompanied by a .bai index file' ]);\n      }\n    }\n\n    dallianceLib.makeBam(this.bamFile, this.baiFile, null, function (bam, makeBamError) {\n      if (makeBamError) {\n        console.log(makeBamError);\n      } else {\n        bam.fetch(chr, start, end, function (features, fetchBamError) {\n          if (fetchBamError) {\n            console.log(fetchBamError);\n          } else {\n            model.receiveData(features, chr, start, end);\n            deferred.resolveWith(model);\n          }\n        });\n      }\n    });\n\n    return deferred;\n  },\n\n  insertFeature: function (feature) {\n    feature.id       = feature.chr + ':' + feature.readName + ':' + feature.pos;\n    feature.start    = feature.pos + 1;\n    feature.end      = feature.start + feature.seq.length;\n    feature.sequence = feature.seq;\n\n    return this.base(feature);\n  }\n});\n","Genoverse.Track.Model.File.BED = Genoverse.Track.Model.File.extend({\n  parseData: function (data, chr) {\n    var lines       = typeof data === 'string' ? data.split('\\n') : data;\n    var thinHeight  = this.prop('thinHeight');\n    var thickHeight = this.prop('thickHeight');\n    var fields, len, feature, subfeatures, subfeature, blockSizes, blockStarts, j, thinFeature, thinFeature1, thinFeature2, thickFeature;\n\n    function filterNumber(n) {\n      return !isNaN(n);\n    }\n\n    for (var i = 0; i < lines.length; i++) {\n      fields = lines[i].split('\\t').filter(function(f) { return f; });\n\n      if (fields.length < 3 || fields[0] == 'track' || fields[0] == 'browser') {\n        continue;\n      }\n\n      len = fields.length;\n\n      if (fields[0] == chr || fields[0].toLowerCase() == 'chr' + chr || fields[0].match('[^1-9]' + chr + '$')) {\n        feature = {\n          chr             : chr,\n          start           : parseInt(fields[1], 10),\n          end             : parseInt(fields[2], 10),\n          name            : fields[3],\n          color           : '#000000',\n          originalFeature : fields\n        };\n\n        if (len > 3) { feature.score  = parseFloat(fields[4], 10); }\n        if (len > 5) { feature.strand = fields[5];                 }\n\n        if (len > 7) {\n          feature.thickStart = fields[6];\n          feature.thickEnd   = fields[7];\n          feature.drawThick  = (feature.thickStart === feature.thickEnd) ? false : true;\n        }\n\n        if (fields[8]) {\n          feature.color = 'rgb(' + fields[8] + ')';\n        } else {\n          feature.color = this.scoreColor(isNaN(feature.score) ? 1000 : feature.score);\n        }\n\n        if (len == 12) { // subfeatures present\n          feature.blockCount = parseInt(fields[9],10);\n\n          subfeatures = [];\n          blockSizes  = fields[10].split(',').filter(filterNumber);\n          blockStarts = fields[11].split(',').filter(filterNumber);\n\n          for (j = 0; j < blockSizes.length; j++) {\n            subfeature = {\n              start  : feature.start + parseInt(blockStarts[j], 10),\n              height : thinHeight // if subfeature lies entirely left / right to [ thickStart, thickEnd ]\n            };\n\n            subfeature.end = subfeature.start + parseInt(blockSizes[j], 10);\n\n            if (feature.drawThick && subfeature.start <= feature.thickEnd && subfeature.end >= feature.thickStart) {\n              // some kind of an overlap for sure\n              if (subfeature.start > feature.thickStart && subfeature.end < feature.thickEnd) {\n                // subfeature within thickBlock, draw thick\n                subfeature.height = thickHeight;\n                subfeatures.push(subfeature);\n              } else if (subfeature.start < feature.thickStart && subfeature.end <= feature.thickEnd) {\n                // left overlap, split subfeature into 2 - thin | thick\n                thinFeature  = $.extend({}, subfeature, { end: feature.thickStart });\n                thickFeature = $.extend({}, subfeature, { start: feature.thickStart, height: thickHeight });\n\n                subfeatures = subfeatures.concat([thinFeature, thickFeature]);\n              } else if (subfeature.start >= feature.thickStart && subfeature.end > feature.thickEnd) {\n                // right overlap, split subfeature into 2 - thick | thin\n                thinFeature  = $.extend({}, subfeature, { start: feature.thickEnd });\n                thickFeature = $.extend({}, subfeature, { end: feature.thickEnd, height: thickHeight });\n\n                subfeatures = subfeatures.concat([ thickFeature, thinFeature ]);\n              }else{\n                // thickBlock lies within subfeature, split into 3 - thin | thick | thin\n                // the least possible case but lets be prepared for the outliers\n                thinFeature1 = $.extend({}, subfeature, { end: feature.thickStart });\n                thinFeature2 = $.extend({}, subfeature, { start: feature.thickEnd });\n                thickFeature = { start: feature.thickStart, end: feature.thickEnd, height: thickHeight };\n\n                subfeatures = subfeatures.concat([ thinFeature1, thickFeature, thinFeature2 ]);\n              }\n            } else {\n              // no thick block\n              subfeatures.push(subfeature);\n            }\n          }\n\n          if (subfeatures.length) {\n            feature.subFeatures = subfeatures;\n          }\n        }\n\n        this.insertFeature(feature);\n      }\n    }\n  },\n\n  // As per https://genome.ucsc.edu/FAQ/FAQformat.html#format1 specification\n  scoreColor: function (score) {\n    if (score <= 166) { return 'rgb(219,219,219)'; }\n    if (score <= 277) { return 'rgb(186,186,186)'; }\n    if (score <= 388) { return 'rgb(154,154,154)'; }\n    if (score <= 499) { return 'rgb(122,122,122)'; }\n    if (score <= 611) { return 'rgb(94,94,94)';    }\n    if (score <= 722) { return 'rgb(67,67,67)';    }\n    if (score <= 833) { return 'rgb(42,42,42)';    }\n    if (score <= 944) { return 'rgb(21,21,21)';    }\n    return '#000000';\n  }\n});\n","Genoverse.Track.Model.File.GFF = Genoverse.Track.Model.File.extend({\n  parseData: function (text, chr) {\n    var lines = text.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n\n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n\n      var seqId = fields[0].toLowerCase();\n\n      if (\n        seqId == chr                      ||\n        seqId == 'chr' + chr              ||\n        seqId.match('[^1-9]' + chr + '$') ||\n        seqId.match('^' + chr + '\\\\b')\n      ) {\n        this.insertFeature({\n          id     : fields.slice(0, 5).join('|'),\n          chr    : chr,\n          start  : parseInt(fields[3], 10),\n          end    : parseInt(fields[4], 10),\n          source : fields[1],\n          type   : fields[2],\n          score  : fields[5],\n          strand : fields[6] === '-' ? -1 : 1,\n          label  : fields[1] + ' ' + fields[2] + ' ' + fields[3] + '-' + fields[4]\n        });\n      }\n    }\n  }\n});\n\nGenoverse.Track.Model.File.GTF = Genoverse.Track.Model.File.GFF;\n","Genoverse.Track.Model.File.VCF = Genoverse.Track.Model.File.extend({\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n    var model    = this;\n\n    if (!this.prop('gz')) {\n      return this.base.apply(this, arguments);\n    }\n\n    if (!this.vcfFile) {\n      if (this.url) {\n        this.vcfFile = new dallianceLib.URLFetchable(this.url);\n        this.tbiFile = new dallianceLib.URLFetchable(this.url + this.prop('indexExt'));\n      } else if (this.dataFile && this.indexFile) {\n        this.vcfFile = new dallianceLib.BlobFetchable(this.dataFile);\n        this.tbiFile = new dallianceLib.BlobFetchable(this.indexFile);\n      } else {\n        return deferred.rejectWith(model, [ 'GZipped VCF files must be accompanied by a .tbi index file' ]);\n      }\n    }\n\n    this.makeVCF(this.vcfFile, this.tbiFile).then(function (vcf) {\n      model.cachedVCF = vcf;\n\n      vcf.getRecords(chr, start, end, function (records) {\n        model.receiveData(records, chr, start, end);\n        deferred.resolveWith(model);\n      });\n    });\n\n    return deferred;\n  },\n\n  makeVCF: function (vcfFile, tbiFile) {\n    var deferred = $.Deferred();\n\n    if (this.cachedVCF) {\n      deferred.resolve(this.cachedVCF);\n    } else {\n      var vcf = new VCFReader(vcfFile, tbiFile);\n\n      vcf.readTabix(function (tabix) {\n        vcf.tabix = tabix;\n        deferred.resolve(vcf);\n      });\n    }\n\n    return deferred;\n  },\n\n  parseData: function (text, chr) {\n    var lines   = text.split('\\n');\n    var maxQual = this.allData ? this.prop('maxQual') || 0 : false;\n\n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n\n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n\n      if (fields[0] == chr || fields[0] == 'chr' + chr) {\n        var id      = fields.slice(0, 3).join('|');\n        var start   = parseInt(fields[1], 10);\n        var alleles = fields[4].split(',');\n\n        alleles.unshift(fields[3]);\n\n        for (var j = 0; j < alleles.length; j++) {\n          var end = start + alleles[j].length - 1;\n\n          this.insertFeature({\n            id              : id + '|' + alleles[j],\n            sort            : j,\n            chr             : chr,\n            start           : start,\n            end             : end,\n            width           : end - start,\n            allele          : j === 0 ? 'REF' : 'ALT',\n            sequence        : alleles[j],\n            label           : alleles[j],\n            labelColor      : '#FFFFFF',\n            originalFeature : fields\n          });\n        }\n\n        if (maxQual !== false) {\n          maxQual = Math.max(maxQual, fields[5]);\n        }\n      }\n    }\n\n    if (maxQual) {\n      this.prop('maxQual', maxQual);\n    }\n  }\n});\n","Genoverse.Track.Model.File.WIG = Genoverse.Track.Model.Graph.Bar.extend({\n  dataType: 'text',\n\n  getData: function () {\n    if (!this.url) {\n      this.isLocal  = true;\n      this.dataFile = this.track.dataFile;\n\n      return Genoverse.Track.Model.File.prototype.getData.apply(this, arguments);\n    }\n\n    return this.base.apply(this, arguments);\n  },\n\n  parseData: function (text, chr, s, e) {\n    var lines    = text.split('\\n');\n    var features = [];\n    var fields, chrom, start, step, span, line, feature, i;\n\n    while (lines.length && (line = lines.shift())) {\n      if (line.indexOf('#') != -1 || line.indexOf('browser') != -1 || line.indexOf('track') != -1) {\n        continue;\n      } else {\n        break;\n      }\n    }\n\n    if (line) {\n      fields = line.split(/\\s+/);\n      chrom  = parseInt(fields[1].split('=')[1].replace('chr',''));\n\n      if (fields[0] == 'fixedStep') {\n        start = parseInt(fields[2].split('=')[1]);\n        step  = parseInt(fields[3].split('=')[1]);\n        span  = fields[4] ? parseInt(fields[4].split('=')[1]) : 1;\n\n        for (i = 0; i < lines.length; i++){\n          features.push({\n            chr    : chrom,\n            start  : start,\n            end    : start + span,\n            height : parseFloat(lines[i])\n          });\n\n          start += step;\n        }\n      } else if (fields[0] == 'variableStep') {\n        span = fields[2] ? parseInt(fields[2].split('=')[1]) : 1;\n\n        for (i = 0; i < lines.length; i++){\n          fields  = lines[i].split(/\\s+/);\n          feature = {\n            chr    : chrom,\n            start  : parseInt(fields[0], 10),\n            height : parseFloat(fields[1])\n          };\n\n          feature.end = feature.start + span;\n\n          features.push(feature);\n        }\n      }\n    }\n\n    return this.base.call(this, features, chr, s, e);\n  }\n});\n","Genoverse.Track.Chromosome = Genoverse.Track.extend({\n  id            : 'chromosome',\n  margin        : 1,\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  labels        : 'overlay',\n  url           : false,\n  allData       : true,\n  colors        : {\n    acen    : '#708090',\n    gneg    : '#FFFFFF',\n    gpos    : '#000000',\n    gpos100 : '#000000',\n    gpos25  : '#D9D9D9',\n    gpos33  : '#BFBFBF',\n    gpos50  : '#999999',\n    gpos66  : '#7F7F7F',\n    gpos75  : '#666666',\n    gvar    : '#E0E0E0',\n    stalk   : '#708090'\n  },\n  labelColors: {\n    gneg   : '#000000',\n    gvar   : '#000000',\n    gpos25 : '#000000',\n    gpos33 : '#000000'\n  },\n\n  getData: function (chr, start, end) {\n    this.receiveData($.extend(true, [], this.browser.genome[chr].bands), chr, start, end);\n    return $.Deferred().resolveWith(this);\n  },\n\n  insertFeature: function (feature) {\n    feature.label      = feature.type === 'acen' || feature.type === 'stalk' ? false : feature.id;\n    feature.menuTitle  = feature.id ? feature.chr + feature.id : feature.chr + ':' + feature.start + '-' + feature.end;\n    feature.color      = this.prop('colors')[feature.type]      || '#FFFFFF';\n    feature.labelColor = this.prop('labelColors')[feature.type] || '#FFFFFF';\n\n    if (feature.id) {\n      feature.id = feature.chr + feature.id;\n    }\n\n    this.base(feature);\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    featureContext.fillStyle   = feature.color;\n    featureContext.strokeStyle = '#000000';\n\n    if (feature.type === 'acen') {\n      featureContext.beginPath();\n\n      if (this.drawnAcen) {\n        featureContext.moveTo(feature.x + feature.width, 0.5);\n        featureContext.lineTo(feature.x, (feature.height + 0.5) / 2);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, (feature.height + 0.5) / 2);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n        this.drawnAcen = true;\n      }\n\n      featureContext.fill();\n      featureContext.stroke();\n    } else if (feature.type === 'stalk') {\n      for (var i = 0; i < 2; i++) {\n        featureContext.beginPath();\n\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n\n        featureContext[i ? 'moveTo' : 'lineTo'](feature.x + feature.width, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n\n        featureContext[i ? 'stroke' : 'fill']();\n      }\n    } else {\n      this.base(feature, featureContext, labelContext, scale);\n\n      featureContext.beginPath();\n\n      var chrSize = this.browser.getChromosomeSize(feature.chr);\n\n      if (feature.start === 1 || feature.end === chrSize) {\n        if (feature.start === 1) {\n          var end = feature.x + feature.width - (feature.end === chrSize ? 5 : 0);\n\n          featureContext.clearRect(0, 0, 5, feature.height + 0.5);\n\n          featureContext.fillStyle = feature.color;\n          featureContext.moveTo(5,   0.5);\n          featureContext.lineTo(end, 0.5);\n          featureContext.moveTo(5,   feature.height + 0.5);\n          featureContext.lineTo(end, feature.height + 0.5);\n          featureContext.moveTo(5, 0.5);\n          featureContext.bezierCurveTo(-1, 0.5, -1, feature.height + 0.5, 5, feature.height + 0.5);\n          featureContext.fill();\n        }\n\n        if (feature.end === chrSize) {\n          featureContext.clearRect(feature.x + feature.width - 5, 0, 5, feature.height + 0.5);\n\n          if (feature.start !== 1) {\n            featureContext.fillStyle = feature.color;\n            featureContext.moveTo(feature.x, 0.5);\n            featureContext.lineTo(feature.x + feature.width - 5, 0.5);\n            featureContext.moveTo(feature.x, feature.height + 0.5);\n            featureContext.lineTo(feature.x + feature.width - 5, feature.height + 0.5);\n          }\n\n          featureContext.moveTo(feature.x + feature.width - 5, 0.5);\n          featureContext.bezierCurveTo(this.width + 1, 0.5, this.width + 1, feature.height + 0.5, feature.x + feature.width - 5, feature.height + 0.5);\n          featureContext.fill();\n        }\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n        featureContext.moveTo(feature.x, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      }\n\n      featureContext.stroke();\n    }\n  },\n\n  drawLabel: function (feature) {\n    if ((feature.start === 1 || feature.end === this.browser.getChromosomeSize(feature.chr)) && feature.labelWidth >= Math.floor(feature.width - 5)) {\n      return;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title    : feature.menuTitle,\n      Position : feature.chr + ':' + feature.start + '-' + feature.end\n    };\n  }\n});\n","Genoverse.Track.dbSNP = Genoverse.Track.extend({\n  id               : 'dbSNP',\n  name             : 'dbSNP',\n  info             : 'All sequence variants from the database of Single Nucleotide Polymorphisms (dbSNP)',\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=variation;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n  threshold        : 1e5,\n  labels           : false,\n  legend           : true,\n  autoHeight       : true,\n  colorMap         : {\n    transcript_ablation                : '#ff0000',\n    splice_acceptor_variant            : '#FF581A',\n    splice_donor_variant               : '#FF581A',\n    stop_gained                        : '#ff0000',\n    frameshift_variant                 : '#9400D3',\n    stop_lost                          : '#ff0000',\n    start_lost                         : '#ffd700',\n    transcript_amplification           : '#ff69b4',\n    inframe_insertion                  : '#ff69b4',\n    inframe_deletion                   : '#ff69b4',\n    missense_variant                   : '#ffd700',\n    protein_altering_variant           : '#FF0080',\n    splice_region_variant              : '#ff7f50',\n    incomplete_terminal_codon_variant  : '#ff00ff',\n    stop_retained_variant              : '#76ee00',\n    synonymous_variant                 : '#76ee00',\n    coding_sequence_variant            : '#458b00',\n    mature_miRNA_variant               : '#458b00',\n    '5_prime_UTR_variant'              : '#7ac5cd',\n    '3_prime_UTR_variant'              : '#7ac5cd',\n    non_coding_transcript_exon_variant : '#32cd32',\n    intron_variant                     : '#02599c',\n    NMD_transcript_variant             : '#ff4500',\n    non_coding_transcript_variant      : '#32cd32',\n    upstream_gene_variant              : '#a2b5cd',\n    downstream_gene_variant            : '#a2b5cd',\n    TFBS_ablation                      : '#a52a2a',\n    TFBS_amplification                 : '#a52a2a',\n    TF_binding_site_variant            : '#a52a2a',\n    regulatory_region_ablation         : '#a52a2a',\n    regulatory_region_amplification    : '#a52a2a',\n    feature_elongation                 : '#7f7f7f',\n    regulatory_region_variant          : '#a52a2a',\n    feature_truncation                 : '#7f7f7f',\n    intergenic_variant                 : '#636363'\n  },\n\n  insertFeature: function (feature) {\n    feature.color  = this.prop('colorMap')[feature.consequence_type];\n    feature.legend = feature.consequence_type;\n\n    if (feature.start > feature.end) {\n      feature.decorations = true;\n    }\n\n    this.base(feature);\n  },\n\n  decorateFeature: function (feature, context, scale) {\n    context.fillStyle = feature.color;\n    context.beginPath();\n    context.moveTo(feature.position[scale].X - 3, feature.position[scale].Y + this.featureHeight);\n    context.lineTo(feature.position[scale].X,     feature.position[scale].Y + this.featureHeight - 4);\n    context.lineTo(feature.position[scale].X + 3, feature.position[scale].Y + this.featureHeight);\n    context.fill();\n\n    if (scale > 1) {\n      context.fillRect(feature.position[scale].X - 0.5, feature.position[scale].Y, 1.5, feature.position[scale].height);\n    }\n  },\n\n  populateMenu: function (feature) {\n    var deferred = $.Deferred();\n    var menu     = [{\n      title       : '<a href=\"http://www.ensembl.org/Homo_sapiens/Variation/Summary?v=' + feature.id + '\" target=\"_blank\">' + feature.id + '</a>',\n      Location    : feature.chr + ':' + feature.start + '-' + feature.end,\n      Consequence : feature.consequence_type,\n      Alleles     : feature.alleles.join(', ')\n    }];\n\n    $.ajax({\n      url      : '//rest.ensembl.org/variation/human/' + feature.id + '?population_genotypes=1;content-type=application/json',\n      dataType : 'json',\n      success  : function (data) {\n        var populationGenotypes = $.grep(data.population_genotypes, function (pop) { return /1000GENOMES.+ALL/.test(pop.population); }); // Only considering 1000 Genomes: ALL population\n        var frequencies         = {};\n        var pop, i, j;\n\n        if (populationGenotypes.length) {\n          for (i = 0; i < populationGenotypes.length; i++) {\n            pop           = populationGenotypes[i];\n            pop.frequency = parseFloat(pop.frequency, 10);\n            pop.count     = parseInt(pop.count, 10);\n\n            frequencies[pop.population] = frequencies[pop.population] || [];\n            frequencies[pop.population].push(pop);\n          }\n\n          for (i in frequencies) {\n            frequencies[i].sort(function (a, b) { return a.count < b.count; });\n\n            pop = {\n              title    : i + ' population genotypes',\n              Genotype : [ 'Frequency', 'Count' ],\n              start    : false,\n              end      : false\n            };\n\n            for (j in frequencies[i]) {\n              pop[frequencies[i][j].genotype] = [ (frequencies[i][j].frequency * 100).toFixed(2) + '%', frequencies[i][j].count ];\n            }\n\n            menu.push(pop);\n          }\n\n          pop = {\n            start : false,\n            end   : false\n          };\n\n          pop['<a href=\"http://www.ensembl.org/Homo_sapiens/Variation/Population?v=' + feature.id + '\" target=\"_blank\">See all population genotypes</a>'] = '';\n\n          menu.push(pop);\n        }\n\n        deferred.resolve(menu);\n      }\n    });\n\n    return deferred;\n  },\n\n  // Different settings for different zoom level\n  5000: { // more than 5k\n    bump: false\n  },\n  1: { // > 1 base-pair, but less then 5k\n    bump: true\n  }\n\n});\n","Genoverse.Track.File = Genoverse.Track.extend({\n  setInterface: function () {\n    this.base();\n\n    this._interface.isLocal   = 'model';\n    this._interface.dataFile  = 'model';\n    this._interface.indexFile = 'model';\n    this._interface.largeFile = 'model';\n  }\n});\n","Genoverse.Track.File.BAM = Genoverse.Track.File.extend({\n  name      : 'BAM',\n  indexExt  : '.bai',\n  threshold : 100000,\n  largeFile : true,\n  model     : Genoverse.Track.Model.File.BAM,\n  view      : Genoverse.Track.View.Sequence.extend({\n    bump       : true,\n    autoHeight : true\n  }),\n\n  click: function () {\n    var menu = this.base.apply(this, arguments);\n\n    if (menu) {\n      menu.addClass('gv-wrap-values');\n    }\n\n    return menu;\n  },\n\n  populateMenu: function (feature) {\n    var f = $.extend({ title: feature.readName }, feature);\n\n    delete f.sequence;\n    delete f.id;\n\n    return this.base(f);\n  }\n});\n","Genoverse.Track.File.BED = Genoverse.Track.File.extend({\n  name                : 'BED',\n  model               : Genoverse.Track.Model.File.BED,\n  bump                : true,\n  featureHeight       : 10,\n  thickHeight         : 10,\n  thinHeight          : 7,\n  subFeatureJoinStyle : 'curve',\n\n  populateMenu: function (feature) {\n    var fields = [ false, false, false, 'name', 'score', 'strand', 'thickStart', 'thickEnd', 'itemRgb', 'blockCount', 'blockSizes', 'blockStarts' ]; // First three fields are chr, start, end which are covered by Location\n\n    return feature.originalFeature.reduce(function (menu, val, i) {\n      if (fields[i]) {\n        menu[fields[i]] = val;\n      }\n\n      return menu;\n    }, {\n      title    : '<a target=\"_blank\" href=\"https://genome.ucsc.edu/FAQ/FAQformat.html#format1\">BED feature details</a>',\n      Location : feature.chr + ':' + feature.start + '-' + feature.end\n    });\n  }\n});\n","Genoverse.Track.File.BIGBED = Genoverse.Track.File.BED.extend({\n  name  : 'bigbed',\n  model : Genoverse.Track.Model.File.BED.extend({\n    getData: function (chr, start, end) {\n      var model    = this;\n      var deferred = $.Deferred();\n\n      if (!this.bigbedFile) {\n        this.bigbedFile = this.bigbedFile || (this.url ? new dallianceLib.URLFetchable(this.url) : new dallianceLib.BlobFetchable(this.track.dataFile));\n      }\n\n      var d = $.Deferred().done(function () {\n        model.bwReader.getValues(chr, start, end, function (features, error) {\n          if (!error) {\n            features.sort(function (a, b) { return a.start - b.start; });\n\n            if (features.length) {\n              model.receiveData(features, chr, features[0].start, features[features.length - 1].end);\n            } else {\n              model.receiveData(features, chr, start, end);\n            }\n          }\n\n          deferred.resolveWith(model);\n        });\n      });\n\n      if (this.bwReader) {\n        d.resolve();\n      } else {\n        new BWReader(this.bigbedFile, function (bwReader) {\n          if (bwReader) {\n            model.bwReader = bwReader;\n            d.resolve();\n          } else {\n            model.receiveData([], chr, start, end);\n            return deferred.resolveWith(model);\n          }\n        });\n      }\n\n      return deferred;\n    }\n  })\n});\n\nGenoverse.Track.File.BB = Genoverse.Track.File.BIGBED;\n","Genoverse.Track.File.BIGWIG = Genoverse.Track.Graph.Bar.extend({\n  name   : 'bigwig',\n  height : 100,\n\n  setDefaults: function () {\n    this.bwReader = null; // Not part of model since it needs to be shared between bar and line graphs\n    this.base.apply(this, arguments);\n  },\n\n  getData: function (chr, start, end) {\n    var model    = this;\n    var deferred = $.Deferred();\n\n    if (!this.bigwigFile) {\n      this.bigwigFile = this.bigwigFile || (this.url ? new dallianceLib.URLFetchable(this.url) : new dallianceLib.BlobFetchable(this.track.dataFile));\n    }\n\n    var d = $.Deferred().done(function () {\n      model.prop('bwReader').getValues(chr, start, end, function (features, error) {\n        if (!error) {\n          features.sort(function (a, b) { return a.start - b.start; });\n\n          if (features.length) {\n            model.receiveData(features, chr, features[0].start, features[features.length - 1].end);\n          } else {\n            model.receiveData(features, chr, start, end);\n          }\n        }\n\n        deferred.resolveWith(model);\n      });\n    });\n\n    if (this.prop('bwReader')) {\n      d.resolve();\n    } else {\n      new BWReader(this.bigwigFile, function (bwReader) {\n        if (bwReader) {\n          model.prop('bwReader', bwReader);\n          d.resolve();\n        } else {\n          model.receiveData([], chr, start, end);\n          return deferred.resolveWith(model);\n        }\n      });\n    }\n\n    return deferred;\n  }\n});\n\nGenoverse.Track.File.BW = Genoverse.Track.File.BIGWIG;\n","Genoverse.Track.File.GFF = Genoverse.Track.File.extend({\n  name          : 'GFF',\n  model         : Genoverse.Track.Model.File.GFF,\n  bump          : true,\n  height        : 100,\n  featureHeight : 5\n});\n\nGenoverse.Track.File.GTF = Genoverse.Track.File.GFF;","Genoverse.Track.File.VCF = Genoverse.Track.File.extend({\n  name       : 'VCF',\n  indexExt   : '.tbi',\n  model      : Genoverse.Track.Model.File.VCF,\n  autoHeight : false,\n  maxQual    : undefined, // Set this to the maximum value of the QUAL field in the file in order to color features by QUAL. Only required for large (tabix indexed) files - small ones can calculate this value automatically\n\n  afterSetMVC: function () {\n    if (this.prop('gz')) {\n      this.prop('threshold', 1e5);\n    }\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title  : '<a target=\"_blank\" href=\"http://www.1000genomes.org/node/101\">VCF feature details</a>',\n      CHROM  : feature.originalFeature[0],\n      POS    : feature.originalFeature[1],\n      ID     : feature.originalFeature[2],\n      REF    : feature.originalFeature[3],\n      ALT    : feature.originalFeature[4],\n      QUAL   : feature.originalFeature[5],\n      FILTER : feature.originalFeature[6],\n      INFO   : feature.originalFeature[7].split(';').join('<br />')\n    };\n  },\n\n  1: {\n    view: Genoverse.Track.View.Sequence.extend({\n      bump          : true,\n      labels        : false,\n      featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n\n      draw: function (features, featureContext, labelContext, scale) {\n        this.base.apply(this, arguments);\n        this.highlightRef(features, featureContext, scale);\n      },\n\n      highlightRef: function (features, context, scale) {\n        context.strokeStyle = 'black';\n\n        for (var i = 0; i < features.length; i++) {\n          if (features[i].allele === 'REF') {\n            context.strokeRect(features[i].position[scale].X, features[i].position[scale].Y, features[i].position[scale].width, features[i].position[scale].height);\n          }\n        }\n      }\n    })\n  },\n\n  1000: {\n    view: Genoverse.Track.View.extend({\n      bump   : false,\n      labels : false,\n\n      drawFeature: function (feature) {\n        var maxQual = this.prop('maxQual');\n\n        if (maxQual && !feature.color) {\n          var heat  = Math.min(255, Math.floor(255 * (feature.originalFeature[5] || 0) / maxQual)) - 127;\n          var red   = heat > 0 ? 255 : 127 + heat;\n          var green = heat < 0 ? 255 : 127 - heat;\n\n          feature.color = 'rgb(' + red + ',' + green + ',0)';\n        }\n\n        this.base.apply(this, arguments);\n      }\n    })\n  }\n});\n","Genoverse.Track.File.WIG = Genoverse.Track.Graph.Bar.extend({\n  model  : Genoverse.Track.Model.File.WIG,\n  name   : 'wig',\n  height : 100\n});\n","Genoverse.Track.Gene = Genoverse.Track.extend({\n  id     : 'genes',\n  name   : 'Genes',\n  height : 200,\n  legend : true,\n\n  populateMenu: function (feature) {\n    var url  = 'http://www.ensembl.org/Homo_sapiens/' + (feature.feature_type === 'transcript' ? 'Transcript' : 'Gene') + '/Summary?' + (feature.feature_type === 'transcript' ? 't' : 'g') + '=' + feature.id;\n    var menu = {\n      title    : '<a target=\"_blank\" href=\"' + url + '\">' + (feature.external_name ? feature.external_name + ' (' + feature.id + ')' : feature.id) + '</a>',\n      Location : feature.chr + ':' + feature.start + '-' + feature.end,\n      Source   : feature.source,\n      Biotype  : feature.biotype\n    };\n\n    if (feature.feature_type === 'transcript') {\n      menu.Gene = '<a target=\"_blank\" href=\"http://www.ensembl.org/Homo_sapiens/Gene/Summary?g=' + feature.Parent + '\">' + feature.Parent + '</a>';\n    }\n\n    return menu;\n  },\n\n  // Different settings for different zoom level\n  2000000: { // This one applies when > 2M base-pairs per screen\n    labels : false\n  },\n  100000: { // more than 100K but less then 2M\n    labels : true,\n    model  : Genoverse.Track.Model.Gene.Ensembl,\n    view   : Genoverse.Track.View.Gene.Ensembl\n  },\n  1: { // > 1 base-pair, but less then 100K\n    labels : true,\n    model  : Genoverse.Track.Model.Transcript.Ensembl,\n    view   : Genoverse.Track.View.Transcript.Ensembl\n  }\n});\n","Genoverse.Track.HighlightRegion = Genoverse.Track.extend({\n  id               : 'highlights',\n  unsortable       : true,\n  fixedOrder       : true,\n  repeatLabels     : true,\n  resizable        : false,\n  border           : false,\n  alwaysReposition : true,\n  height           : 15,\n  featureHeight    : 2,\n  order            : -1,\n  orderReverse     : 9e99,\n  controls         : 'off',\n  colors           : [ '#777777', '#F08080', '#3CB371', '#6495ED', '#FFA500', '#9370DB' ],\n  labels           : 'separate',\n  depth            : 1,\n  featureMargin    : { top: 13, right: 0, bottom: 0, left: 0 },\n  margin           : 0,\n\n  constructor: function () {\n    this.colorIndex = 0;\n    return this.base.apply(this, arguments);\n  },\n\n  addHighlights: function (highlights) {\n    for (var i = 0; i < highlights.length; i++) {\n      this.model.insertFeature($.extend({ label: (highlights[i].start + '-' + highlights[i].end) }, highlights[i]));\n    }\n\n    this.reset();\n  },\n\n  removeHighlights: function (highlights) {\n    var featuresByChr = this.prop('featuresByChr');\n    var featuresById  = this.prop('featuresById');\n    var features, bounds, h;\n\n    highlights = highlights || $.map(featuresById, function (f) { return f; });\n\n    for (var i = 0; i < highlights.length; i++) {\n      if (highlights[i].removable === false) {\n        continue;\n      }\n\n      features = featuresByChr[highlights[i].chr];\n      bounds   = { x: highlights[i].start, y: 0, w: highlights[i].end - highlights[i].start + 1, h: 1 };\n\n      // RTree.remove only works if the second argument (the object to be removed) === the object found in the tree.\n      // Here, while highlight is effectively the same object as the one in the tree, it has been cloned, so the === check fails.\n      // To fix this, search for the feature to remove in the location of highlight.\n      h = $.grep(features.search(bounds), function (item) { return item.id === highlights[i].id; });\n\n      if (h.length) {\n        features.remove(bounds, h[0]);\n      }\n\n      delete featuresById[highlights[i].id];\n    }\n\n    if (this.prop('strand') === 1) {\n      this.prop('reverseTrack').removeHighlights(highlights);\n    }\n\n    this.reset();\n  },\n\n  controller: Genoverse.Track.Controller.Stranded.extend({\n    setDefaults: function () {\n      if (this.prop('strand') === -1) {\n        this.prop('labels', false);\n        this.prop('border', false);\n        this.prop('height', 2);\n        this.prop('featureMargin').top = 0;\n      }\n\n      this.base();\n    },\n\n    setName: function (name) {\n      if (this.prop('strand') === -1) {\n        this.base('');\n        this.minLabelHeight = 0;\n        this.label.height(0);\n      } else {\n        this.base(name);\n      }\n    },\n\n    makeImage: function (params) {\n      if (this.prop('strand') === 1) {\n        params.background = 'gv-full-height';\n      }\n\n      var rtn = this.base(params);\n      params.container.addClass(params.background);\n      return rtn;\n    },\n\n    render: function (features, img) {\n      this.base(features, img);\n      img.siblings('.gv-labels').css('top', this.prop('featureHeight') - this.prop('featureMargin').top);\n    },\n\n    renderBackground: function (f, img) {\n      this.base(f, img);\n      img.height(this.browser.wrapper.outerHeight(true));\n    },\n\n    populateMenu: function (features) {\n      var menu = [];\n      var location, m;\n\n      if (features.length > 1) {\n        menu.push({ title: 'Highlights' });\n      }\n\n      for (var i = 0; i < features.length; i++) {\n        location = features[i].start + '-' + features[i].end;\n        m        = {\n          title: features[i].label ? features[i].label[0] : location,\n          start: false\n        };\n\n        m[m.title === location ? 'title' : 'Location'] = features[i].chr + ':' + location;\n        m['<a class=\"gv-focus-highlight\" href=\"#\" data-chr=\"' + features[i].chr + '\" data-start=\"' + features[i].start + '\" data-end=\"' + features[i].end + '\">Focus here</a>'] = '';\n\n        if (features[i].removable !== false) {\n          m['<a class=\"gv-remove-highlight\"  href=\"#\" data-id=\"' + features[i].id + '\">Remove this highlight</a>'] = '';\n          m['<a class=\"gv-remove-highlights\" href=\"#\">Remove all highlights</a>'] = '';\n        }\n\n        menu.push(m);\n      }\n\n      return menu;\n    },\n\n    click: function () {\n      if (this.prop('strand') !== 1) {\n        return;\n      }\n\n      var menuEl = this.base.apply(this, arguments);\n\n      if (menuEl && !menuEl.data('highlightEvents')) {\n        var track = this.track;\n\n        menuEl.find('.gv-remove-highlight').on('click', function () {\n          var id = $(this).data('id');\n          track.removeHighlights($.grep(menuEl.data('feature'), function (f) { return f.id === id; }));\n          return false;\n        });\n\n        menuEl.find('.gv-remove-highlights').on('click', function () {\n          track.removeHighlights();\n          return false;\n        });\n\n        menuEl.find('.gv-focus-highlight').on('click', function () {\n          var data    = $(this).data();\n          var length  = data.end - data.start + 1;\n          var context = Math.max(Math.round(length / 4), 25);\n\n          track.browser.moveTo(data.chr, data.start - context, data.end + context, true);\n\n          return false;\n        });\n\n        menuEl.data('highlightEvents', true);\n      }\n    },\n\n    getClickedFeatures: function (x, y, target) {\n      var seen     = {};\n      var scale    = this.scale;\n      var features = $.grep(\n        // feature positions\n        this.featurePositions.search({ x: x, y: y, w: 1, h: 1 }).concat(\n          // plus label positions where the labels are visible\n          $.grep(this.labelPositions.search({ x: x, y: y, w: 1, h: 1 }), function (f) {\n            return f.position[scale].label.visible !== false;\n          })\n        ), function (f) {\n        // with duplicates removed\n        var rtn = !seen[f.id];\n        seen[f.id] = true;\n        return rtn;\n      });\n\n      return features.length ? [ this.model.sortFeatures(features) ] : false;\n    }\n  }),\n\n  model: Genoverse.Track.Model.Stranded.extend({\n    url: false,\n\n    insertFeature: function (feature) {\n      feature.id   = feature.chr + ':' + feature.start + '-' + feature.end;\n      feature.sort = feature.start;\n\n      if (!feature.color) {\n        var colors = this.prop('colors');\n        var i      = this.prop('colorIndex');\n\n        feature.color = colors[i++];\n\n        this.prop('colorIndex', colors[i] ? i : 0);\n      }\n\n      if (!this.featuresById[feature.id]) {\n        this.base(feature);\n      }\n    },\n\n    findFeatures: function () {\n      return Genoverse.Track.Model.prototype.findFeatures.apply(this, arguments);\n    }\n  }),\n\n  view: Genoverse.Track.View.extend({\n    positionFeatures: function (features, params) {\n      var rtn = this.base.apply(this, arguments);\n\n      // featureMargin.top gets used to define params.featureHeight, which is used to determine canvas height.\n      // Since featureMargin.top = 13 on forward strand, the canvas has a 13px space at the bottom, meaning there is a gap before the background starts.\n      // Reducing params.featureHeight here fixes that.\n      params.featureHeight = Math.max(params.featureHeight - this.featureMargin.top, 0);\n\n      return rtn;\n    },\n\n    draw: function (features, featureContext, labelContext, scale) {\n      if (this.prop('strand') === 1) {\n        featureContext.fillStyle = '#FFF';\n        featureContext.fillRect(0, 0, featureContext.canvas.width, featureContext.canvas.height);\n      }\n\n      this.base(features, featureContext, labelContext, scale);\n    },\n\n    drawBackground: function (features, context, params) {\n      if (this.prop('strand') === -1) {\n        return;\n      }\n\n      for (var i = 0; i < features.length; i++) {\n        context.fillStyle = features[i].color;\n\n        this.drawFeature($.extend(true, {}, features[i], {\n          x           : features[i].position[params.scale].X,\n          y           : 0,\n          width       : features[i].position[params.scale].width,\n          height      : context.canvas.height,\n          color       : this.shadeColor(context.fillStyle, 0.8),\n          border      : features[i].color,\n          label       : false,\n          decorations : true\n        }), context, false, params.scale);\n      }\n    },\n\n    decorateFeature: function (feature, context, scale) {\n      var x1   = feature.x + 0.5;\n      var x2   = x1 + feature.width;\n      var draw = false;\n\n      context.strokeStyle = feature.border;\n      context.lineWidth   = 2;\n      context.beginPath();\n\n      if (x1 >= 0 && x1 <= this.width) {\n        context.moveTo(x1, feature.y);\n        context.lineTo(x1, feature.y + feature.height);\n        draw = true;\n      }\n\n      if (x2 >= 0 && x2 <= this.width) {\n        context.moveTo(x2, feature.y);\n        context.lineTo(x2, feature.y + feature.height);\n        draw = true;\n      }\n\n      if (draw) {\n        context.stroke();\n      }\n\n      context.lineWidth = 1;\n    }\n  })\n});\n","Genoverse.Track.Controller.Legend = Genoverse.Track.Controller.Static.extend({\n  init: function () {\n    this.base();\n\n    this.container.addClass('gv-track-container-legend');\n\n    this.browser.legends[this.track.id] = this.track;\n\n    this.track.setTracks();\n  },\n\n  destroy: function () {\n    delete this.browser.legends[this.prop('id')];\n    this.base();\n  }\n});\n\nGenoverse.Track.Model.Legend = Genoverse.Track.Model.Static.extend({\n  findFeatures: function () {\n    var bounds   = { x: this.browser.scaledStart, y: 0, w: this.width };\n    var features = {};\n\n    $.each($.map(this.track.tracks, function (track) {\n      var featurePositions = track.prop('featurePositions');\n      bounds.h = track.prop('height');\n      return featurePositions ? featurePositions.search(bounds).concat(track.prop('labelPositions').search(bounds)) : [];\n    }), function () {\n      if (this.legend) {\n        features[this.legend] = this.legendColor || this.color;\n      }\n    });\n\n    return this.sortFeatures($.map(features, function (color, text) { return [[ text, color ]]; }));\n  },\n\n  sortFeatures: function (features) {\n    // sort legend alphabetically\n    return features.sort(function (a, b) {\n      var x = a[0].toLowerCase();\n      var y = b[0].toLowerCase();\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n});\n\nGenoverse.Track.View.Legend = Genoverse.Track.View.Static.extend({\n  textColor     : '#000000',\n  labels        : 'overlay',\n  featureHeight : 12,\n\n  positionFeatures: function (f, params) {\n    if (params.positioned) {\n      return f;\n    }\n\n    var cols     = 2;\n    var pad      = 5;\n    var w        = 20;\n    var x        = 0;\n    var y        = 0;\n    var xScale   = this.width / cols;\n    var yScale   = this.fontHeight + pad;\n    var features = [];\n    var xOffest  = params.xOffset || 0;\n    var xPos, yPos, labelWidth;\n\n    for (var i = 0; i < f.length; i++) {\n      xPos       = (x * xScale) + pad;\n      yPos       = (y * yScale) + pad;\n      labelWidth = this.context.measureText(f[i][0]).width;\n\n      features.push(\n        { x: xPos + xOffest,           y: yPos, width: w,              height: this.featureHeight, color: f[i][1] },\n        { x: xPos + xOffest + pad + w, y: yPos, width: labelWidth + 1, height: this.featureHeight, color: false, labelColor: this.textColor, labelWidth: labelWidth, label: f[i][0] }\n      );\n\n      if (++x === cols) {\n        x = 0;\n        y++;\n      }\n    }\n\n    params.height     = this.prop('height', f.length ? ((y + (x ? 1 : 0)) * yScale) + pad : 0);\n    params.width      = this.width;\n    params.positioned = true;\n\n    return this.base(features, params);\n  }\n});\n\nGenoverse.Track.Legend = Genoverse.Track.Static.extend({\n  unsortable  : true,\n  lockToTrack : true, // Always put the legend just below the last track that the legend is for\n  removable   : false,\n\n  controller : Genoverse.Track.Controller.Legend,\n  model      : Genoverse.Track.Model.Legend,\n  view       : Genoverse.Track.View.Legend,\n\n  setDefaults: function () {\n    this.order = typeof this.order !== 'undefined' ? this.order : 9e99;\n    this.id    = this.id   || 'legend';\n    this.type  = this.type || 'legend';\n    this.base();\n  },\n\n  setEvents: function () {\n    this.browser.on({\n      'afterAddTracks afterRemoveTracks': function (tracks) {\n        for (var i in this.legends) {\n          this.legends[i].setTracks();\n        }\n\n        this.sortTracks();\n      },\n      afterRemoveTracks: function (tracks) {\n        for (var i in tracks) {\n          if (tracks[i].legendTrack && tracks[i].legendTrack.tracks.length === 0) {\n            tracks[i].legendTrack.remove();\n          }\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].controller.makeImage({});\n        }\n      },\n      afterUpdateTrackOrder: function (e, ui) {\n        var track       = ui.item.data('track');\n        var legendTrack = this.legends[track.id] || track.legendTrack;\n\n        // If a legend track, or a track with a sortable legend has been reordered, its lockToTrack status is ignored from now on.\n        // This allows a legend to initially be locked to a track, but then to be reordered once the browser has been initialized\n        if (legendTrack && legendTrack.lockToTrack && legendTrack.unsortable === false) {\n          legendTrack.lockToTrack = false;\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].updateOrder();\n        }\n\n        this.sortTracks();\n      }\n    });\n\n    this.browser.on({\n      afterPositionFeatures: function (features, params) {\n        var legend = this.prop('legendTrack');\n\n        if (legend) {\n          setTimeout(function () { legend.controller.makeImage(params); }, 1);\n        }\n      },\n      afterResize: function (height, userResize) {\n        var legend = this.prop('legendTrack');\n\n        if (legend && userResize === true) {\n          legend.controller.makeImage({});\n        }\n      },\n      afterCheckHeight: function () {\n        var legend = this.prop('legendTrack');\n\n        if (legend) {\n          legend.controller.makeImage({});\n        }\n      },\n      afterSetMVC: function () {\n        var legend = this.prop('legendTrack');\n\n        if (legend && legend.tracks.length) {\n          legend.disable();\n\n          if (this.legend !== false) {\n            legend.enable();\n          }\n        }\n      }\n    }, this);\n  },\n\n  setTracks: function () {\n    var legend = this;\n    var type   = this.type;\n\n    this.tracks = $.map(this.browser.tracks.filter(function (t) {\n      if (t.legendType === type) {\n        t.legendTrack = t.legendTrack || legend;\n        return true;\n      }\n    }), function (track) {\n      return [ track ].concat(track.prop('childTracks'), track.prop('parentTrack')).filter(function (t) { return t && t !== legend && !t.prop('disabled'); })\n    });\n\n    this.updateOrder();\n\n    if (typeof this.controller === 'object') {\n      this[this.tracks.length ? 'enable' : 'disable']();\n    } else {\n      this.disabled = !this.tracks.length;\n    }\n  },\n\n  updateOrder: function () {\n    if (this.lockToTrack) {\n      var tracks = this.tracks.filter(function (t) { return !t.prop('parentTrack'); });\n\n      if (tracks.length) {\n        this.order = tracks[tracks.length - 1].order + 0.1;\n      }\n    }\n  },\n\n  enable: function () {\n    this.base();\n    this.controller.makeImage({});\n  },\n\n  disable: function () {\n    delete this.controller.stringified;\n    this.base();\n  }\n});\n","Genoverse.Track.Scaleline = Genoverse.Track.Static.extend({\n  strand     : 1,\n  color      : '#000000',\n  height     : 12,\n  labels     : 'overlay',\n  unsortable : true,\n  fixedOrder : true,\n\n  resize: $.noop,\n\n  makeFirstImage: function () {\n    this.prop('scaleline', false);\n    this.base.apply(this, arguments);\n  },\n\n  render: function (f, img) {\n    this.base(f, img);\n    this.prop('drawnScale', img.data('scale'));\n  },\n\n  positionFeatures: function (features, params) {\n    var scaleline = this.prop('scaleline');\n\n    if (params.scale === this.drawnScale) {\n      return false;\n    } else if (scaleline) {\n      return scaleline;\n    }\n\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var text   = this.formatLabel(this.browser.length);\n    var text2  = strand === 1 ? 'Forward strand' : 'Reverse strand';\n    var width1 = this.context.measureText(text).width;\n    var width2 = this.context.measureText(text2).width;\n    var x1, x2;\n\n    if (strand === 1) {\n      x1 = 0;\n      x2 = this.width - width2 - 40;\n    } else {\n      x1 = 25;\n      x2 = 30;\n    }\n\n    scaleline = [\n      { x: x1,                             y: height / 2, width: this.width - 25, height: 1, decorations: true },\n      { x: (this.width - width1 - 10) / 2, y: 0,          width: width1 + 10,     height: height, clear: true, color: false, labelColor: this.color, labelWidth: width1, label: text  },\n      { x: x2,                             y: 0,          width: width2 + 10,     height: height, clear: true, color: false, labelColor: this.color, labelWidth: width2, label: text2 }\n    ];\n\n    return this.base(this.prop('scaleline', scaleline), params);\n  },\n\n  decorateFeature: function (feature, context) {\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var x      = strand === 1 ? this.width - 25 : 25;\n\n    context.strokeStyle = this.color;\n\n    context.beginPath();\n    context.moveTo(x,                 height * 0.25);\n    context.lineTo(x + (strand * 20), height * 0.5);\n    context.lineTo(x,                 height * 0.75);\n    context.closePath();\n    context.stroke();\n    context.fill();\n  }\n});","Genoverse.Track.Scalebar = Genoverse.Track.extend({\n  unsortable     : true,\n  fixedOrder     : true,\n  order          : 0,\n  orderReverse   : 1e5,\n  featureStrand  : 1,\n  controls       : 'off',\n  height         : 20,\n  featureHeight  : 3,\n  featureMargin  : { top: 0, right: 0, bottom: 2, left: 0 },\n  margin         : 0,\n  minPixPerMajor : 100, // Least number of pixels per written number\n  color          : '#000000',\n  autoHeight     : false,\n  labels         : true,\n  bump           : false,\n  resizable      : false,\n  click          : $.noop,\n  colors         : {\n    majorGuideLine : '#CCCCCC',\n    minorGuideLine : '#E5E5E5'\n  },\n\n  setEvents: function () {\n    var browser = this.browser;\n\n    function resize() {\n      $('.gv-bg.gv-full-height', browser.container).height(function () {\n        return browser.wrapper.outerHeight(true) - $(this).parents('.gv-track-container').position().top;\n      });\n    }\n\n    browser.on('afterAddTracks', resize);\n    browser.on('afterResize', this, resize);\n  },\n\n  setScale: function () {\n    var max       = this.prop('width') / this.prop('minPixPerMajor');\n    var divisor   = 5;\n    var majorUnit = -1;\n    var fromDigit = ('' + this.browser.start).split(''); // Split into array of digits\n    var toDigit   = ('' + this.browser.end).split('');\n    var features  = {};\n    var divisions, i;\n\n    for (i = fromDigit.length; i < toDigit.length; i++) {\n      fromDigit.unshift('0');\n    }\n\n    for (i = toDigit.length; i < fromDigit.length; i++) {\n      toDigit.unshift('0');\n    }\n\n    // How many divisions would there be if we only kept i digits?\n    for (i = 0; i < fromDigit.length; i++) {\n      divisions = parseInt(toDigit.slice(0, fromDigit.length - i).join(''), 10) - parseInt(fromDigit.slice(0, fromDigit.length - i).join(''), 10);\n\n      if (divisions && divisions <= max) {\n        majorUnit = parseInt('1' + $.map(new Array(i), function () { return '0'; }).join(''), 10);\n        break;\n      }\n    }\n\n    if (majorUnit === -1) {\n      majorUnit = this.browser.length === 1 ? 1 : parseInt('1' + $.map(new Array(fromDigit.length), function () { return '0'; }).join(''), 10);\n      divisor   = 1;\n    } else {\n      // Improve things by trying simple multiples of 1<n zeroes>.\n      // (eg if 100 will fit will 200, 400, 500).\n      if (divisions * 5 <= max) {\n        majorUnit /= 5;\n        divisor    = 2;\n      } else if (divisions * 4 <= max) {\n        majorUnit /= 4;\n        divisor    = 1;\n      } else if (divisions * 2 <= max) {\n        majorUnit /= 2;\n      }\n    }\n\n    majorUnit = Math.max(majorUnit, 1);\n\n    features[this.browser.chr] = new RTree();\n\n    this.prop('minorUnit',     Math.max(majorUnit / divisor, 1));\n    this.prop('majorUnit',     majorUnit);\n    this.prop('featuresByChr', features);\n    this.prop('featuresById',  {});\n    this.prop('seen',          {});\n\n    this.base();\n  },\n\n  setFeatures: function (chr, start, end) {\n    var minorUnit = this.prop('minorUnit');\n    var majorUnit = this.prop('majorUnit');\n    var seen      = this.prop('seen');\n\n    start = Math.max(start - (start % minorUnit) - majorUnit, 0);\n\n    var flip = (start / minorUnit) % 2 ? 1 : -1;\n    var feature, major, label;\n\n    for (var x = start; x < end + minorUnit; x += minorUnit) {\n      flip *= -1;\n\n      if (seen[x]) {\n        continue;\n      }\n\n      seen[x] = 1;\n\n      feature = { id: chr + ':' + x, chr: chr, strand: 1, sort: x };\n      major   = x && x % majorUnit === 0;\n\n      if (flip === 1) {\n        feature.start = x;\n        feature.end   = x + minorUnit - 1;\n      }\n\n      if (major) {\n        label = this.view.formatLabel(x);\n\n        if (label !== this.lastLabel) {\n          feature.label = label;\n\n          if (!feature.end) {\n            feature.start = x;\n            feature.end   = x - 1;\n          }\n        }\n\n        this.lastLabel = label;\n      }\n\n      if (feature.end) {\n        this.model.insertFeature(feature);\n      }\n    }\n  },\n\n  makeFirstImage: function (moveTo) {\n    if (this.prop('strand') === -1) {\n      moveTo = this.track.forwardTrack.prop('scrollStart');\n    }\n\n    return this.base(moveTo);\n  },\n\n  makeImage: function (params) {\n    params.background    = 'gv-guidelines gv-full-height';\n    params.featureHeight = this.prop('height');\n\n    this.track.setFeatures(params.chr, params.start, params.end);\n\n    var rtn = this.base(params);\n\n    params.container.addClass('gv-full-height');\n\n    return rtn;\n  },\n\n  makeReverseImage: function (params) {\n    this.imgContainers.push(params.container.clone().html(params.container.children('.gv-data').clone(true).css({ opacity: 1, background: this.browser.wrapper.css('backgroundColor') }))[0]);\n    this.scrollContainer.append(this.imgContainers);\n  },\n\n  renderBackground: function (f, bgImage) {\n    this.base(f, bgImage);\n    bgImage.height(this.browser.wrapper.outerHeight(true));\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var i         = features.length;\n    var minorUnit = this.prop('minorUnit');\n    var width     = Math.ceil(minorUnit * scale);\n    var feature, start, end;\n\n    featureContext.textBaseline = 'top';\n    featureContext.fillStyle    = this.color;\n\n    this.guideLines = { major: {} }; // FIXME: pass params to draw, rather than scale. set guideLines on params\n\n    while (i--) {\n      feature = features[i];\n      start   = Math.round(feature.position[scale].X);\n      end     = start + width - 1;\n\n      this.drawFeature($.extend({}, feature, {\n        x      : start,\n        y      : 0,\n        width  : Math.ceil(feature.position[scale].width),\n        height : this.featureHeight\n      }), featureContext, labelContext, scale);\n\n      if (feature.label) {\n        if (start > -1) {\n          featureContext.fillRect(start, this.featureHeight, 1, this.featureHeight);\n        }\n\n        this.guideLines.major[feature.start] = true;\n      }\n\n      // Fiddle the location so that these [additional major] lines overlap with normal lines\n      if (feature.end < feature.start) {\n        start--;\n        end++;\n      }\n\n      this.guideLines[feature.start]             = start;\n      this.guideLines[feature.start + minorUnit] = end;\n    }\n\n    featureContext.fillRect(0, 0, featureContext.canvas.width, 1);\n    featureContext.fillRect(0, this.featureHeight, featureContext.canvas.width, 1);\n  },\n\n  // Draw guidelines\n  drawBackground: function (f, context) {\n    for (var i in this.guideLines) {\n      if (this.guideLines[i] >= 0 && this.guideLines[i] <= this.width) {\n        context.fillStyle = this.track.colors[this.guideLines.major[i] ? 'majorGuideLine' : 'minorGuideLine' ];\n        context.fillRect(this.guideLines[i], 0, 1, context.canvas.height);\n      }\n    }\n  },\n\n  formatLabel: function (label) {\n    return this.prop('minorUnit') < 1000 ? label.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,') : this.base(label);\n  }\n});\n","Genoverse.Plugins.controlPanel = function () {\n  var genoverse = this;\n\n  this.controls = [\n    // Scroll left/right\n    {\n      name    : 'Scroll left and right by pressing and holding these buttons',\n      buttons : [{\n        name    : 'Scroll left',\n        icon    : '<i class=\"fa fa-chevron-left\"></i>',\n        'class' : 'gv-scroll-left'\n      }, {\n        name    : 'Scroll right',\n        icon    : '<i class=\"fa fa-chevron-right\"></i>',\n        'class' : 'gv-scroll-right'\n      }],\n      init: function (browser) {\n        var el = $(this);\n\n        el.find('.gv-scroll-left, .gv-scroll-right').on({\n          mousedown : function () { browser.startDragScroll(); },\n          mouseup   : function () { browser.stopDragScroll();  }\n        });\n\n        el.find('.gv-scroll-left').mousehold(50, function () {\n          browser.move(browser.scrollDelta);\n        });\n\n        el.find('.gv-scroll-right').mousehold(50, function () {\n          browser.move(-browser.scrollDelta);\n        });\n      }\n    },\n\n    // Zoom in/out\n    {\n      name    : 'Zoom-in and zoom-out',\n      buttons : [{\n        name    : 'Zoom in',\n        icon    : '<i class=\"fa fa-search-plus\"></i>',\n        'class' : 'gv-zoom-in',\n        action  : function (browser) { browser.zoomIn(); }\n      }, {\n        name    : 'Zoom out',\n        icon    : '<i class=\"fa fa-search-minus\"></i>',\n        'class' : 'gv-zoom-out',\n        action  : function (browser) { browser.zoomOut(); }\n      }]\n    },\n\n    // Toogle drag action\n    {\n      name    : 'Toggle your mouse drag action between scroll left/right and select region',\n      buttons : [{\n        name    : 'Mouse drag action to scroll the browser left or right',\n        icon    : '<i class=\"fa fa-arrows-h\"></i>',\n        'class' : 'gv-drag-scroll',\n        action  : function (browser) {\n          browser.setDragAction('scroll');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }, {\n        name    : 'Mouse drag action to select a region',\n        icon    : '<i></i>',\n        'class' : 'gv-drag-select',\n        action  : function (browser) {\n          browser.setDragAction('select');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }],\n      init: function (browser) {\n        $(this).find('.gv-drag-' + browser.dragAction).addClass('gv-active').siblings().removeClass('gv-active');\n      }\n    },\n\n    // Toogle wheel action\n    {\n      name    : 'Toggle your mouse wheel action between zoom in/out and default page scroll',\n      buttons : [{\n        name    : 'Mouse wheel action to scroll the page up and down',\n        icon    : '<i class=\"fa fa-arrows-v\"></i>',\n        'class' : 'gv-wheel-off',\n        action  : function (browser) {\n          browser.setWheelAction('off');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }, {\n        name    : 'Mouse wheel to zoom in and out',\n        icon    : '&#177;',\n        'class' : 'gv-wheel-zoom',\n        action  : function (browser) {\n          browser.setWheelAction('zoom');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }],\n      init: function (browser) {\n        $(this).find('.gv-wheel-' + browser.wheelAction).addClass('gv-active').siblings().removeClass('gv-active');\n      }\n    }\n  ];\n\n  if (this.saveable) {\n    this.controls.push({\n      icon   : '<i class=\"fa fa-undo\"></i>',\n      name   : 'Reset tracks and configuration',\n      action : function (browser) { browser.resetConfig(); }\n    });\n  }\n\n  this.on({\n    beforeInit: function () {\n      var browser = this;\n\n      if (!this.tracksLibrary) {\n        this.tracksLibrary = $.grep(this.tracks, function (track) { return track.prototype.name; });\n      }\n\n      var panel = $(\n        '<table cellspacing=0 cellpadding=0 class=\"gv\">' +\n        '  <tr>' +\n        '    <td class=\"gv-panel gv-panel-left\"></td>' +\n        '    <td class=\"gv-canvas-container\"></td>' +\n        '    <td class=\"gv-panel gv-panel-right\"></td>' +\n        '  </tr>' +\n        '</table>'\n      ).appendTo(this.container).find('.gv-panel-right');\n\n      this.controlPanel   = panel;\n      this.superContainer = this.container;\n      this.container      = $('.gv-canvas-container', this.container);\n\n      for (var i = 0; i < browser.controls.length; i++) {\n        (function (control) {\n          var buttonSet = $('<div class=\"gv-button-set\">').attr('title', control.name).appendTo(browser.superContainer.find('.gv-panel-right'));\n          var buttons   = control.buttons || [ control ];\n          var el;\n\n          $.each(buttons, function (i, button) {\n            var el = $('<button>' + button.icon + '</button>').addClass(button['class']).attr('title', button.name).appendTo(buttonSet);\n\n            if (button.action) {\n              el.on('click', function () {\n                button.action.call(this, browser);\n              });\n            }\n\n            if (button.init && button !== control) {\n              button.init.call(el[0], browser);\n            }\n          });\n\n          if (control.init) {\n            control.init.call(buttonSet, browser);\n          }\n        })(browser.controls[i]);\n      }\n\n      this.superContainer.width(this.width);\n\n      this.width -= panel.width();\n\n      // ESC key to toggle crosshair select to drag mode and close menus\n      $(document).on('keydown', function (e) {\n        if (e.keyCode === 27) {\n          if (panel.find('button.gv-drag-select').hasClass('gv-active')) {\n            panel.find('button.gv-drag-scroll').trigger('click');\n          }\n\n          $('.gv-menu .gv-close').trigger('click');\n        }\n      });\n    },\n\n    afterInit: function () {\n      var browser      = this;\n      var tracksButton = $('<button title=\"Tracks menu\"><i class=\"fa fa-navicon\"></i> Tracks</button>').on('click', function () {\n        var button = this;\n\n        function getTrackTags(track, tags) {\n          if (track.constructor && track.constructor.ancestor && track.constructor.ancestor.prototype) {\n            tags = getTrackTags(track.constructor.ancestor.prototype, tags.concat(track.constructor.ancestor.prototype.tags || []));\n          }\n\n          return tags;\n        }\n\n        if ($(this).hasClass('gv-active')) {\n          $('.gv-menu.gv-tracks-menu .gv-close').trigger('click');\n          $(this).removeClass('gv-active');\n        } else {\n          var menu = $(this).data('menu');\n\n          if (menu) {\n            menu.show();\n          } else {\n            menu = browser.makeMenu({\n              'Currently enabled tracks:'             : 'Available tracks:',\n              '<div class=\"gv-current-tracks\"></div>' : '<input placeholder=\"Search\"><div class=\"gv-available-tracks\"></div>'\n            }).addClass('gv-tracks-menu');\n\n            menu.css({ marginLeft: menu.width() / -2 });\n\n            $('input[placeholder=Search]', menu).on('keyup', function () {\n              var str = this.value.toLowerCase();\n\n              $('.gv-tracks-library-item', menu).each(function () {\n                var track = $(this).data('track');\n                var match = false;\n\n                if (track.name && track.name.toLowerCase().indexOf(str) >= 0) {\n                  match = true;\n                } else {\n                  var tags = getTrackTags(track, []).concat(track.tags || []);\n\n                  for (var i = 0; i < tags.length; i++) {\n                    if (tags[i].toLowerCase().indexOf(str) >= 0) {\n                      match = true;\n                      break;\n                    }\n                  }\n                }\n\n                $(this)[match ? 'show' : 'hide']();\n              });\n            });\n\n            $('.gv-close', menu).on('click', function () {\n              $(button).removeClass('gv-active');\n            });\n\n            var availableTracks = $('.gv-available-tracks', menu);\n            var currentTracks   = $('.gv-current-tracks',   menu).data({\n              reload     : function () { $(this).empty().data('listTracks')(); },\n              listTracks : function () {\n                for (var i = 0; i < browser.tracks.length; i++) {\n                  if (browser.tracks[i].name && browser.tracks[i].removable !== false && !browser.tracks[i].parentTrack) {\n                    (function (track) {\n                      $('<div>')\n                        .append($('<i class=\"gv-remove-track gv-menu-button fa fa-times-circle\">').on('click', function () { track.remove(); }))\n                        .append('<span>' + track.name + '</span>')\n                        .appendTo(currentTracks)\n                        .data('track', track)\n                        .addClass(track.unsortable ? 'gv-unsortable' : '');\n                    })(browser.tracks[i]);\n                  }\n                }\n              }\n            }).sortable({\n              items  : 'div:not(.gv-unsortable)',\n              cursor : 'move',\n              axis   : 'y',\n              handle : 'span',\n              update : $.proxy(browser.updateTrackOrder, browser)\n            });\n\n            currentTracks.data('listTracks')();\n\n            if (browser.tracksLibrary && browser.tracksLibrary.length) {\n              var tracksLibrary = $.map(browser.tracksLibrary, function (track) {\n                return track.prototype.name && track.prototype.removable !== false ? [[ track.prototype.name.toLowerCase(), track ]] : undefined;\n              }).sort(function (a, b) { return a[0] > b[0] ? 1 : -1; });\n\n              for (var i = 0; i < tracksLibrary.length; i++) {\n                (function (track) {\n                  $('<div class=\"gv-tracks-library-item\">').append(\n                    $('<i class=\"gv-add-track gv-menu-button fa fa-plus-circle\"> ').on('click', function () {\n                      var sortableTracks = browser.tracks.filter(function (t) { return !(t.fixedOrder || t.unsortable); });\n\n                      browser.trackIds = browser.trackIds || {};\n                      browser.trackIds[track.prototype.id] = browser.trackIds[track.prototype.id] || 1;\n\n                      browser.addTrack(track.extend({ id: track.prototype.id + (browser.tracksById[track.prototype.id] ? browser.trackIds[track.prototype.id]++ : '') }));\n                    })\n                  ).append('<span>' + track.prototype.name + '</span>').appendTo(availableTracks).data('track', track.prototype);\n                })(tracksLibrary[i][1]);\n              }\n            }\n\n            $(this).data('menu', menu);\n          }\n\n          $(this).addClass('gv-active');\n        }\n      });\n\n      this.labelContainer.prepend(\n        $('<li class=\"gv-unsortable\">').append(\n          $('<div class=\"gv-button-set\" title=\"Tracks menu\">').append(tracksButton)\n        )\n      );\n    },\n\n    afterAddDomElements: function () {\n      this.wrapper.after('<div class=\"gv-powered-by\">Powered by <a target=\"_blank\" href=\"http://genoverse.org\">Genoverse</a></div>');\n      this.superContainer.find('.gv-panel-left').append(this.labelContainer);\n    },\n\n    'afterAddTracks afterRemoveTracks': function () {\n      var currentTracks = this.superContainer.find('.gv-tracks-menu .gv-current-tracks');\n\n      if (currentTracks.length) {\n        currentTracks.data('reload').call(currentTracks);\n      }\n    }\n  });\n};\n\nGenoverse.Plugins.controlPanel.requires = 'karyotype';\n","Genoverse.Plugins.fileDrop = function () {\n  this.on('afterInit', function () {\n    var browser = this;\n    var wrapper = this.wrapper;\n\n    $(window).on('dragenter', function (e) {\n      var dataTransfer = e.originalEvent.dataTransfer;\n\n      if (dataTransfer && dataTransfer.types && (dataTransfer.types[0] === 'Files' || dataTransfer.types[1] === 'Files' || dataTransfer.types[2] === 'Files') && !$('.gv-file-drop-total-overlay').length) {\n        var fileDropDiv      = $('<div class=\"gv-file-drop\">').appendTo(wrapper);\n        var totalDropOverlay = $('<div class=\"gv-file-drop-total-overlay\">').prependTo('body');\n\n        var dragleave = function () {\n          fileDropDiv.remove();\n          totalDropOverlay.remove();\n        };\n\n        totalDropOverlay.on('dragenter', function (e) { e.preventDefault(); e.stopPropagation(); });\n        totalDropOverlay.on('dragover',  function (e) { e.preventDefault(); e.stopPropagation(); });\n        totalDropOverlay.on('dragleave', dragleave);\n        totalDropOverlay.on('drop', function (e) {\n          dragleave();\n          e.preventDefault();\n          e.stopPropagation();\n\n          // Sort in order to ensure that .bam files are before their .bam.bai files\n          var files = $.map(e.originalEvent.dataTransfer.files, function (f) { return f; }).sort(function (a, b) { return a.name < b.name ? -1 : 1 });\n\n          for (var i = 0; i < files.length; i++) {\n            var file  = files[i];\n            var parts = file.name.split('.').reverse();\n            var gz    = parts[0] === 'gz';\n            var ext   = parts[gz ? 1 : 0];\n            var track = Genoverse.Track.File[ext.toUpperCase()];\n            var indexFile;\n\n            if (typeof track === 'undefined') {\n              return;\n            }\n\n            if (track.prototype.indexExt && (files[i + 1] || {}).name === file.name + track.prototype.indexExt) {\n              indexFile = files[++i];\n            }\n\n            track = track.extend({\n              name      : file.name,\n              info      : 'Local file `' + file.name + '`, size: ' + file.size + ' bytes',\n              isLocal   : true,\n              dataFile  : file,\n              indexFile : indexFile,\n              gz        : gz\n            });\n\n            browser.addTrack(track, browser.tracks.length - 1);\n          }\n\n          return false;\n        });\n      }\n    });\n  });\n};\n","Genoverse.Plugins.focusRegion = function () {\n  this.controls.push({\n    icon    : '<i class=\"fa fa-map-marker\"></i>',\n    'class' : 'gv-button-large',\n    name    : 'Reset focus to ' + (this.focusRegion && this.focusRegion.name ? this.focusRegion.name : this.chr + ':' + this.start + '-' + this.end),\n    action  : function (browser) { browser.moveTo(browser.focusRegion.chr, browser.focusRegion.start, browser.focusRegion.end, true); },\n    init    : function (browser) { browser.focusRegion = browser.focusRegion || { chr: browser.chr, start: browser.start, end: browser.end }; }\n  });\n};\n\nGenoverse.Plugins.focusRegion.requires = 'controlPanel';\nGenoverse.Plugins.focusRegion.noCSS    = true;\n","Genoverse.Plugins.fullscreen = function () {\n  var browser     = this;\n  var supported   = true;\n  var eventName   = 'fullscreenchange';  // All the browsers have different names\n  var elemName    = 'fullscreenElement'; // ... even the capitalisation varies!\n  var requestName = 'requestFullscreen';\n  var cancelName  = 'exitFullscreen';\n\n  if (document.onmsfullscreenchange || document.onmsfullscreenchange === null) {\n    // We need the IE11 version of this to work; IE9-10 have the actions but not the events.\n    // The key must be present, i.e. value may be null but it must not return undefined\n    eventName   = 'MSFullscreenChange';\n    elemName    = 'msFullscreenElement';\n    cancelName  = 'msExitFullscreen';\n    requestName = 'msRequestFullscreen';\n  } else if (document.body.mozRequestFullScreen) {\n    eventName   = 'mozfullscreenchange';\n    elemName    = 'mozFullScreenElement';\n    cancelName  = 'mozCancelFullScreen';\n    requestName = 'mozRequestFullScreen';\n  } else if (document.body.webkitRequestFullscreen) {\n    eventName   = 'webkitfullscreenchange';\n    elemName    = 'webkitFullscreenElement';\n    cancelName  = 'webkitCancelFullScreen';\n    requestName = 'webkitRequestFullscreen';\n  } else if (!document.onfullscreenchange) {\n    supported = false;\n  }\n\n  browser.fullscreenVars = {\n    eventName   : eventName,\n    elemName    : elemName,\n    cancelName  : cancelName,\n    requestName : requestName,\n\n    enterEvent: function (browser) {\n      browser.preFullscreenWidth = browser.superContainer.width();\n      browser.superContainer.addClass('gv-fullscreen');\n      browser.setWidth(window.innerWidth);\n      browser.controlPanel.find('.gv-fullscreen-button .fa').removeClass('fa-expand').addClass('fa-compress');\n    },\n\n    exitEvent: function (browser) {\n      if (browser.superContainer.hasClass('gv-fullscreen')) {\n        browser.superContainer.removeClass('gv-fullscreen');\n        browser.setWidth(browser.preFullscreenWidth);\n        browser.controlPanel.find('.gv-fullscreen-button .fa').removeClass('fa-compress').addClass('fa-expand');\n      }\n    },\n\n    eventListener: function () {\n      if (!browser.superContainer.is(document[browser.fullscreenVars.elemName])) {\n        browser.fullscreenVars.exitEvent(browser);\n        document.removeEventListener(browser.fullscreenVars.eventName, browser.fullscreenVars.eventListener);\n      }\n    }\n  };\n\n  if (supported) {\n    browser.controls.push({\n      icon    : '<i class=\"fa fa-expand\"></i>',\n      'class' : 'gv-fullscreen-button',\n      name    : 'Toggle fullscreen view',\n      action  : function (browser) {\n        if (browser.superContainer.hasClass('gv-fullscreen')) {\n          document[browser.fullscreenVars.cancelName]();\n        } else {\n          document.addEventListener(browser.fullscreenVars.eventName, browser.fullscreenVars.eventListener);\n          browser.superContainer[0][browser.fullscreenVars.requestName]();\n          browser.fullscreenVars.enterEvent(browser);\n        }\n      }\n    });\n  }\n};\n\nGenoverse.Plugins.fullscreen.requires = 'controlPanel';\n","Genoverse.Plugins.karyotype = function () {\n  function createKaryotype() {\n    var chromosome = $('<div class=\"gv-chromosome\">');\n    var container  = $('<div class=\"gv-karyotype-container\">').html(chromosome).insertBefore(this.wrapper);\n\n    this.karyotype = new Genoverse({\n      parent    : this,\n      container : chromosome,\n      width     : chromosome.width(),\n      genome    : this.genome,\n      chr       : this.chr,\n      start     : 1,\n      end       : this.chromosomeSize,\n      isStatic  : true,\n      tracks    : [\n        Genoverse.Track.Chromosome.extend({\n          name          : 'Chr ' + this.chr,\n          height        : 20,\n          featureHeight : 20,\n          border        : false,\n          legend        : false,\n          unsortable    : true,\n\n          click: function (e) {\n            var offset = this.container.parent().offset().left;\n            var x      = e.pageX - offset;\n            var f      = this.featurePositions.search({ x: x, y: 1, w: 1, h: 1 })[0];\n\n            if (f) {\n              if (e.type === 'mouseup') {\n                if (!this.browser.parent.isStatic) {\n                  this.browser.parent.moveTo(f.chr, f.start, f.end, true);\n                }\n              } else if (this.hoverFeature !== f && !this.browser.hideTooltip) {\n                this.container.tipsy('hide');\n\n                if (f.label) {\n                  var left = offset + f.position[this.scale].start + f.position[this.scale].width / 2;\n                  this.container.attr('title', f.label[0]).tipsy({ trigger: 'manual', container: 'body' }).tipsy('show').data('tipsy').$tip.css('left', function () { return left - $(this).width() / 2; });\n                }\n\n                this.hoverFeature = f;\n              }\n            }\n          },\n\n          addUserEventHandlers: function () {\n            var track = this;\n\n            this.base();\n\n            this.container.on({\n              mousemove : function (e) { track.click(e); },\n              mouseout  : function (e) {\n                if (track.browser.viewPoint.is(e.relatedTarget) || track.browser.viewPoint.find(e.relatedTarget).length) {\n                  return true;\n                }\n\n                track.container.tipsy('hide');\n                track.hoverFeature = false;\n              }\n            }, '.gv-image-container');\n\n            // Don't allow zooming in and out on the karyotype image\n            this.container.on('mousewheel', '.gv-image-container, .gv-selector', function (e) {\n              e.stopPropagation();\n            });\n          },\n\n          afterSetName: function () {\n            this.label.css('lineHeight', this.label.height() + 'px');\n          }\n        })\n      ],\n\n      addUserEventHandlers: $.noop,\n\n      afterInit: function () {\n        this.updatePosition();\n        this.viewPoint.fadeIn();\n      },\n\n      afterAddTracks: function () {\n        this.track = this.tracks[0];\n      },\n\n      afterAddDomElements: function () {\n        var karyotype = this;\n        var parent    = this.parent;\n\n        function hideTooltip() {\n          karyotype.hideTooltip = true;\n          karyotype.track.prop('container').tipsy('hide');\n        }\n\n        function updateLocation(e, ui) {\n          karyotype.hideTooltip = false;\n\n          if (e.type === 'resizestop') {\n            var axis = $(this).data('ui-resizable').axis;\n\n            if ((axis === 'e' && parent.end === karyotype.chromosomeSize) || (axis === 'w' && parent.start === 1)) {\n              return; // Don't change location if the position didn't change (dragging off the right or left edges)\n            }\n          }\n\n          var scale = karyotype.chromosomeSize / karyotype.width;\n          var start = Math.max(Math.floor(ui.position.left * scale), 1);\n          var end   = e.type === 'dragstop' ? start + parent.length - 1 : Math.floor(ui.helper.outerWidth(true) * scale) + start;\n\n          parent.moveTo(karyotype.chr, start, end, true, e.type === 'dragstop');\n        }\n\n        if (parent.karyotypeLabel === false) {\n          this.labelContainer.remove();\n          this.labelContainer = $();\n          container.addClass('gv-no-label');\n        }\n\n        this.viewPoint = $('<div class=\"gv-karyotype-viewpoint-wrapper\"><div class=\"gv-karyotype-viewpoint\"></div></div>').appendTo(container).children().on({\n          mousemove : function (e) { karyotype.track.controller.click(e); },\n          mouseout  : function (e) {\n            var el = $(e.relatedTarget);\n\n            if (karyotype.viewPoint.is(el) || karyotype.viewPoint.find(el).length || (el.prop('nodeName') === 'IMG' && el.parent().is(karyotype.track.prop('imgContainers')[0]))) {\n              return true;\n            }\n\n            karyotype.track.prop('container').tipsy('hide');\n            karyotype.track.prop('hoverFeature', false);\n          }\n        });\n\n        if (!parent.isStatic) {\n          this.viewPoint.draggable({\n            axis        : 'x',\n            containment : this.wrapper,\n            start       : hideTooltip,\n            stop        : updateLocation\n          }).resizable({\n            handles     : 'e, w',\n            containment : 'parent',\n            start       : hideTooltip,\n            stop        : updateLocation,\n            resize      : function (e, ui) {\n              ui.element.css('left', Math.max(0, ui.position.left));\n\n              if (ui.position.left > 0) {\n                ui.element.width(Math.min(ui.size.width, ui.element.parent().width() - ui.position.left));\n              } else {\n                ui.element.width(ui.size.width + ui.position.left);\n              }\n            }\n          });\n        }\n      },\n\n      updatePosition: function () {\n        var left  =  this.parent.start * this.scale;\n        var width = (this.parent.end   * this.scale) - left;\n\n        this.viewPoint.css({ left: left, width: width });\n      }\n    });\n\n    if (!this.loadedPlugins.controlPanel) {\n      $('<li class=\"gv-unsortable\">').height(function (i, h) {\n        return h + container.height();\n      }).prependTo(this.labelContainer);\n    }\n  }\n\n  function recreateKaryotype() {\n    var container = this.karyotype.container.parent();\n\n    this.karyotype.destroy();\n    container.remove();\n\n    createKaryotype.call(this);\n  }\n\n  this.on({\n    afterInit: createKaryotype,\n\n    afterSetRange: function () {\n      if (this.karyotype) {\n        this.karyotype.updatePosition();\n      }\n    },\n\n    afterSetWidth: recreateKaryotype,\n\n    afterMoveTo: function (chr) {\n      if (this.karyotype && this.karyotype.chr !== chr) {\n        recreateKaryotype.call(this);\n      }\n    }\n  });\n};\n","Genoverse.Plugins.resizer = function () {\n  this.on('afterSetMVC', 'tracks', function () {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var track      = this;\n    var controller = this.controller;\n    var resizer    = this.prop('resizer');\n    var height     = this.prop('height');\n\n    if (!resizer) {\n      resizer = this.prop('resizer', $('<div class=\"gv-resizer gv-static\"><div class=\"gv-handle\"></div></div>').appendTo(track.prop('container')).draggable({\n        axis  : 'y',\n        start : function () { $('body').addClass('gv-dragging'); },\n        stop  : function (e, ui) {\n          $('body').removeClass('gv-dragging');\n          controller.resize(track.prop('height') + ui.position.top - ui.originalPosition.top, true);\n          $(this).css({ top: 'auto', bottom: 0 }); // returns the resizer to the bottom of the container - needed when the track is resized to 0\n        }\n      }).on('click', function () {\n        var h = track.prop('fullVisibleHeight');\n\n        if (h) {\n          controller.resize(h, true);\n        }\n      }));\n    }\n\n    resizer.css({ width: this.width, left: 0 })[this.prop('autoHeight') ? 'hide' : 'show']();\n\n    if (!this.prop('autoHeight') && height - this.prop('margin') === this.prop('featureHeight')) {\n      controller.resize(height + resizer.height());\n      this.prop('initialHeight', this.prop('height'));\n    }\n  });\n\n  this.on('afterToggleExpander', 'tracks', function () {\n    var resizer = this.prop('resizer');\n\n    if (resizer) {\n      resizer[this.expander && this.expander.is(':visible') ? 'addClass' : 'removeClass']('gv-resizer-expander');\n    }\n  });\n};","// tipsy, facebook style tooltips for jquery\n// version 1.0.0a\n// (c) 2008-2010 jason frame [jason@onehackoranother.com]\n// released under the MIT license\n\nGenoverse.Plugins.tooltips = function () {\n  var browser = this;\n\n  function toggleTooltips(browser, tooltips, action) {\n    var offset = browser.superContainer.offset();\n\n    tooltips = tooltips || browser.superContainer.find('.gv-tooltip');\n    action   = action   || $(this).toggleClass('gv-active').hasClass('gv-active') ? 'show' : 'hide';\n\n    tooltips.each(function () {\n      $(this).tipsy(action).data('tipsy').$tip.appendTo(browser.superContainer).css({ marginTop: -offset.top, marginLeft: -offset.left });\n    });\n  }\n\n  function updateTooltips() {\n    var tooltips = $();\n\n    $.each([\n      [ browser.labelContainer.find('.gv-handle'), { gravity: 'w', fade: true, trigger: 'manual', fallback: 'Reorder tracks by dragging this handle' }],\n      [ browser.container.find('.gv-resizer'),     { gravity: 'n', fade: true, trigger: 'manual', fallback: 'Resize track by dragging this handle'   }]\n    ], function () {\n      var el = this[0].first();\n\n      if (!el.hasClass('gv-tooltip')) {\n        this[0].filter('.gv-tooltip').removeClass('gv-tooltip').tipsy('hide').removeData('tipsy');\n        el.tipsy(this[1]).addClass('gv-tooltip');\n      }\n\n      tooltips = tooltips.add(el);\n    });\n\n    if (browser.controlPanel.find('.gv-tooltips').hasClass('gv-active')) {\n      toggleTooltips(browser, tooltips, 'show');\n    }\n\n    return tooltips;\n  }\n\n  this.controls.push({\n    icon    : '<i class=\"fa fa-info-circle\"></i>',\n    'class' : 'gv-tooltips',\n    name    : 'Tooltips',\n    action  : toggleTooltips\n  });\n\n  this.on('afterInit', function () {\n    this.superContainer.find('.gv-panel-left  .gv-button-set[title]').tipsy({ gravity: 'w', fade: true, trigger: 'manual' }).addClass('gv-tooltip');\n    this.superContainer.find('.gv-panel-right .gv-button-set[title]').tipsy({ gravity: 'e', fade: true, trigger: 'manual' }).addClass('gv-tooltip');\n\n    // In order to force placement of this tooltip to be inside the superContainer boundaries, and just below the karyotype, create a hidden element, positioned where we want the tooltip to appear\n    $('<i class=\"gv-wrapper-tooltip\">').prependTo(this.wrapper).tipsy({\n      gravity  : 's',\n      fade     : true,\n      trigger  : 'manual',\n      fallback : 'Scroll left and right by dragging with your mouse, click on any feature in any track for more info'\n    }).addClass('gv-tooltip');\n\n    updateTooltips();\n  });\n\n  this.on('beforeSetWidth', function () {\n    this.controlPanel.find('.gv-tooltips.gv-active').trigger('click');\n  });\n\n  this.on('afterSortTracks', function () {\n    updateTooltips();\n  });\n\n  this.on('afterResize', 'tracks', function () {\n    updateTooltips();\n  });\n};\n\nGenoverse.Plugins.tooltips.requires = 'controlPanel';\n","Genoverse.Plugins.trackControls = function () {\n  var defaultControls = [\n    $('<a title=\"More info\" class=\"fa fa-info-circle\">').on('click', function () {\n      var track = $(this).data('track');\n      var menu  = track.prop('menus').filter('.gv-track-info');\n\n      if (!menu.length) {\n        menu = { title : track.name };\n        menu[track.prop('info') || ''] = '';\n\n        menu = track.prop('menus', track.prop('menus').add(track.browser.makeMenu(menu).addClass('gv-track-info')));\n      }\n\n      menu.show().position({ of: track.prop('container'), at: 'center top', my: 'center top', collision: 'none' });\n    }),\n\n    $([\n      '<a class=\"gv-height-toggle\">',\n        '<i class=\"fa fa-sort\"></i>',\n        '<i class=\"fa fa-sort-desc\"></i>',\n        '<i class=\"fa fa-sort-asc\"></i>',\n      '</a>'\n    ].join('')).on({\n      click: function () {\n        var track = $(this).data('track');\n        var height;\n\n        if (track.prop('autoHeight', !track.prop('autoHeight'))) {\n          track.prop('heightBeforeToggle', track.prop('height'));\n          height = track.prop('fullVisibleHeight');\n        } else {\n          height = track.prop('heightBeforeToggle') || track.prop('initialHeight');\n        }\n\n        $(this).trigger('toggleState');\n\n        track.controller.resize(height, true);\n      },\n      toggleState: function () { // custom event to set title and change the icon\n        var track      = $(this).data('track');\n        var autoHeight = track.prop('autoHeight');\n        var resizer    = track.prop('resizer');\n\n        this.title = autoHeight ? 'Set track to fixed height' : 'Set track to auto-adjust height';\n        $(this)[autoHeight ? 'addClass' : 'removeClass']('gv-auto-height');\n\n        if (resizer) {\n          resizer[autoHeight ? 'hide' : 'show']();\n        }\n      }\n    })\n  ];\n\n  var remove = $('<a title=\"Remove track\" class=\"fa fa-trash\">').on('click', function () {\n    $(this).data('track').remove();\n  });\n\n  var toggle = $([\n    '<a class=\"gv-track-controls-toggle\">',\n      '<span><i class=\"fa fa-angle-double-left\"></i><i class=\"fa fa-cog\"></i></span>',\n      '<span><i class=\"fa fa-angle-double-right\"></i></span>',\n    '</a>'\n  ].join('')).on('click', function () {\n    $(this).parent().toggleClass('gv-maximized');\n  });\n\n  this.on({\n    afterAddDomElements: function () {\n      var controls = this.prop('controls');\n\n      if (controls === 'off') {\n        return;\n      }\n\n      var defaultConfig = this.prop('defaultConfig');\n      var savedConfig   = this.browser.savedConfig ? this.browser.savedConfig[this.prop('id')] || {} : {};\n      var prop, el, j;\n\n      controls = (controls || []).concat(defaultControls, this.prop('removable') === false ? [] : remove);\n\n      this.trackControls = $('<div class=\"gv-track-controls\">').prependTo(this.container);\n\n      var controlsContainer = $('<div class=\"gv-track-controls-container\">').appendTo(this.trackControls);\n\n      for (var i = 0; i < controls.length; i++) {\n        if ($.isPlainObject(controls[i]) && controls[i].type) {\n          el = $('<' + controls[i].type + '>').data('control', controls[i].name);\n\n          if (controls[i].options) {\n            for (j = 0; j < controls[i].options.length; j++) {\n              el.append('<option value=\"' + controls[i].options[j].value + '\">' + controls[i].options[j].text + '</option>');\n            }\n          }\n        } else if (typeof controls[i] === 'string') {\n          el = $(controls[i]);\n        } else if (typeof controls[i] === 'object' && controls[i].constructor && controls[i] instanceof $) {\n          el = controls[i].clone(true);\n        }\n\n        el.data('track', this.track).appendTo(controlsContainer);\n\n        // TODO: other control types\n        if (el.is('select')) {\n          prop = el.data('control');\n\n          el.find('option[value=' + (savedConfig[prop] || defaultConfig[prop] || 'all') + ']').attr('selected', true).end().change(function () {\n            $(this).data('track').setConfig($(this).data('control'), this.value);\n          });\n        }\n      }\n\n      this.prop('heightToggler', controlsContainer.children('.gv-height-toggle').trigger('toggleState'));\n\n      var toggler = toggle.clone(true).data('track', this.track).appendTo(this.trackControls);\n\n      toggler.trigger('click');\n      this.minLabelHeight = Math.max(this.minLabelHeight, this.trackControls.outerHeight(true) + this.prop('margin'));\n      toggler.trigger('click');\n\n    },\n    afterResize: function () {\n      if (this.trackControls) {\n        this.trackControls[this.prop('height') < this.trackControls.outerHeight(true) ? 'hide' : 'show']();\n      }\n    },\n    afterResetHeight: function () {\n      var heightToggler = this.prop('heightToggler');\n\n      if (this.prop('resizable') === true && heightToggler) {\n        heightToggler[this.prop('autoHeight') ? 'addClass' : 'removeClass']('gv-auto-height');\n        heightToggler.trigger('toggleState');\n      }\n    },\n    afterSetMVC: function () {\n      var heightToggler = this.prop('heightToggler');\n\n      if (heightToggler) {\n        heightToggler.trigger('toggleState')[this.prop('resizable') === true ? 'removeClass' : 'addClass']('gv-hide');\n      }\n    }\n  }, 'tracks');\n};"]}