{"version":3,"sources":["lib/jquery.js","lib/jquery-ui.js","lib/jquery.mousewheel.js","lib/jquery.mousehold.js","lib/jquery.tipsy.js","lib/Base.js","lib/rtree.js","lib/dalliance-lib.min.js","lib/jDataView.js","lib/jParser.js","lib/BWReader.js","lib/VCFReader.js","Genoverse.js","Track.js","Track/Controller.js","Track/Model.js","Track/View.js","Track/library/Static.js","Track/Controller/Stranded.js","Track/Model/Stranded.js","Track/library/Graph.js","Track/library/Graph/Line.js","Track/library/Graph/Bar.js","Track/Controller/Sequence.js","Track/Model/Sequence.js","Track/Model/Sequence/Fasta.js","Track/Model/Sequence/Ensembl.js","Track/View/Sequence.js","Track/View/Sequence/Variation.js","Track/Model/SequenceVariation.js","Track/Model/Gene.js","Track/Model/Gene/Ensembl.js","Track/View/Gene.js","Track/View/Gene/Ensembl.js","Track/Model/Transcript.js","Track/Model/Transcript/Ensembl.js","Track/View/Transcript.js","Track/View/Transcript/Ensembl.js","Track/Model/File.js","Track/Model/File/BAM.js","Track/Model/File/BED.js","Track/Model/File/GFF.js","Track/Model/File/VCF.js","Track/Model/File/WIG.js","Track/library/Chromosome.js","Track/library/dbSNP.js","Track/library/File.js","Track/library/File/BAM.js","Track/library/File/BED.js","Track/library/File/BIGBED.js","Track/library/File/BIGWIG.js","Track/library/File/GFF.js","Track/library/File/VCF.js","Track/library/File/WIG.js","Track/library/Gene.js","Track/library/HighlightRegion.js","Track/library/Legend.js","Track/library/Scaleline.js","Track/library/Scalebar.js","plugins/controlPanel.js","plugins/fileDrop.js","plugins/focusRegion.js","plugins/fullscreen.js","plugins/karyotype.js","plugins/resizer.js","plugins/tooltips.js","plugins/trackControls.js"],"names":["a","b","module","exports","document","Error","window","this","c","d","e","Object","getPrototypeOf","f","slice","g","concat","h","push","i","indexOf","j","k","toString","l","hasOwnProperty","m","n","call","o","p","createElement","text","head","appendChild","parentNode","removeChild","q","r","fn","init","s","t","u","v","toUpperCase","w","length","type","isWindow","prototype","jquery","constructor","toArray","get","pushStack","merge","prevObject","each","map","apply","arguments","first","eq","last","end","sort","splice","extend","isFunction","isPlainObject","Array","isArray","expando","Math","random","replace","isReady","error","noop","isNumeric","isNaN","parseFloat","isEmptyObject","globalEval","camelCase","trim","makeArray","inArray","grep","guid","proxy","now","Date","support","Symbol","iterator","split","toLowerCase","x","y","ha","z","A","B","C","D","E","pop","F","G","H","I","J","K","L","M","N","O","RegExp","P","Q","R","S","T","U","V","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","W","X","Y","Z","$","_","aa","String","fromCharCode","ba","ca","charCodeAt","da","ea","ta","disabled","dir","next","childNodes","nodeType","fa","ga","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","nodeName","getAttribute","setAttribute","sa","join","qa","querySelectorAll","removeAttribute","cacheLength","shift","ia","ja","ka","attrHandle","la","sourceIndex","nextSibling","ma","na","oa","isDisabled","pa","isXML","documentElement","setDocument","defaultView","top","addEventListener","attachEvent","attributes","className","createComment","getById","getElementsByName","filter","find","getAttributeNode","value","innerHTML","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","contains","sortDetached","unshift","attr","specified","escape","uniqueSort","detectDuplicates","sortStable","getText","textContent","firstChild","nodeValue","selectors","createPseudo","match","relative",">"," ","+","~","preFilter","lastChild","uniqueID","pseudos","setFilters","not","has","innerText","lang","target","location","hash","root","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","parent","header","input","button","even","odd","lt","gt","nth","radio","checkbox","file","password","image","submit","reset","ra","ua","wa","xa","va","ya","filters","tokenize","compile","selector","select","defaultValue","expr","unique","isXMLDoc","escapeSelector","is","parseHTML","ready","children","contents","prev","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","content","reverse","promise","done","fail","then","Callbacks","once","stopOnFalse","memory","remove","disable","lock","locked","fireWith","fire","fired","Deferred","state","always","catch","pipe","progress","notify","resolve","reject","TypeError","notifyWith","resolveWith","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","when","console","warn","name","message","stack","readyException","removeEventListener","readyWait","readyState","doScroll","uid","cache","defineProperty","configurable","set","access","hasData","JSON","parse","data","removeData","_data","_removeData","queue","dequeue","_queueHooks","stop","clearQueue","source","style","display","css","cur","cssNumber","unit","start","body","show","hide","toggle","option","thead","col","tr","td","_default","optgroup","tbody","tfoot","colgroup","caption","th","createDocumentFragment","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","off","event","global","handler","events","handle","triggered","dispatch","special","delegateType","bindType","origType","namespace","delegateCount","setup","teardown","removeEvent","fix","delegateTarget","preDispatch","handlers","isPropagationStopped","currentTarget","elem","isImmediatePropagationStopped","rnamespace","handleObj","result","preventDefault","stopPropagation","postDispatch","addProp","Event","enumerable","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","key","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","mouseenter","mouseleave","pointerenter","pointerleave","on","one","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ja","html","clone","src","_evalUrl","Ka","cleanData","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","La","Ma","Na","opener","getComputedStyle","Oa","getPropertyValue","pixelMarginRight","width","minWidth","maxWidth","Pa","cssText","marginLeft","marginRight","backgroundClip","clearCloneStyle","pixelPosition","boxSizingReliable","reliableMarginLeft","Qa","Ra","Sa","position","visibility","Ta","letterSpacing","fontWeight","Ua","Va","Xa","cssProps","Wa","Ya","max","Za","$a","_a","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","float","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","expand","Tween","prop","easing","options","propHooks","run","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","ab","bb","cb","db","eb","hidden","requestAnimationFrame","interval","tick","fb","gb","height","hb","kb","tweeners","prefilters","startTime","tweens","props","opts","specialEasing","originalProperties","originalOptions","createTween","jb","complete","timer","anim","Animation","*","tweener","unqueued","overflow","overflowX","overflowY","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","clearTimeout","checkOn","optSelected","radioValue","lb","mb","removeAttr","attrHooks","nb","ob","pb","qb","removeProp","propFix","parseInt","for","class","addClass","removeClass","toggleClass","hasClass","rb","val","valHooks","sb","isTrigger","parentWindow","simulate","triggerHandler","hover","focusin","tb","ub","vb","parseXML","DOMParser","parseFromString","wb","xb","yb","zb","Ab","param","encodeURIComponent","serialize","serializeArray","Bb","Cb","Db","Eb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","dataTypes","Ob","ajaxSettings","flatOptions","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","* text","text html","text json","text xml","context","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","statusCode","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","method","dataType","crossDomain","host","traditional","hasContent","ifModified","headers","beforeSend","success","timeout","send","Pb","dataFilter","Qb","statusText","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","wrap","unwrap","visible","offsetWidth","offsetHeight","xhr","XMLHttpRequest","Rb","0","1223","Sb","cors","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","response","script","text script","charset","scriptCharset","Tb","Ub","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","offset","setOffset","using","pageYOffset","clientTop","pageXOffset","clientLeft","offsetParent","scrollTo","Height","Width","","bind","unbind","delegate","undelegate","holdReady","parseJSON","define","amd","Vb","jQuery","Wb","noConflict","ui","version","widget","Widget","_createWidget","_proto","_childConstructors","_super","_superApply","widgetEventPrefix","widgetName","widgetFullName","bridge","charAt","_init","defaultElement","classes","create","element","uuid","eventNamespace","bindings","hoverable","focusable","classesElementLookup","_on","destroy","_getCreateOptions","_create","_setOptionDisabled","_trigger","_getCreateEventData","_destroy","_removeClass","_setOptions","_setOption","_setOptionClasses","_classes","keys","_toggleClass","enable","extra","_untrackClassesElement","_addClass","_off","_delay","_hoverable","_focusable","focusout","effect","effects","abs","scrollbarWidth","clientWidth","getScrollInfo","isDocument","scrollWidth","scrollHeight","getWithinInfo","outerWidth","outerHeight","of","within","collision","at","my","marginTop","targetWidth","targetHeight","elemWidth","elemHeight","collisionPosition","collisionWidth","collisionHeight","horizontal","vertical","important","fit","flip","flipfit","disableSelection","enableSelection","scrollParent","ie","navigator","userAgent","cancel","distance","_mouseInit","_mouseDown","started","_mouseDestroy","_mouseMoveDelegate","_mouseUpDelegate","_mouseMoved","_mouseStarted","_mouseUp","_mouseDownEvent","_mouseCapture","mouseDelayMet","_mouseDelayTimer","_mouseDistanceMet","_mouseDelayMet","_mouseStart","_mouseMove","documentMode","ignoreMissingWhich","_mouseDrag","_mouseStop","plugin","plugins","safeActiveElement","safeBlur","mouse","addClasses","axis","connectToSortable","containment","cursor","cursorAt","grid","helper","iframeFix","refreshPositions","revert","revertDuration","scope","scroll","scrollSensitivity","scrollSpeed","snap","snapMode","snapTolerance","drag","_setPositionRelative","_setHandleClassName","_removeHandleClassName","destroyOnClear","_getHandle","_blurActiveElement","_blockFrames","iframeBlocks","_unblockFrames","_createHelper","_cacheHelperProportions","ddmanager","current","_cacheMargins","cssPosition","hasFixedAncestor","positionAbs","_refreshOffsets","originalPosition","_generatePosition","originalPageX","originalPageY","_adjustOffsetFromHelper","_setContainment","_clear","dropBehaviour","prepareOffsets","dragStart","margins","_getParentOffset","_getRelativeOffset","_convertPositionTo","_uiHash","drop","dropped","dragStop","handleElement","helperProportions","right","bottom","_isRootNode","tagName","relativeContainer","round","cancelHelperRemoval","item","sortables","sortable","isOver","_storedCSS","placeholder","_helper","_intersectsWith","containerCache","_parent","currentItem","fromOutside","_revert","_cursor","_opacity","scrollParentNotHidden","overflowOffset","snapElements","items","snapping","release","snapItem","_zIndex","draggable","alsoResize","animateDuration","animateEasing","aspectRatio","autoHide","ui-resizable-se","ghost","handles","maxHeight","minHeight","resize","_num","_isNumber","_hasScroll","_aspectRatio","originalElement","_proportionallyResizeElements","resizable","elementIsWrapper","marginBottom","originalResizeStyle","_proportionallyResize","_setupHandles","_handles","resizing","_removeHandles","se","sw","ne","nw","_renderAxis","mousedown","_renderProxy","size","originalSize","sizeDiff","originalMousePosition","_propagate","_change","_updatePrevProperties","_updateVirtualBoundaries","_updateRatio","_respectSize","_updateCache","_applyChanges","prevPosition","prevSize","_vBoundaries","_getPaddingPlusBorderDimensions","outerDimensions","elementOffset","containerElement","containerOffset","containerPosition","parentData","containerSize","innerHeight","innerWidth","uiBackCompat","connectWith","dropOnEmpty","forcePlaceholderSize","forceHelperSize","tolerance","activate","beforeStop","change","deactivate","out","over","receive","update","_isOverAxis","_isFloating","refresh","instance","reverting","_refreshItems","_removeCurrentsFromItems","currentContainer","domPosition","_createPlaceholder","storedCursor","storedStylesheet","_storedOpacity","_storedZIndex","_preserveHelperProportions","containers","dragging","lastPositionAbs","_intersectsWithPointer","direction","_intersectsWithSides","_rearrange","_contactContainers","_noFinalSort","_getItemsAsjQuery","connected","attribute","expression","forcePointerForContainers","floating","_getDragVerticalDirection","_getDragHorizontalDirection","_connectWith","toleranceElement","custom","refreshContainers","_createTrPlaceholder","counter","sender","types","fixHooks","mouseHooks","orgEvent","args","delta","deltaX","deltaY","wheelDelta","undefined","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","mousewheel","onmousewheel","unmousewheel","mousehold","fireStep","ctr","setInterval","clearMousehold","clearInterval","mouseout","mouseup","maybeCall","thing","ctx","Tipsy","$element","fixTitle","title","getTitle","$tip","tip","tp","actualWidth","actualHeight","gravity","fade","$e","fallback","validate","toggleEnabled","tipsy","ele","elementOptions","defaults","live","binder","eventIn","eventOut","hoverState","delayIn","delayOut","revalidate","pointee","isElementInDOM","metadata","autoNS","autoWE","autoBounds","prefer","ns","ew","boundTop","boundLeft","$this","definition","Base","_instance","_static","_prototyping","proto","base","klass","_constructing","ancestor","forEach","implement","valueOf","previous","toSource","object","block","self","RTree","require","1","_dereq_","rectangle","bbox","ar","obj","leaf","len","temp","min","geoJSON","point","insertSubtree","geometry","coordinates","multiPointLineString","multiLineStringPolygon","multiPolygon","makeRec","geometryCollection","geos","geometries","prelim","features","feature","that","x1","y1","x2","y2","search","./rectangle","2","geojson","Rectangle","./geojson","./rtree","3","overlap","nx","ny","ax","ay","ax2","ay2","overlapRectangle","containsRectangle","expandRectangle","axw","bxw","ayh","byh","makeMBR","nodes","rect","squarifiedRatio","fill","lperi","larea","4","floor","rootTree","flatten","tree","todo","removeSubtree","ltree","hitStack","countStack","retArray","retObj","currentDepth","searchSubtree","linearSplit","pickLinear","pickNext","highAreaDelta","highAreaNode","lowestGrowthGroup","areaA","areaB","newAreaA","changeNewAreaA","newAreaB","changeNewAreaB","tempNode","t1","t2","lowestHighX","highestLowX","lowestHighY","highestLowY","returnNode","returnArray","node","bc","pbc","treeStack","bestChoiceArea","bestChoiceIndex","bestChoiceStack","oldLRatio","nh","lratio","chooseLeafSubtree","ai","getTree","setTree","newTree","where","moreTree","deleted","numberDeleted","removeArea","insert","toJSON","printing","stringify","fromJSON","rt","was","hufts","Int32Array","Uint8Array","checkfn","mode","table","blens","codes","check","write","read","bitb","bitk","inftree","subarray","BYTES_PER_ELEMENT","buffer","byteOffset","byteLength","inflateInit","next_in","next_in_index","avail_in","next_out","next_out_index","avail_out","inflate","msg","minv","maxv","blob","ArrayBuffer","Float32Array","istate","inflateEnd","inflateSync","inflateSetDictionary","inflateReset","total_in","total_out","nowrap","blocks","free","wbits","marker","need","adler","proc","_adler","adler32","set_dictionary","inflateSyncPoint","sync_point","inflate_flush","inflate_trees_bits","inflate_trees_dynamic","lbits","dbits","ltree_index","dtree","dtree_index","inflate_fast","tree_index","lit","dist","huft_build","hn","initWorkArea","webkitSlice","salted","fetch","FileReader","onloadend","readAsBinaryString","FileReaderSync","readAsArrayBuffer","fetchAsText","getURL","credentials","withCredentials","log","salt","resolver","attempt","truncatedLength","mozResponseArrayBuffer","blocksForRange","indices","chrToIndex","indexChunks","chunks","bai","readBamRecords","segment","indexToChr","flag","mq","light","seqLength","nextSegment","nextPos","readName","cigar","seq","quals","dallianceLib","URLFetchable","BlobFetchable","makeBam","substring","minBlockIndex","inflateBuffer","jDataView","_littleEndian","wrapBuffer","_isArrayBuffer","_isPixelData","PixelData","CanvasPixelArray","_isDataView","DataView","_isNodeBuffer","_offset","_bitOffset","_view","_checkBounds","_engineAction","_dataViewAction","_arrayBufferAction","_arrayAction","pow","lo","hi","NodeBuffer","TextEncoder","TextDecoder","getContext","createImageData","Int8","Int16","Int32","Uint8","Uint16","Uint32","Float32","Float64","from","Uint64","Number","fromNumber","Int64","compatibility","RangeError","_action","getBytes","_setBytes","_getBytes","setBytes","getString","decode","decodeURIComponent","setString","encode","unescape","getChar","setChar","tell","seek","skip","alignBy","_getFloat64","_getFloat32","_get64","getUint32","getInt64","getUint64","_getInt32","_getUint32","_getInt16","_getUint16","_getInt8","_getUint8","_getBitRangeData","bytes","wideValue","getSigned","getUnsigned","_setBinaryFloat","LN2","_setFloat32","_setFloat64","_set64","setUint32","setInt64","setUint64","_setUint32","_setUint16","_setUint8","setUnsigned","_setInt32","_setInt16","_setInt8","setSigned","jParser","structure","callee","_bitShift","ClonedObject","inherit","toInt","Function","all","uint8","getUint8","uint16","getUint16","uint32","uint64","int8","getInt8","int16","getInt16","int32","getInt32","float32","getFloat32","float64","getFloat64","string","array","results","old_position","err","if","predicate","fieldValue","bitSize","byteShift","output","BWReader","callback","BIG_WIG_MAGIC","BIG_WIG_MAGIC_BE","BIG_BED_MAGIC","BIG_BED_MAGIC_BE","CIRTREE_MAGIC","IDXTREE_MAGIC","BIG_WIG_TYPE_GRAPH","BIG_WIG_TYPE_VSTEP","BIG_WIG_TYPE_FSTEP","M1","M2","M3","M4","bbi","fetchedData","getData","fetched","readChromTree","unzoomedDataOffset","chromTreeOffset","Uint16Array","Uint32Array","bpTree","itemsPerBlock","keySize","valueSize","itemCount","read64Bit","chroms","lengths","nodeOffset","chrom","idx","readChromTreeLeaf","unzoomedIndexOffset","magic","Rheader","blockSize","nItems","chrIdxStart","baseStart","chrIdxEnd","baseEnd","endFileOffset","nItemsPerSlot","rootOffset","getValues","vals","chromid","query","fetchBlocks","b0","b1","getBlocks","totalSize","blockData","ioffset","bi","uncompressBufSize","parser","WiggleParser","BEDParser","outstanding","fetchRTreeKids","level","maxNodeSize","treedata","traverseRTreeKids","isLeaf","dataOffset","child","getRTreeNode","overlaps","startChrom","startBase","endChrom","endBase","findOverlaps","traverseRTree","score","arr","Int16Array","chromId","chr","blockStart","itemStep","itemSpan","blockType","bbRecord","ch","rest","reduction","indexOffset","numZoomLevels","fieldCount","definedFieldCount","asOffset","totalSummaryOffset","extHeaderOffset","compressed","summary","extHeader","zoomHeaders","reductionLevel","field_re","headerMatch","as","declType","comment","fields","schema","tabi_fmt","string0","n_ref","format","col_seq","col_beg","col_end","meta","l_nm","names","chunk","cnk_beg","cnk_end","bin","n_chunk","chunkseq","n_bin","binseq","n_intv","intervseq","tabix","indexseq","bgzf_hd_fmt","id1","id2","cm","flg","mtime","xfl","os","xlen","subheader","si1","si2","slen","bsize","bgzfHd","subhead","VCFReader","vcf","tbi","vcf_data","tbi_data","readTabix","bins2hash","inflateRegion","tabix_buffer","bhash","getRecords","ref","beg","records","getChunks","vcfThis","loop","record","ebsz","inner_end","buffer2String","inner_start","rec","cnks","reg2bins","bin2Ranges","reduce","ranges","remove_duplicates","cbfn","nextBlockOffset","appendBuffers","inflateBlock","blockOffset","getBGZFHD","hdobj","inflated_block","hdSize","buf","bufferVec","tmp","resultBuffer","resultBB","objectsArray","usedObjects","so","binid","cnk","cnkseq","list","Genoverse","urlParamTemplate","longestLabel","defaultLength","defaultScrollDelta","tracks","highlights","dragAction","wheelAction","isStatic","saveable","saveKey","storageType","autoHideMessages","trackAutoHeight","hideEmptyTracks","genome","useHash","config","browser","supported","die","container","loadGenome","loadPlugins","wrapFunctions","genomeName","origin","Genomes","loadPluginsTask","loadedPlugins","Plugins","initializePlugin","requires","deferred","js","getCSS","noCSS","pluginsLoaded","addDomElements","addUserEventHandlers","tracksById","legends","history","pushState","textWidth","measureText","labelWidth","labelContainer","paramRegex","urlCoords","getURLCoords","coords","chromosomeSize","canChangeChr","loadConfig","addTracks","setRange","addHighlights","defaultTracks","getItem","track","tracksByNamespace","getAllTrackTypes","savedConfig","setConfig","conf","_fromStorage","trackIds","saveConfig","Track","Legend","HighlightRegion","autoHeight","initialHeight","defaultHeight","setItem","resetConfig","unremovableHighlights","removeHighlights","removeItem","removeTracks","menus","updateTrackOrder","wrapper","selectorControls","zoomInHighlight","zoomOutHighlight","documentEvents","hideMessages","noWheelZoom","startDragScroll","move","stopDragScroll","mousewheelZoom","dblclick","getSelectorPosition","moveTo","cancelSelect","addHighlight","mousemove","keydown","keyup","wheelTimeout","popState","onTracks","mvc","func","_interface","scale","setWidth","controlPanel","superContainer","zoomDeltaTimeout","zoomTimeout","moveSelector","scrolling","dragOffset","scrollDelta","updateURL","checkTrackHeights","startDragSelect","selectorStalled","selectorStart","stopDragSelect","keepDragging","dragSelect","setDragAction","action","keepSelect","toggleSelect","setWheelAction","closeMenus","minLeft","maxLeft","keepLength","center","setScale","scaledStart","labelBuffer","ceil","resetTrackHeights","zoomIn","zoomOut","addTrack","getTrackNamespace","sortTracks","removeTrack","destructor","sorted","labels","diff","getQueryString","getChromosomeSize","el","failed","menuTemplate","makeMenu","makeFeatureMenu","menu","contentEl","menuLabel","label","loading","getMenu","isDeferred","linkData","columns","colspan","highlight","menuEl","controller","populateMenu","properties","color","fnString","eventMap","makeEventMap","makeFnString","compare","functionWrap","functions","debug","isBrowser","mainObj","Controller","Model","rtn","currentConfig","_currentConfig","funcs","time","timeEnd","trackTypes","subtype","namespaces","unsortable","fixedOrder","invert","legend","hideEmpty","stranded","Stranded","model","models","views","setInterface","setDefaults","setEvents","setLengthMap","setMVC","makeFirstImage","addChildTracks","addLegend","configSettings","defaultConfig","controls","defaultAutoHeight","setDefaultConfig","_setCurrentConfig","_defaults","settings","getSettingsForLength","controllerSettings","trackSettings","changed","setChrProps","threshold","newMVC","deepCopy","prevLengthMap","mvSettings","prevType","mv","lengthMap","featureHeight","View","setHeight","forceShow","resetHeight","resizer","_config","configChanged","featureFilters","getConfig","featureFilter","parentTrack","childTracks","setLabelHeight","legendType","shared","makeLegendTrack","legendTrack","changeChr","updateName","setName","objs","scrollBuffer","Infinity","clickTolerance","messages","deferreds","imgRange","scrollRange","resetImages","scrollContainer","resetImageRanges","scrollStart","labelName","minLabelHeight","imgContainer","messageContainer","collapsed","code","checkHeight","cookie","getClickedFeatures","bounds","sortFeatures","showMessage","additionalText","fullVisibleHeight","hideMessage","showError","thresholdMessage","visibleFeatureHeight","autoResize","featurePositions","labelTop","labelPositions","toggleExpander","arg","imgContainers","featureMargin","expander","enforceMinHeight","setLabelBuffer","formatLabel","setScaleSettings","makeImage","cls","params","labelHeight","tooLarge","div","bgImage","background","checkDataRange","findFeatures","render","renderBackground","images","makeImages","img","positionFeatures","scaleFeatures","featureCanvas","labelCanvas","featureContext","labelContext","font","textAlign","textBaseline","draw","toDataURL","canvas","drawBackground","Location","allData","dataBuffer","urlParams","dataRequestLimit","featuresById","dataRangesByChr","featuresByChr","dataLoading","dataBufferStart","_url","dataRanges","parseURL","assembly","receiveData","bins","request","setDataRange","parseData","insertFeature","updateData","hashCode","subFeatures","fake","fontHeight","fontFamily","fontColor","minScaledWidth","widthCorrection","repeatLabels","bump","alwaysReposition","depth","subFeatureJoinStyle","subFeatureJoinLineWidth","scaleSettings","labelUnits","positionFeature","positioned","bumpFeature","strand","clash","labelPosition","drawFeature","legendColor","setFeatureColor","drawSubFeatures","truncateForDrawing","fillStyle","fillRect","clear","clearRect","borderColor","strokeStyle","strokeRect","drawLabel","decorations","decorateFeature","joinColor","drawSubFeatureJoin","original","untruncated","currentY","spacing","labelColor","setLabelColor","fillText","shadeColor","percent","truncateSubFeatureJoinForDrawing","lineWidth","beginPath","lineTo","x3","y3","quadraticCurveTo","stroke","xMid","yScale","power","Static","stringified","_makeImage","featureStrand","makeReverseImage","makeForwardImage","reverseTrack","orderReverse","forwardTrack","_deferredReverseTrackImages","_makeReverseTrackImage","removing","otherTrack","Graph","setYRange","yMinMaxFromFeatures","afterSetName","getYScale","prevHeight","prevRange","maxDP","prevRangeSize","rangeChange","toFixed","visibleFeatures","range","minY","maxY","typeWrapper","featureDataSets","datasets","setNames","sets","dataset","yAxisLabels","yRange","showZeroY","globalAlpha","axesSettings","axisColor","axisLabelColor","scaleLineColor","rescaleableY","rescaleable","hadController","yAxisPlaceholder","yAxisCanvas","guidelinesCanvas","offsetContainer","drawAxes","afterSetMVC","wasDisabled","axisContext","linesContext","axisWidth","Line","xRange","clickedCoords","values","avg","Average","Min","Max","Value","zeroY","setCoords","coordPositions","binnedFeatures","lastBinSize","binStart","baseline","binSize","closePath","showPopups","Bar","yZero","_features","featuresByDataset","setFeatures","10000","50000","Sequence","makeSeqFeatureMenu","featureMenus","sequence","chunkSize","chunksByChr","substr","Fasta","startByte","lineLength","getStartByte","endByte","Range","startByteRequest","Ensembl","colors","default","labelColors","lowerCase","labelYOffset","widestLabel","drawSequence","bp","drawLabels","SequenceVariation","showLegend","alt_allele","reference","ref_allele","drawing","snv","highlightSNVs","outlineSNVs","positionX","positionY","highlightColor","setHighlightColor","seqModel","getSeqModel","seqData","Gene","feature_type","external_name","transcripts","logic_name","sense_intronic","sense_overlapping","processed_transcript","nonsense_mediated_decay","non_stop_decay","antisense","retained_intron","tec","non_coding","ambiguous_orf","disrupted_domain","3prime_overlapping_ncrna","biotype","Transcript","geneIds","seenGenes","ids","Parent","cdsStart","cdsEnd","exons","cds","exon","utr","utrHeight","File","largeFile","indexFile","dataFile","reader","readAsText","BAM","bamFile","baiFile","bam","makeBamError","fetchBamError","BED","subfeatures","subfeature","blockSizes","blockStarts","thinFeature","thinFeature1","thinFeature2","thickFeature","lines","thinHeight","thickHeight","filterNumber","originalFeature","thickStart","thickEnd","drawThick","scoreColor","blockCount","GFF","seqId","GTF","VCF","vcfFile","tbiFile","makeVCF","cachedVCF","maxQual","alleles","allele","WIG","span","line","Chromosome","acen","gneg","gpos","gpos100","gpos25","gpos33","gpos50","gpos66","gpos75","gvar","stalk","bands","menuTitle","drawnAcen","chrSize","bezierCurveTo","Position","dbSNP","info","colorMap","transcript_ablation","splice_acceptor_variant","splice_donor_variant","stop_gained","frameshift_variant","stop_lost","start_lost","transcript_amplification","inframe_insertion","inframe_deletion","missense_variant","protein_altering_variant","splice_region_variant","incomplete_terminal_codon_variant","stop_retained_variant","synonymous_variant","coding_sequence_variant","mature_miRNA_variant","5_prime_UTR_variant","3_prime_UTR_variant","non_coding_transcript_exon_variant","intron_variant","NMD_transcript_variant","non_coding_transcript_variant","upstream_gene_variant","downstream_gene_variant","TFBS_ablation","TFBS_amplification","TF_binding_site_variant","regulatory_region_ablation","regulatory_region_amplification","feature_elongation","regulatory_region_variant","feature_truncation","intergenic_variant","consequence_type","Consequence","Alleles","populationGenotypes","population_genotypes","population","frequencies","frequency","count","Genotype","genotype","5000","indexExt","BIGBED","bigbedFile","bwReader","BB","BIGWIG","bigwigFile","BW","CHROM","POS","REF","ALT","QUAL","FILTER","INFO","highlightRef","1000","heat","red","green","Source","Biotype","2000000","100000","colorIndex","removable","seen","setTracks","textColor","xPos","yPos","xScale","xOffest","xOffset","lockToTrack","afterAddTracks afterRemoveTracks","afterRemoveTracks","afterUpdateTrackOrder","updateOrder","afterPositionFeatures","afterResize","userResize","afterCheckHeight","Scaleline","scaleline","drawnScale","text2","width1","width2","Scalebar","minPixPerMajor","majorGuideLine","minorGuideLine","divisions","divisor","majorUnit","fromDigit","toDigit","major","minorUnit","lastLabel","guideLines","icon","beforeInit","tracksLibrary","panel","control","buttonSet","afterInit","tracksButton","Currently enabled tracks:","<div class=\"gv-current-tracks\"></div>","str","tags","getTrackTags","availableTracks","currentTracks","reload","listTracks","afterAddDomElements","fileDrop","dataTransfer","fileDropDiv","totalDropOverlay","dragleave","files","parts","gz","ext","focusRegion","fullscreen","eventName","elemName","requestName","cancelName","onmsfullscreenchange","mozRequestFullScreen","webkitRequestFullscreen","onfullscreenchange","fullscreenVars","enterEvent","preFullscreenWidth","exitEvent","eventListener","karyotype","createKaryotype","chromosome","hoverFeature","hideTooltip","viewPoint","updatePosition","afterAddTracks","updateLocation","karyotypeLabel","recreateKaryotype","afterSetRange","afterSetWidth","afterMoveTo","tooltips","toggleTooltips","updateTooltips","trackControls","defaultControls","toggleState","controlsContainer","toggler","afterResetHeight","heightToggler"],"mappings":"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","file":"genoverse.min.js","sourcesContent":["/*! jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */\n!function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.2.1\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=Array.isArray(d)))?(e?(e=!1,f=c&&Array.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\"jQuery\"+(q+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===r.type(a)},isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\"number\"===b||\"string\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\"[object Object]\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\"constructor\")&&b.constructor,\"function\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?j[k.call(a)]||\"object\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\"ms-\").replace(u,v)},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(s,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\"string\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\"string\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\"function\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){j[\"[object \"+b+\"]\"]=b.toLowerCase()});function w(a){var b=!!a&&\"length\"in a&&a.length,c=r.type(a);return\"function\"!==c&&!r.isWindow(a)&&(\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",K=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",L=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",M=\"\\\\[\"+K+\"*(\"+L+\")(?:\"+K+\"*([*^$|!~]?=)\"+K+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+L+\"))|)\"+K+\"*\\\\]\",N=\":(\"+L+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+M+\")*)|.*)\\\\)|)\",O=new RegExp(K+\"+\",\"g\"),P=new RegExp(\"^\"+K+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+K+\"+$\",\"g\"),Q=new RegExp(\"^\"+K+\"*,\"+K+\"*\"),R=new RegExp(\"^\"+K+\"*([>+~]|\"+K+\")\"+K+\"*\"),S=new RegExp(\"=\"+K+\"*([^\\\\]'\\\"]*?)\"+K+\"*\\\\]\",\"g\"),T=new RegExp(N),U=new RegExp(\"^\"+L+\"$\"),V={ID:new RegExp(\"^#(\"+L+\")\"),CLASS:new RegExp(\"^\\\\.(\"+L+\")\"),TAG:new RegExp(\"^(\"+L+\"|[*])\"),ATTR:new RegExp(\"^\"+M),PSEUDO:new RegExp(\"^\"+N),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+K+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+K+\"*(?:([+-]|)\"+K+\"*(\\\\d+)|))\"+K+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+J+\")$\",\"i\"),needsContext:new RegExp(\"^\"+K+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+K+\"*((?:-\\\\d)?\\\\d*)\"+K+\"*\\\\)|)(?=[^-]|$)\",\"i\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\d$/i,Y=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,$=/[+~]/,_=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+K+\"?|(\"+K+\")|.)\",\"ig\"),aa=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ca=function(a,b){return b?\"\\0\"===a?\"\\ufffd\":a.slice(0,-1)+\"\\\\\"+a.charCodeAt(a.length-1).toString(16)+\" \":\"\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\"form\"in a||\"label\"in a)},{dir:\"parentNode\",next:\"legend\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(ba,ca):b.setAttribute(\"id\",k=u),o=g(a),h=o.length;while(h--)o[h]=\"#\"+k+\" \"+sa(o[h]);r=o.join(\",\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(P,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"fieldset\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return function(b){return\"form\"in b?b.parentNode&&b.disabled===!1?\"label\"in b?\"label\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\"label\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\"HTML\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\"id\")===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\"undefined\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+K+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+K+\"*(?:value|\"+J+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){a.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+K+\"*[*^$|!~]?=\"),2!==a.querySelectorAll(\":enabled\").length&&q.push(\":enabled\",\":disabled\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\":disabled\").length&&q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"*\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",N)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\"\").replace(ba,ca)},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\"\").replace(_,aa),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+K+\")\"+a+\"(\"+K+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:!b||(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(O,\" \")+\" \").indexOf(c)>-1:\"|=\"===b&&(e===c||e.slice(0,c.length+1)===c+\"-\"))}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\"\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\"parentNode\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(P,\"$1\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\"function\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\"ID\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"fieldset\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){if(!c)return a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){if(!c&&\"input\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\":\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext;function B(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()}var C=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i,D=/^.[^:#\\[\\.,]*$/;function E(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\"string\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):D.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(E(this,a||[],!1))},not:function(a){return this.pushStack(E(this,a||[],!0))},is:function(a){return!!E(this,\"string\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var F,G=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,H=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||F,\"string\"==typeof a){if(e=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:G.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),C.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};H.prototype=r.fn,F=r(d);var I=/^(?:parents|prev(?:Until|All))/,J={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\"string\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function K(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\"parentNode\")},parentsUntil:function(a,b,c){return y(a,\"parentNode\",c)},next:function(a){return K(a,\"nextSibling\")},prev:function(a){return K(a,\"previousSibling\")},nextAll:function(a){return y(a,\"nextSibling\")},prevAll:function(a){return y(a,\"previousSibling\")},nextUntil:function(a,b,c){return y(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return y(a,\"previousSibling\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return B(a,\"iframe\")?a.contentDocument:(B(a,\"template\")&&(a=a.content||a),r.merge([],a.childNodes))}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(J[a]||r.uniqueSort(e),I.test(a)&&e.reverse()),this.pushStack(e)}});var L=/[^\\x20\\t\\r\\n\\f]+/g;function M(a){var b={};return r.each(a.match(L)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?M(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=e||a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function N(a){return a}function O(a){throw a}function P(a,b,c,d){var e;try{a&&r.isFunction(e=a.promise)?e.call(a).done(b).fail(c):a&&r.isFunction(e=a.then)?e.call(a,b,c):b.apply(void 0,[a].slice(d))}catch(a){c.apply(void 0,[a])}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\"Thenable self-resolution\");j=a&&(\"object\"==typeof a||\"function\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,N,e),g(f,c,O,e)):(f++,j.call(a,g(f,c,N,e),g(f,c,O,e),g(f,c,N,c.notifyWith))):(d!==N&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==O&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:N,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:N)),c[2][3].add(g(0,a,r.isFunction(d)?d:O))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(P(a,g.done(h(c)).resolve,g.reject,!b),\"pending\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)P(e[c],h(c),g.reject);return g.promise()}});var Q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&Q.test(b.name)&&a.console.warn(\"jQuery.Deferred exception: \"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var R=r.Deferred();r.fn.ready=function(a){return R.then(a)[\"catch\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||R.resolveWith(d,[r]))}}),r.ready.then=R.then;function S(){d.removeEventListener(\"DOMContentLoaded\",S),\na.removeEventListener(\"load\",S),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",S),a.addEventListener(\"load\",S));var T=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)T(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},U=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function V(){this.expando=r.expando+V.uid++}V.uid=1,V.prototype={cache:function(a){var b=a[this.expando];return b||(b={},U(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\"string\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\"string\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){Array.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(L)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var W=new V,X=new V,Y=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Z=/[A-Z]/g;function $(a){return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:a===+a+\"\"?+a:Y.test(a)?JSON.parse(a):a)}function _(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(Z,\"-$&\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=$(c)}catch(e){}X.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return X.hasData(a)||W.hasData(a)},data:function(a,b,c){return X.access(a,b,c)},removeData:function(a,b){X.remove(a,b)},_data:function(a,b,c){return W.access(a,b,c)},_removeData:function(a,b){W.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=X.get(f),1===f.nodeType&&!W.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=r.camelCase(d.slice(5)),_(f,d,e[d])));W.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){X.set(this,a)}):T(this,function(b){var c;if(f&&void 0===b){if(c=X.get(f,a),void 0!==c)return c;if(c=_(f,a),void 0!==c)return c}else this.each(function(){X.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){X.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=W.get(a,b),c&&(!d||Array.isArray(c)?d=W.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return W.get(a,c)||W.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){W.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=W.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var aa=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,ba=new RegExp(\"^(?:([+-])=|)(\"+aa+\")([a-z%]*)$\",\"i\"),ca=[\"Top\",\"Right\",\"Bottom\",\"Left\"],da=function(a,b){return a=b||a,\"none\"===a.style.display||\"\"===a.style.display&&r.contains(a.ownerDocument,a)&&\"none\"===r.css(a,\"display\")},ea=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function fa(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\"\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\"\":\"px\"),k=(r.cssNumber[b]||\"px\"!==j&&+i)&&ba.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var ga={};function ha(a){var b,c=a.ownerDocument,d=a.nodeName,e=ga[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\"display\"),b.parentNode.removeChild(b),\"none\"===e&&(e=\"block\"),ga[d]=e,e)}function ia(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\"none\"===c&&(e[f]=W.get(d,\"display\")||null,e[f]||(d.style.display=\"\")),\"\"===d.style.display&&da(d)&&(e[f]=ha(d))):\"none\"!==c&&(e[f]=\"none\",W.set(d,\"display\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ia(this,!0)},hide:function(){return ia(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){da(this)?r(this).show():r(this).hide()})}});var ja=/^(?:checkbox|radio)$/i,ka=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i,la=/^$|\\/(?:java|ecma)script/i,ma={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ma.optgroup=ma.option,ma.tbody=ma.tfoot=ma.colgroup=ma.caption=ma.thead,ma.th=ma.td;function na(a,b){var c;return c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[],void 0===b||b&&B(a,b)?r.merge([a],c):c}function oa(a,b){for(var c=0,d=a.length;c<d;c++)W.set(a[c],\"globalEval\",!b||W.get(b[c],\"globalEval\"))}var pa=/<|&#?\\w+;/;function qa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\"object\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(pa.test(f)){g=g||l.appendChild(b.createElement(\"div\")),h=(ka.exec(f)||[\"\",\"\"])[1].toLowerCase(),i=ma[h]||ma._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\"\"}else m.push(b.createTextNode(f));l.textContent=\"\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=na(l.appendChild(f),\"script\"),j&&oa(g),c){k=0;while(f=g[k++])la.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var ra=d.documentElement,sa=/^key/,ta=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ua=/^([^.]*)(?:\\.(.+)|)/;function va(){return!0}function wa(){return!1}function xa(){try{return d.activeElement}catch(a){}}function ya(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)ya(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=wa;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(ra,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\"undefined\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(L)||[\"\"],j=b.length;while(j--)h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\".\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.hasData(a)&&W.get(a);if(q&&(i=q.events)){b=(b||\"\").match(L)||[\"\"],j=b.length;while(j--)if(h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+o.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&W.remove(a,\"handle events\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(W.get(this,\"events\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\"click\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\"click\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\" \",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==xa()&&this.focus)return this.focus(),!1},delegateType:\"focusin\"},blur:{trigger:function(){if(this===xa()&&this.blur)return this.blur(),!1},delegateType:\"focusout\"},click:{trigger:function(){if(\"checkbox\"===this.type&&this.click&&B(this,\"input\"))return this.click(),!1},_default:function(a){return B(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?va:wa,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:wa,isPropagationStopped:wa,isImmediatePropagationStopped:wa,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=va,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=va,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=va,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&sa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&ta.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return ya(this,a,b,c,d)},one:function(a,b,c,d){return ya(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=wa),this.each(function(){r.event.remove(this,a,c,b)})}});var za=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,Aa=/<script|<style|<link/i,Ba=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ca=/^true\\/(.*)/,Da=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Ea(a,b){return B(a,\"table\")&&B(11!==b.nodeType?b:b.firstChild,\"tr\")?r(\">tbody\",a)[0]||a:a}function Fa(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function Ga(a){var b=Ca.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function Ha(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(W.hasData(a)&&(f=W.access(a),g=W.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}X.hasData(a)&&(h=X.access(a),i=r.extend({},h),X.set(b,i))}}function Ia(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&ja.test(a.type)?b.checked=a.checked:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}function Ja(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\"string\"==typeof q&&!o.checkClone&&Ba.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ja(f,b,c,d)});if(m&&(e=qa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(na(e,\"script\"),Fa),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,na(j,\"script\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Ga),l=0;l<i;l++)j=h[l],la.test(j.type||\"\")&&!W.access(j,\"globalEval\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Da,\"\"),k))}return a}function Ka(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(na(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&oa(na(d,\"script\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(za,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=na(h),f=na(a),d=0,e=f.length;d<e;d++)Ia(f[d],g[d]);if(b)if(c)for(f=f||na(a),g=g||na(h),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);else Ha(a,h);return g=na(h,\"script\"),g.length>0&&oa(g,!i&&na(a,\"script\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(U(c)){if(b=c[W.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[W.expando]=void 0}c[X.expando]&&(c[X.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ka(this,a,!0)},remove:function(a){return Ka(this,a)},text:function(a){return T(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.appendChild(a)}})},prepend:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(na(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return T(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!Aa.test(a)&&!ma[(ka.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(na(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ja(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(na(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var La=/^margin/,Ma=new RegExp(\"^(\"+aa+\")(?!px)[a-z%]+$\",\"i\"),Na=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",i.innerHTML=\"\",ra.appendChild(h);var b=a.getComputedStyle(i);c=\"1%\"!==b.top,g=\"2px\"===b.marginLeft,e=\"4px\"===b.width,i.style.marginRight=\"50%\",f=\"4px\"===b.marginRight,ra.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\"div\"),i=d.createElement(\"div\");i.style&&(i.style.backgroundClip=\"content-box\",i.cloneNode(!0).style.backgroundClip=\"\",o.clearCloneStyle=\"content-box\"===i.style.backgroundClip,h.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Oa(a,b,c){var d,e,f,g,h=a.style;return c=c||Na(a),c&&(g=c.getPropertyValue(b)||c[b],\"\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&Ma.test(g)&&La.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function Pa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Qa=/^(none|table(?!-c[ea]).+)/,Ra=/^--/,Sa={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ta={letterSpacing:\"0\",fontWeight:\"400\"},Ua=[\"Webkit\",\"Moz\",\"ms\"],Va=d.createElement(\"div\").style;function Wa(a){if(a in Va)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ua.length;while(c--)if(a=Ua[c]+b,a in Va)return a}function Xa(a){var b=r.cssProps[a];return b||(b=r.cssProps[a]=Wa(a)||a),b}function Ya(a,b,c){var d=ba.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\"px\"):b}function Za(a,b,c,d,e){var f,g=0;for(f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0;f<4;f+=2)\"margin\"===c&&(g+=r.css(a,c+ca[f],!0,e)),d?(\"content\"===c&&(g-=r.css(a,\"padding\"+ca[f],!0,e)),\"margin\"!==c&&(g-=r.css(a,\"border\"+ca[f]+\"Width\",!0,e))):(g+=r.css(a,\"padding\"+ca[f],!0,e),\"padding\"!==c&&(g+=r.css(a,\"border\"+ca[f]+\"Width\",!0,e)));return g}function $a(a,b,c){var d,e=Na(a),f=Oa(a,b,e),g=\"border-box\"===r.css(a,\"boxSizing\",!1,e);return Ma.test(f)?f:(d=g&&(o.boxSizingReliable()||f===a.style[b]),\"auto\"===f&&(f=a[\"offset\"+b[0].toUpperCase()+b.slice(1)]),f=parseFloat(f)||0,f+Za(a,b,c||(g?\"border\":\"content\"),d,e)+\"px\")}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Oa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=Ra.test(b),j=a.style;return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:j[b]:(f=typeof c,\"string\"===f&&(e=ba.exec(c))&&e[1]&&(c=fa(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\"\":\"px\")),o.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(j[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i?j.setProperty(b,c):j[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b),i=Ra.test(b);return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Oa(a,b,d)),\"normal\"===e&&b in Ta&&(e=Ta[b]),\"\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\"height\",\"width\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Qa.test(r.css(a,\"display\"))||a.getClientRects().length&&a.getBoundingClientRect().width?$a(a,b,d):ea(a,Sa,function(){return $a(a,b,d)})},set:function(a,c,d){var e,f=d&&Na(a),g=d&&Za(a,b,d,\"border-box\"===r.css(a,\"boxSizing\",!1,f),f);return g&&(e=ba.exec(c))&&\"px\"!==(e[3]||\"px\")&&(a.style[b]=c,c=r.css(a,b)),Ya(a,c,g)}}}),r.cssHooks.marginLeft=Pa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Oa(a,\"marginLeft\"))||a.getBoundingClientRect().left-ea(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\"px\"}),r.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];d<4;d++)e[a+ca[d]+b]=f[d]||f[d-2]||f[0];return e}},La.test(a)||(r.cssHooks[a+b].set=Ya)}),r.fn.extend({css:function(a,b){return T(this,function(a,b,c){var d,e,f={},g=0;if(Array.isArray(b)){for(d=Na(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function _a(a,b,c,d,e){return new _a.prototype.init(a,b,c,d,e)}r.Tween=_a,_a.prototype={constructor:_a,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\"\":\"px\")},cur:function(){var a=_a.propHooks[this.prop];return a&&a.get?a.get(this):_a.propHooks._default.get(this)},run:function(a){var b,c=_a.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):_a.propHooks._default.set(this),this}},_a.prototype.init.prototype=_a.prototype,_a.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},_a.propHooks.scrollTop=_a.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},r.fx=_a.prototype.init,r.fx.step={};var ab,bb,cb=/^(?:toggle|show|hide)$/,db=/queueHooks$/;function eb(){bb&&(d.hidden===!1&&a.requestAnimationFrame?a.requestAnimationFrame(eb):a.setTimeout(eb,r.fx.interval),r.fx.tick())}function fb(){return a.setTimeout(function(){ab=void 0}),ab=r.now()}function gb(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ca[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function hb(a,b,c){for(var d,e=(kb.tweeners[b]||[]).concat(kb.tweeners[\"*\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,k,l=\"width\"in b||\"height\"in b,m=this,n={},o=a.style,p=a.nodeType&&da(a),q=W.get(a,\"fxshow\");c.queue||(g=r._queueHooks(a,\"fx\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\"fx\").length||g.empty.fire()})}));for(d in b)if(e=b[d],cb.test(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=W.get(a,\"display\")),k=r.css(a,\"display\"),\"none\"===k&&(j?k=j:(ia([a],!0),j=a.style.display||j,k=r.css(a,\"display\"),ia([a]))),(\"inline\"===k||\"inline-block\"===k&&null!=j)&&\"none\"===r.css(a,\"float\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\"none\"===k?\"\":k)),o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\"hidden\"in q&&(p=q.hidden):q=W.access(a,\"fxshow\",{display:j}),f&&(q.hidden=!p),p&&ia([a],!0),m.done(function(){p||ia([a]),W.remove(a,\"fxshow\");for(d in n)r.style(a,d,n[d])})),i=hb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],Array.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=kb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=ab||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(i||h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:ab||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);f<g;f++)if(d=kb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,hb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j}r.Animation=r.extend(kb,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return fa(c.elem,a,ba.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(L);for(var c,d=0,e=a.length;d<e;d++)c=a[d],kb.tweeners[c]=kb.tweeners[c]||[],kb.tweeners[c].unshift(b)},prefilters:[ib],prefilter:function(a,b){b?kb.prefilters.unshift(a):kb.prefilters.push(a)}}),r.speed=function(a,b,c){var d=a&&\"object\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off?d.duration=0:\"number\"!=typeof d.duration&&(d.duration in r.fx.speeds?d.duration=r.fx.speeds[d.duration]:d.duration=r.fx.speeds._default),null!=d.queue&&d.queue!==!0||(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){r.isFunction(d.old)&&d.old.call(this),d.queue&&r.dequeue(this,d.queue)},d},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(da).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=kb(this,r.extend({},a),f);(e||W.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=r.timers,g=W.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&db.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=W.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),r.each({slideDown:gb(\"show\"),slideUp:gb(\"hide\"),slideToggle:gb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(ab=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),ab=void 0},r.fx.timer=function(a){r.timers.push(a),r.fx.start()},r.fx.interval=13,r.fx.start=function(){bb||(bb=!0,eb())},r.fx.stop=function(){bb=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\"input\"),b=d.createElement(\"select\"),c=b.appendChild(d.createElement(\"option\"));a.type=\"checkbox\",o.checkOn=\"\"!==a.value,o.optSelected=c.selected,a=d.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",o.radioValue=\"t\"===a.value}();var lb,mb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return T(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?lb:void 0)),void 0!==c?null===c?void r.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),\nnull==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\"radio\"===b&&B(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(L);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),lb={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=mb[b]||r.find.attr;mb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=mb[g],mb[g]=e,e=null!=c(a,b,d)?g:null,mb[g]=f),e}});var nb=/^(?:input|select|textarea|button)$/i,ob=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return T(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\"tabindex\");return b?parseInt(b,10):nb.test(a.nodeName)||ob.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){r.propFix[this.toLowerCase()]=this});function pb(a){var b=a.match(L)||[];return b.join(\" \")}function qb(a){return a.getAttribute&&a.getAttribute(\"class\")||\"\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,qb(this)))});if(\"string\"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&\" \"+pb(e)+\" \"){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=pb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,qb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&\" \"+pb(e)+\" \"){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=pb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,qb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=r(this),f=a.match(L)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=qb(this),b&&W.set(this,\"__className__\",b),this.setAttribute&&this.setAttribute(\"class\",b||a===!1?\"\":W.get(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+pb(qb(c))+\" \").indexOf(b)>-1)return!0;return!1}});var rb=/\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":Array.isArray(e)&&(e=r.map(e,function(a){return null==a?\"\":a+\"\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(rb,\"\"):null==c?\"\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\"value\");return null!=b?b:pb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\"select-one\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!B(c.parentNode,\"optgroup\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\"radio\",\"checkbox\"],function(){r.valHooks[this]={set:function(a,b){if(Array.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var sb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\"type\")?b.type:b,q=l.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!sb.test(p+r.event.triggered)&&(p.indexOf(\".\")>-1&&(q=p.split(\".\"),p=q.shift(),q.sort()),k=p.indexOf(\":\")<0&&\"on\"+p,b=b[r.expando]?b:new r.Event(p,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+q.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,sb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(W.get(h,\"events\")||{})[b.type]&&W.get(h,\"handle\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&U(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!U(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\"onfocusin\"in a,o.focusin||r.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=W.access(d,b);e||d.addEventListener(a,c,!0),W.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=W.access(d,b)-1;e?W.access(d,b,e):(d.removeEventListener(a,c,!0),W.remove(d,b))}}});var tb=a.location,ub=r.now(),vb=/\\?/;r.parseXML=function(b){var c;if(!b||\"string\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\"text/xml\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\"parsererror\").length||r.error(\"Invalid XML: \"+b),c};var wb=/\\[\\]$/,xb=/\\r?\\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(Array.isArray(b))r.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==r.type(b))d(a,b);else for(e in b)Ab(a+\"[\"+e+\"]\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(null==c?\"\":c)};if(Array.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join(\"&\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\"elements\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\":disabled\")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!ja.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:Array.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(xb,\"\\r\\n\")}}):{name:b.name,value:c.replace(xb,\"\\r\\n\")}}).get()}});var Bb=/%20/g,Cb=/#.*$/,Db=/([?&])_=[^&]*/,Eb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Fb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Gb=/^(?:GET|HEAD)$/,Hb=/^\\/\\//,Ib={},Jb={},Kb=\"*/\".concat(\"*\"),Lb=d.createElement(\"a\");Lb.href=tb.href;function Mb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(L)||[];if(r.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Nb(a,b,c,d){var e={},f=a===Jb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function Ob(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Pb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Qb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:tb.href,type:\"GET\",isLocal:Fb.test(tb.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Kb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Ob(Ob(a,r.ajaxSettings),b):Ob(r.ajaxSettings,a)},ajaxPrefilter:Mb(Ib),ajaxTransport:Mb(Jb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\"once memory\"),u=o.statusCode||{},v={},w={},x=\"canceled\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Eb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||tb.href)+\"\").replace(Hb,tb.protocol+\"//\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\"*\").toLowerCase().match(L)||[\"\"],null==o.crossDomain){j=d.createElement(\"a\");try{j.href=o.url,j.href=j.href,o.crossDomain=Lb.protocol+\"//\"+Lb.host!=j.protocol+\"//\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\"string\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Nb(Ib,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\"ajaxStart\"),o.type=o.type.toUpperCase(),o.hasContent=!Gb.test(o.type),f=o.url.replace(Cb,\"\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(o.data=o.data.replace(Bb,\"+\")):(n=o.url.slice(f.length),o.data&&(f+=(vb.test(f)?\"&\":\"?\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Db,\"$1\"),n=(vb.test(f)?\"&\":\"?\")+\"_=\"+ub++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\"If-Modified-Since\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\"If-None-Match\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\"Content-Type\",o.contentType),y.setRequestHeader(\"Accept\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\"*\"!==o.dataTypes[0]?\", \"+Kb+\"; q=0.01\":\"\"):o.accepts[\"*\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\"abort\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Nb(Jb,o,c,y)){if(y.readyState=1,l&&q.trigger(\"ajaxSend\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\"timeout\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\"No Transport\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\"\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Pb(o,y,d)),v=Qb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\"Last-Modified\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\"etag\"),w&&(r.etag[f]=w)),204===b||\"HEAD\"===o.type?x=\"nocontent\":304===b?x=\"notmodified\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\"error\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\"\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\"ajaxSuccess\":\"ajaxError\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\"ajaxComplete\",[y,o]),--r.active||r.event.trigger(\"ajaxStop\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\"json\")},getScript:function(a,b){return r.get(a,void 0,b,\"script\")}}),r.each([\"get\",\"post\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,\"throws\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\"body\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Rb={0:200,1223:204},Sb=r.ajaxSettings.xhr();o.cors=!!Sb&&\"withCredentials\"in Sb,o.ajax=Sb=!!Sb,r.ajaxTransport(function(b){var c,d;if(o.cors||Sb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\"abort\"===a?h.abort():\"error\"===a?\"number\"!=typeof h.status?f(0,\"error\"):f(h.status,h.statusText):f(Rb[h.status]||h.status,h.statusText,\"text\"!==(h.responseType||\"text\")||\"string\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\"error\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\"abort\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),r.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\"<script>\").prop({charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&f(\"error\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Tb=[],Ub=/(=)\\?(?=&|$)|\\?\\?/;r.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Tb.pop()||r.expando+\"_\"+ub++;return this[a]=!0,a}}),r.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Ub.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Ub.test(b.data)&&\"data\");if(h||\"jsonp\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Ub,\"$1\"+e):b.jsonp!==!1&&(b.url+=(vb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||r.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Tb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\"\").body;return a.innerHTML=\"<form></form><form></form>\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\"string\"!=typeof a)return[];\"boolean\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\"\"),e=b.createElement(\"base\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=C.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=qa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=pb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&r.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?r(\"<div>\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length},r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\"position\"),l=r(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=r.css(a,\"top\"),i=r.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),b=f.ownerDocument,c=b.documentElement,e=b.defaultView,{top:d.top+e.pageYOffset-c.clientTop,left:d.left+e.pageXOffset-c.clientLeft}):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===r.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),B(a[0],\"html\")||(d=a.offset()),d={top:d.top+r.css(a[0],\"borderTopWidth\",!0),left:d.left+r.css(a[0],\"borderLeftWidth\",!0)}),{top:b.top-d.top-r.css(c,\"marginTop\",!0),left:b.left-d.left-r.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\"static\"===r.css(a,\"position\"))a=a.offsetParent;return a||ra})}}),r.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=\"pageYOffset\"===b;r.fn[a]=function(d){return T(this,function(a,d,e){var f;return r.isWindow(a)?f=a:9===a.nodeType&&(f=a.defaultView),void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\"top\",\"left\"],function(a,b){r.cssHooks[b]=Pa(o.pixelPosition,function(a,c){if(c)return c=Oa(a,b),Ma.test(c)?r(a).position()[b]+\"px\":c})}),r.each({Height:\"height\",Width:\"width\"},function(a,b){r.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\"boolean\"!=typeof e),h=c||(e===!0||f===!0?\"margin\":\"border\");return T(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\"outer\")?b[\"inner\"+a]:b.document.documentElement[\"client\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\"scroll\"+a],f[\"scroll\"+a],b.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}}),r.holdReady=function(a){a?r.readyWait++:r.ready(!0)},r.isArray=Array.isArray,r.parseJSON=JSON.parse,r.nodeName=B,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return r});var Vb=a.jQuery,Wb=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Wb),b&&a.jQuery===r&&(a.jQuery=Vb),r},b||(a.jQuery=a.$=r),r});\n","/*! jQuery UI - v1.12.1 - 2017-08-01\n* http://jqueryui.com\n* Includes: widget.js, position.js, data.js, disable-selection.js, scroll-parent.js, widgets/draggable.js, widgets/resizable.js, widgets/sortable.js, widgets/mouse.js\n* Copyright jQuery Foundation and other contributors; Licensed MIT */\n\n(function(t){\"function\"==typeof define&&define.amd?define([\"jquery\"],t):t(jQuery)})(function(t){t.ui=t.ui||{},t.ui.version=\"1.12.1\";var e=0,i=Array.prototype.slice;t.cleanData=function(e){return function(i){var s,n,o;for(o=0;null!=(n=i[o]);o++)try{s=t._data(n,\"events\"),s&&s.remove&&t(n).triggerHandler(\"remove\")}catch(a){}e(i)}}(t.cleanData),t.widget=function(e,i,s){var n,o,a,r={},l=e.split(\".\")[0];e=e.split(\".\")[1];var h=l+\"-\"+e;return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[\":\"][h.toLowerCase()]=function(e){return!!t.data(e,h)},t[l]=t[l]||{},n=t[l][e],o=t[l][e]=function(t,e){return this._createWidget?(arguments.length&&this._createWidget(t,e),void 0):new o(t,e)},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),a=new i,a.options=t.widget.extend({},a.options),t.each(s,function(e,s){return t.isFunction(s)?(r[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=o,e}}(),void 0):(r[e]=s,void 0)}),o.prototype=t.widget.extend(a,{widgetEventPrefix:n?a.widgetEventPrefix||e:e},r,{constructor:o,namespace:l,widgetName:e,widgetFullName:h}),n?(t.each(n._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+\".\"+s.widgetName,o,i._proto)}),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var s,n,o=i.call(arguments,1),a=0,r=o.length;r>a;a++)for(s in o[a])n=o[a][s],o[a].hasOwnProperty(s)&&void 0!==n&&(e[s]=t.isPlainObject(n)?t.isPlainObject(e[s])?t.widget.extend({},e[s],n):t.widget.extend({},n):n);return e},t.widget.bridge=function(e,s){var n=s.prototype.widgetFullName||e;t.fn[e]=function(o){var a=\"string\"==typeof o,r=i.call(arguments,1),l=this;return a?this.length||\"instance\"!==o?this.each(function(){var i,s=t.data(this,n);return\"instance\"===o?(l=s,!1):s?t.isFunction(s[o])&&\"_\"!==o.charAt(0)?(i=s[o].apply(s,r),i!==s&&void 0!==i?(l=i&&i.jquery?l.pushStack(i.get()):i,!1):void 0):t.error(\"no such method '\"+o+\"' for \"+e+\" widget instance\"):t.error(\"cannot call methods on \"+e+\" prior to initialization; \"+\"attempted to call method '\"+o+\"'\")}):l=void 0:(r.length&&(o=t.widget.extend.apply(null,[o].concat(r))),this.each(function(){var e=t.data(this,n);e?(e.option(o||{}),e._init&&e._init()):t.data(this,n,new s(o,this))})),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{classes:{},disabled:!1,create:null},_createWidget:function(i,s){s=t(s||this.defaultElement||this)[0],this.element=t(s),this.uuid=e++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},s!==this&&(t.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===s&&this.destroy()}}),this.document=t(s.style?s.ownerDocument:s.document||s),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),i),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,function(t,i){e._removeClass(i,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if(\"string\"==typeof e)if(a={},s=e.split(\".\"),e=s.shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;s.length-1>o;o++)n[s[o]]=n[s[o]]||{},n=n[s[o]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-state-focus\"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){function i(i,o){var a,r;for(r=0;i.length>r;r++)a=n.classesElementLookup[i[r]]||t(),a=e.add?t(t.unique(a.get().concat(e.element.get()))):t(a.not(e.element).get()),n.classesElementLookup[i[r]]=a,s.push(i[r]),o&&e.classes[i[r]]&&s.push(e.classes[i[r]])}var s=[],n=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:\"_untrackClassesElement\"}),e.keys&&i(e.keys.match(/\\S+/g)||[],!0),e.extra&&i(e.extra.match(/\\S+/g)||[]),s.join(\" \")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))})},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s=\"boolean\"==typeof s?s:i;var n=\"string\"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this},_on:function(e,i,s){var n,o=this;\"boolean\"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,function(s,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass(\"ui-state-disabled\")?(\"string\"==typeof a?o[a]:a).apply(o,arguments):void 0}\"string\"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var l=s.match(/^([\\w:-]*)\\s*(.*)$/),h=l[1]+o.eventNamespace,c=l[2];c?n.on(h,c,r):i.on(h,r)})},_off:function(e,i){i=(i||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return(\"string\"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,\"ui-state-hover\")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,\"ui-state-hover\")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,\"ui-state-focus\")},focusout:function(e){this._removeClass(t(e.currentTarget),null,\"ui-state-focus\")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:\"fadeIn\",hide:\"fadeOut\"},function(e,i){t.Widget.prototype[\"_\"+e]=function(s,n,o){\"string\"==typeof n&&(n={effect:n});var a,r=n?n===!0||\"number\"==typeof n?i:n.effect||i:e;n=n||{},\"number\"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}}),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(u.test(t[0])?e/100:1),parseFloat(t[1])*(u.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}var n,o=Math.max,a=Math.abs,r=/left|center|right/,l=/top|center|bottom/,h=/[\\+\\-]\\d+(\\.[\\d]+)?%?/,c=/^\\w+/,u=/%$/,d=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==n)return n;var e,i,s=t(\"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=s.children()[0];return t(\"body\").append(s),e=o.offsetWidth,s.css(\"overflow\",\"scroll\"),i=o.offsetWidth,e===i&&(i=s[0].clientWidth),s.remove(),n=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-x\"),s=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-y\"),n=\"scroll\"===i||\"auto\"===i&&e.width<e.element[0].scrollWidth,o=\"scroll\"===s||\"auto\"===s&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType,o=!s&&!n;return{element:i,isWindow:s,isDocument:n,offset:o?t(e).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(n){if(!n||!n.of)return d.apply(this,arguments);n=t.extend({},n);var u,p,f,g,m,_,v=t(n.of),b=t.position.getWithinInfo(n.within),y=t.position.getScrollInfo(b),w=(n.collision||\"flip\").split(\" \"),k={};return _=s(v),v[0].preventDefault&&(n.at=\"left top\"),p=_.width,f=_.height,g=_.offset,m=t.extend({},g),t.each([\"my\",\"at\"],function(){var t,e,i=(n[this]||\"\").split(\" \");1===i.length&&(i=r.test(i[0])?i.concat([\"center\"]):l.test(i[0])?[\"center\"].concat(i):[\"center\",\"center\"]),i[0]=r.test(i[0])?i[0]:\"center\",i[1]=l.test(i[1])?i[1]:\"center\",t=h.exec(i[0]),e=h.exec(i[1]),k[this]=[t?t[0]:0,e?e[0]:0],n[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]}),1===w.length&&(w[1]=w[0]),\"right\"===n.at[0]?m.left+=p:\"center\"===n.at[0]&&(m.left+=p/2),\"bottom\"===n.at[1]?m.top+=f:\"center\"===n.at[1]&&(m.top+=f/2),u=e(k.at,p,f),m.left+=u[0],m.top+=u[1],this.each(function(){var s,r,l=t(this),h=l.outerWidth(),c=l.outerHeight(),d=i(this,\"marginLeft\"),_=i(this,\"marginTop\"),x=h+d+i(this,\"marginRight\")+y.width,C=c+_+i(this,\"marginBottom\")+y.height,D=t.extend({},m),T=e(k.my,l.outerWidth(),l.outerHeight());\"right\"===n.my[0]?D.left-=h:\"center\"===n.my[0]&&(D.left-=h/2),\"bottom\"===n.my[1]?D.top-=c:\"center\"===n.my[1]&&(D.top-=c/2),D.left+=T[0],D.top+=T[1],s={marginLeft:d,marginTop:_},t.each([\"left\",\"top\"],function(e,i){t.ui.position[w[e]]&&t.ui.position[w[e]][i](D,{targetWidth:p,targetHeight:f,elemWidth:h,elemHeight:c,collisionPosition:s,collisionWidth:x,collisionHeight:C,offset:[u[0]+T[0],u[1]+T[1]],my:n.my,at:n.at,within:b,elem:l})}),n.using&&(r=function(t){var e=g.left-D.left,i=e+p-h,s=g.top-D.top,r=s+f-c,u={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:l,left:D.left,top:D.top,width:h,height:c},horizontal:0>i?\"left\":e>0?\"right\":\"center\",vertical:0>r?\"top\":s>0?\"bottom\":\"middle\"};h>p&&p>a(e+i)&&(u.horizontal=\"center\"),c>f&&f>a(s+r)&&(u.vertical=\"middle\"),u.important=o(a(e),a(i))>o(a(s),a(r))?\"horizontal\":\"vertical\",n.using.call(this,t,u)}),l.offset(t.extend(D,{using:r}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,l=n-r,h=r+e.collisionWidth-a-n;e.collisionWidth>a?l>0&&0>=h?(i=t.left+l+e.collisionWidth-a-n,t.left+=l-i):t.left=h>0&&0>=l?n:l>h?n+a-e.collisionWidth:n:l>0?t.left+=l:h>0?t.left-=h:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,l=n-r,h=r+e.collisionHeight-a-n;e.collisionHeight>a?l>0&&0>=h?(i=t.top+l+e.collisionHeight-a-n,t.top+=l-i):t.top=h>0&&0>=l?n:l>h?n+a-e.collisionHeight:n:l>0?t.top+=l:h>0?t.top-=h:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,l=n.isWindow?n.scrollLeft:n.offset.left,h=t.left-e.collisionPosition.marginLeft,c=h-l,u=h+e.collisionWidth-r-l,d=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,p=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-r-o,(0>i||a(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-l,(s>0||u>a(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,l=n.isWindow?n.scrollTop:n.offset.top,h=t.top-e.collisionPosition.marginTop,c=h-l,u=h+e.collisionHeight-r-l,d=\"top\"===e.my[1],p=d?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,f=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-r-o,(0>s||a(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-l,(i>0||u>a(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}}}(),t.ui.position,t.extend(t.expr[\":\"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,s){return!!t.data(e,s[3])}}),t.fn.extend({disableSelection:function(){var t=\"onselectstart\"in document.createElement(\"div\")?\"selectstart\":\"mousedown\";return function(){return this.on(t+\".ui-disableSelection\",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.off(\".ui-disableSelection\")}}),t.fn.scrollParent=function(e){var i=this.css(\"position\"),s=\"absolute\"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return s&&\"static\"===e.css(\"position\")?!1:n.test(e.css(\"overflow\")+e.css(\"overflow-y\")+e.css(\"overflow-x\"))}).eq(0);return\"fixed\"!==i&&o.length?o:t(this[0].ownerDocument||document)},t.ui.ie=!!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase());var s=!1;t(document).on(\"mouseup\",function(){s=!1}),t.widget(\"ui.mouse\",{version:\"1.12.1\",options:{cancel:\"input, textarea, button, select, option\",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on(\"mousedown.\"+this.widgetName,function(t){return e._mouseDown(t)}).on(\"click.\"+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+\".preventClickEvent\")?(t.removeData(i.target,e.widgetName+\".preventClickEvent\"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.off(\".\"+this.widgetName),this._mouseMoveDelegate&&this.document.off(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).off(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!s){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,n=1===e.which,o=\"string\"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return n&&!o&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+\".preventClickEvent\")&&t.removeData(e.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).on(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),e.preventDefault(),s=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).off(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,s=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;o.length>n;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return e||(e=t.body),e.nodeName||(e=t.body),e},t.ui.safeBlur=function(e){e&&\"body\"!==e.nodeName.toLowerCase()&&t(e).trigger(\"blur\")},t.widget(\"ui.draggable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){\"original\"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass(\"ui-draggable\"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),\"handle\"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(\".ui-draggable-dragging\")?(this.destroyOnClear=!0,void 0):(this._removeHandleClassName(),this._mouseDestroy(),void 0)},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(\".ui-resizable-handle\").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blurActiveElement(e),this._blockFrames(i.iframeFix===!0?\"iframe\":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t(\"<div>\").css(\"position\",\"absolute\").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]),s=t(e.target);s.closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,\"ui-draggable-dragging\"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return\"fixed\"===t(this).css(\"position\")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger(\"start\",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo(\"absolute\"),!i){var s=this._uiHash();if(this._trigger(\"drag\",e,s)===!1)return this._mouseUp(new t.Event(\"mouseup\",e)),!1;this.position=s.position}return this.helper[0].style.left=this.position.left+\"px\",this.helper[0].style.top=this.position.top+\"px\",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),\"invalid\"===this.options.revert&&!s||\"valid\"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger(\"stop\",e)!==!1&&i._clear()}):this._trigger(\"stop\",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger(\"focus\"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp(new t.Event(\"mouseup\",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,\"ui-draggable-handle\")},_removeHandleClassName:function(){this._removeClass(this.handleElement,\"ui-draggable-handle\")},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper),n=s?t(i.helper.apply(this.element[0],[e])):\"clone\"===i.helper?this.element.clone().removeAttr(\"id\"):this.element;return n.parents(\"body\").length||n.appendTo(\"parent\"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&n[0]===this.element[0]&&this._setPositionRelative(),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css(\"position\"))||n.css(\"position\",\"absolute\"),n},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css(\"position\"))||(this.element[0].style.position=\"relative\")},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options,o=this.document[0];return this.relativeContainer=null,n.containment?\"window\"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):\"document\"===n.containment?(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):n.containment.constructor===Array?(this.containment=n.containment,void 0):(\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=/(scroll|auto)/.test(i.css(\"overflow\")),this.containment=[(parseInt(i.css(\"borderLeftWidth\"),10)||0)+(parseInt(i.css(\"paddingLeft\"),10)||0),(parseInt(i.css(\"borderTopWidth\"),10)||0)+(parseInt(i.css(\"paddingTop\"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css(\"borderRightWidth\"),10)||0)-(parseInt(i.css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css(\"borderBottomWidth\"),10)||0)-(parseInt(i.css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i),void 0):(this.containment=null,void 0)},_convertPositionTo:function(t,e){e||(e=this.position);var i=\"absolute\"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-(\"fixed\"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-(\"fixed\"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s,n,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),l=t.pageX,h=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(s=this.relativeContainer.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),a.grid&&(n=a.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,h=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),\"y\"===a.axis&&(l=this.originalPageX),\"x\"===a.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,\"ui-draggable-dragging\"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo(\"absolute\"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each(function(){var i=t(this).sortable(\"instance\");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger(\"activate\",e,n))})},stop:function(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css(\"position\"),top:t.placeholder.css(\"top\"),left:t.placeholder.css(\"left\")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger(\"deactivate\",e,n))})},drag:function(e,i,s){t.each(s.sortables,function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(n=!1),n})),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data(\"ui-sortable-item\",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger(\"toSortable\",e),s.dropped=o.element,t.each(s.sortables,function(){this.refreshPositions()}),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger(\"out\",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger(\"fromSortable\",e),s.dropped=!1,t.each(s.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add(\"draggable\",\"cursor\",{start:function(e,i,s){var n=t(\"body\"),o=s.options;n.css(\"cursor\")&&(o._cursor=n.css(\"cursor\")),n.css(\"cursor\",o.cursor)},stop:function(e,i,s){var n=s.options;n._cursor&&t(\"body\").css(\"cursor\",n._cursor)\n}}),t.ui.plugin.add(\"draggable\",\"opacity\",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css(\"opacity\")&&(o._opacity=n.css(\"opacity\")),n.css(\"opacity\",o.opacity)},stop:function(e,i,s){var n=s.options;n._opacity&&t(i.helper).css(\"opacity\",n._opacity)}}),t.ui.plugin.add(\"draggable\",\"scroll\",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&\"HTML\"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&\"HTML\"!==a.tagName?(n.axis&&\"x\"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&\"y\"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&\"x\"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&\"y\"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e)}}),t.ui.plugin.add(\"draggable\",\"snap\",{start:function(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||\":data(ui-draggable)\":n.snap).each(function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,s){var n,o,a,r,l,h,c,u,d,p,f=s.options,g=f.snapTolerance,m=i.offset.left,_=m+s.helperProportions.width,v=i.offset.top,b=v+s.helperProportions.height;for(d=s.snapElements.length-1;d>=0;d--)l=s.snapElements[d].left-s.margins.left,h=l+s.snapElements[d].width,c=s.snapElements[d].top-s.margins.top,u=c+s.snapElements[d].height,l-g>_||m>h+g||c-g>b||v>u+g||!t.contains(s.snapElements[d].item.ownerDocument,s.snapElements[d].item)?(s.snapElements[d].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=!1):(\"inner\"!==f.snapMode&&(n=g>=Math.abs(c-b),o=g>=Math.abs(u-v),a=g>=Math.abs(l-_),r=g>=Math.abs(h-m),n&&(i.position.top=s._convertPositionTo(\"relative\",{top:c-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo(\"relative\",{top:u,left:0}).top),a&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:l-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:h}).left)),p=n||o||a||r,\"outer\"!==f.snapMode&&(n=g>=Math.abs(c-v),o=g>=Math.abs(u-b),a=g>=Math.abs(l-m),r=g>=Math.abs(h-_),n&&(i.position.top=s._convertPositionTo(\"relative\",{top:c,left:0}).top),o&&(i.position.top=s._convertPositionTo(\"relative\",{top:u-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:l}).left),r&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:h-s.helperProportions.width}).left)),!s.snapElements[d].snapping&&(n||o||a||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=n||o||a||r||p)}}),t.ui.plugin.add(\"draggable\",\"stack\",{start:function(e,i,s){var n,o=s.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css(\"zIndex\"),10)||0)-(parseInt(t(i).css(\"zIndex\"),10)||0)});a.length&&(n=parseInt(t(a[0]).css(\"zIndex\"),10)||0,t(a).each(function(e){t(this).css(\"zIndex\",n+e)}),this.css(\"zIndex\",n+a.length))}}),t.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css(\"zIndex\")&&(o._zIndex=n.css(\"zIndex\")),n.css(\"zIndex\",o.zIndex)},stop:function(e,i,s){var n=s.options;n._zIndex&&t(i.helper).css(\"zIndex\",n._zIndex)}}),t.ui.draggable,t.widget(\"ui.resizable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,classes:{\"ui-resizable-se\":\"ui-icon ui-icon-gripsmall-diagonal-se\"},containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if(\"hidden\"===t(e).css(\"overflow\"))return!1;var s=i&&\"left\"===i?\"scrollLeft\":\"scrollTop\",n=!1;return e[s]>0?!0:(e[s]=1,n=e[s]>0,e[s]=0,n)},_create:function(){var e,i=this.options,s=this;this._addClass(\"ui-resizable\"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"ui-resizable\",this.element.resizable(\"instance\")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\"),marginLeft:this.originalElement.css(\"marginLeft\")},this.element.css(e),this.originalElement.css(\"margin\",0),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on(\"mouseenter\",function(){i.disabled||(s._removeClass(\"ui-resizable-autohide\"),s._handles.show())}).on(\"mouseleave\",function(){i.disabled||s.resizing||(s._addClass(\"ui-resizable-autohide\"),s._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeData(\"resizable\").removeData(\"ui-resizable\").off(\".resizable\").find(\".ui-resizable-handle\").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css(\"position\"),width:e.outerWidth(),height:e.outerHeight(),top:e.css(\"top\"),left:e.css(\"left\")}).insertAfter(e),e.remove()),this.originalElement.css(\"resize\",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case\"handles\":this._removeHandles(),this._setupHandles();break;default:}},_setupHandles:function(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\"),this._handles=t(),this.handles.constructor===String)for(\"all\"===this.handles&&(this.handles=\"n,e,s,w,se,sw,ne,nw\"),s=this.handles.split(\",\"),this.handles={},i=0;s.length>i;i++)e=t.trim(s[i]),n=\"ui-resizable-\"+e,o=t(\"<div>\"),this._addClass(o,\"ui-resizable-handle \"+n),o.css({zIndex:a.zIndex}),this.handles[e]=\".ui-resizable-\"+e,this.element.append(o);this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=[\"padding\",/ne|nw|n/.test(i)?\"Top\":/se|sw|s/.test(i)?\"Bottom\":/^e$/.test(i)?\"Right\":\"Left\"].join(\"\"),e.css(n,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(\".ui-resizable-handle\")),this._handles.disableSelection(),this._handles.on(\"mouseover\",function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:\"se\")}),a.autoHide&&(this._handles.hide(),this._addClass(\"ui-resizable-autohide\"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(e){var i,s,n,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css(\"left\")),s=this._num(this.helper.css(\"top\")),o.containment&&(i+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio=\"number\"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(\".ui-resizable-\"+this.axis).css(\"cursor\"),t(\"body\").css(\"cursor\",\"auto\"===n?this.axis+\"-resize\":n),this._addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",e),!0},_mouseDrag:function(e){var i,s,n=this.originalMousePosition,o=this.axis,a=e.pageX-n.left||0,r=e.pageY-n.top||0,l=this._change[o];return this._updatePrevProperties(),l?(i=l.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate(\"resize\",e),s=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||(this._updatePrevProperties(),this._trigger(\"resize\",e,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o,a,r,l,h=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&this._hasScroll(i[0],\"left\")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseFloat(c.element.css(\"left\"))+(c.position.left-c.originalPosition.left)||null,l=parseFloat(c.element.css(\"top\"))+(c.position.top-c.originalPosition.top)||null,h.animate||this.element.css(t.extend(a,{top:l,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!h.animate&&this._proportionallyResize()),t(\"body\").css(\"cursor\",\"auto\"),this._removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+\"px\"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+\"px\"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+\"px\"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+\"px\"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s,n,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>n&&(o.maxHeight=n)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),\"sw\"===s&&(t.left=e.left+(i.width-t.width),t.top=null),\"nw\"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&h&&(t.left=r-e.minWidth),s&&h&&(t.left=r-e.maxWidth),a&&c&&(t.top=l-e.minHeight),n&&c&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css(\"borderTopWidth\"),t.css(\"borderRightWidth\"),t.css(\"borderBottomWidth\"),t.css(\"borderLeftWidth\")],n=[t.css(\"paddingTop\"),t.css(\"paddingRight\"),t.css(\"paddingBottom\"),t.css(\"paddingLeft\")];4>e;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t(\"<div style='overflow:hidden;'></div>\"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:\"absolute\",left:this.elementOffset.left+\"px\",top:this.elementOffset.top+\"px\",zIndex:++i.zIndex}),this.helper.appendTo(\"body\").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),\"resize\"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add(\"resizable\",\"animate\",{stop:function(e){var i=t(this).resizable(\"instance\"),s=i.options,n=i._proportionallyResizeElements,o=n.length&&/textarea/i.test(n[0].nodeName),a=o&&i._hasScroll(n[0],\"left\")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,l={width:i.size.width-r,height:i.size.height-a},h=parseFloat(i.element.css(\"left\"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css(\"top\"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,c&&h?{top:c,left:h}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseFloat(i.element.css(\"width\")),height:parseFloat(i.element.css(\"height\")),top:parseFloat(i.element.css(\"top\")),left:parseFloat(i.element.css(\"left\"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate(\"resize\",e)}})}}),t.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var e,i,s,n,o,a,r,l=t(this).resizable(\"instance\"),h=l.options,c=l.element,u=h.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(l.containerElement=t(d),/document/.test(u)||u===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(t,s){i[t]=l._num(e.css(\"padding\"+s))}),l.containerOffset=e.offset(),l.containerPosition=e.position(),l.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},s=l.containerOffset,n=l.containerSize.height,o=l.containerSize.width,a=l._hasScroll(d,\"left\")?d.scrollWidth:o,r=l._hasScroll(d)?d.scrollHeight:n,l.parentData={element:d,left:s.left,top:s.top,width:a,height:r}))},resize:function(e){var i,s,n,o,a=t(this).resizable(\"instance\"),r=a.options,l=a.containerOffset,h=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,p=!0;d[0]!==document&&/static/.test(d.css(\"position\"))&&(u=l),h.left<(a._helper?l.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-l.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,p=!1),a.position.left=r.helper?l.left:0),h.top<(a._helper?l.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-l.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,p=!1),a.position.top=a._helper?l.top:0),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css(\"position\")),n&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-l.left)),s=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-l.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,p=!1)),s+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-s,c&&(a.size.width=a.size.height*a.aspectRatio,p=!1)),p||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height)},stop:function(){var e=t(this).resizable(\"instance\"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),l=a.outerWidth()-e.sizeDiff.width,h=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:l,height:h}),e._helper&&!i.animate&&/static/.test(o.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:l,height:h})}}),t.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(){var e=t(this).resizable(\"instance\"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data(\"ui-resizable-alsoresize\",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css(\"left\")),top:parseFloat(e.css(\"top\"))})})},resize:function(e,i){var s=t(this).resizable(\"instance\"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};t(n.alsoResize).each(function(){var e=t(this),s=t(this).data(\"ui-resizable-alsoresize\"),n={},o=e.parents(i.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(n[e]=i||null)}),e.css(n)})},stop:function(){t(this).removeData(\"ui-resizable-alsoresize\")}}),t.ui.plugin.add(\"resizable\",\"ghost\",{start:function(){var e=t(this).resizable(\"instance\"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,\"ui-resizable-ghost\"),t.uiBackCompat!==!1&&\"string\"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable(\"instance\");e.ghost&&e.ghost.css({position:\"relative\",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable(\"instance\");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var e,i=t(this).resizable(\"instance\"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,l=\"number\"==typeof s.grid?[s.grid,s.grid]:s.grid,h=l[0]||1,c=l[1]||1,u=Math.round((n.width-o.width)/h)*h,d=Math.round((n.height-o.height)/c)*c,p=o.width+u,f=o.height+d,g=s.maxWidth&&p>s.maxWidth,m=s.maxHeight&&f>s.maxHeight,_=s.minWidth&&s.minWidth>p,v=s.minHeight&&s.minHeight>f;s.grid=l,_&&(p+=h),v&&(f+=c),g&&(p-=h),m&&(f-=c),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-u):((0>=f-c||0>=p-h)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=a.top-d):(f=c-e.height,i.size.height=f,i.position.top=a.top+o.height-f),p-h>0?(i.size.width=p,i.position.left=a.left-u):(p=h-e.width,i.size.width=p,i.position.left=a.left+o.width-p))}}),t.ui.resizable,t.widget(\"ui.sortable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css(\"float\"))||/inline|table-cell/.test(t.css(\"display\"))},_create:function(){this.containerCache={},this._addClass(\"ui-sortable\"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),\"handle\"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(\".ui-sortable-handle\"),\"ui-sortable-handle\"),t.each(this.items,function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,\"ui-sortable-handle\")})},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+\"-item\");return this},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||\"static\"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+\"-item\")===o?(s=t(this),!1):void 0}),t.data(e.target,o.widgetName+\"-item\")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find(\"*\").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&\"auto\"!==a.cursor&&(o=this.document.find(\"body\"),this.storedCursor=o.css(\"cursor\"),o.css(\"cursor\",a.cursor),this.storedStylesheet=t(\"<style>*{ cursor: \"+a.cursor+\" !important; }</style>\").appendTo(o)),a.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",a.opacity)),a.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",a.zIndex)),this.scrollParent[0]!==this.document[0]&&\"HTML\"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger(\"activate\",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,\"ui-sortable-helper\"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&\"HTML\"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo(\"absolute\"),this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?\"next\":\"prev\"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&(\"semi-dynamic\"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?\"down\":\"up\",\"pointer\"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger(\"change\",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger(\"sort\",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&\"x\"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&\"y\"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new t.Event(\"mouseup\",{target:null})),\"original\"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,\"ui-sortable-helper\")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger(\"out\",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),\"original\"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||\"id\")||\"\").match(e.expression||/(.+)[\\-=_](.+)/);i&&s.push((e.key||i[1]+\"[]\")+\"=\"+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+\"=\"),s.join(\"&\")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||\"id\")||\"\")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,l=r+t.height,h=this.offset.click.top,c=this.offset.click.left,u=\"x\"===this.options.axis||s+h>r&&l>s+h,d=\"y\"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return\"pointer\"===this.options.tolerance||this.options.forcePointerForContainers||\"pointer\"!==this.options.tolerance&&this.helperProportions[this.floating?\"width\":\"height\"]>t[this.floating?\"width\":\"height\"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&l>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e,i,s=\"x\"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n=\"y\"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),o=s&&n;return o?(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?\"right\"===i||\"down\"===e?2:1:e&&(\"down\"===e?2:1)):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();\nreturn this.floating&&n?\"right\"===n&&i||\"left\"===n&&!i:s&&(\"down\"===s&&e||\"up\"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?\"right\":\"left\")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],l=[],h=this._connectWith();if(h&&e)for(s=h.length-1;s>=0;s--)for(o=t(h[s],this.document[0]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&l.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),a]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]),s=l.length-1;s>=0;s--)l[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,l,h,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i],this.document[0]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,h=r.length;h>s;s++)l=t(r[s]),l.data(this.widgetName+\"-item\",a),c.push({item:l,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?\"x\"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t(\"<\"+s+\">\",e.document[0]);return e._addClass(n,\"ui-sortable-placeholder\",i||e.currentItem[0].className)._removeClass(n,\"ui-sortable-helper\"),\"tbody\"===s?e._createTrPlaceholder(e.currentItem.find(\"tr\").eq(0),t(\"<tr>\",e.document[0]).appendTo(n)):\"tr\"===s?e._createTrPlaceholder(e.currentItem,n):\"img\"===s&&n.attr(\"src\",e.currentItem.attr(\"src\")),i||n.css(\"visibility\",\"hidden\"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css(\"paddingTop\")||0,10)-parseInt(e.currentItem.css(\"paddingBottom\")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css(\"paddingLeft\")||0,10)-parseInt(e.currentItem.css(\"paddingRight\")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var s=this;e.children().each(function(){t(\"<td>&#160;</td>\",s.document[0]).attr(\"colspan\",t(this).attr(\"colspan\")||1).appendTo(i)})},_contactContainers:function(e){var i,s,n,o,a,r,l,h,c,u,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger(\"out\",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger(\"over\",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(n=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?\"left\":\"top\",r=c?\"width\":\"height\",u=c?\"pageX\":\"pageY\",s=this.items.length-1;s>=0;s--)t.contains(this.containers[p].element[0],this.items[s].item[0])&&this.items[s].item[0]!==this.currentItem[0]&&(l=this.items[s].item.offset()[a],h=!1,e[u]-l>this.items[s][r]/2&&(h=!0),n>Math.abs(e[u]-l)&&(n=Math.abs(e[u]-l),o=this.items[s],this.direction=h?\"up\":\"down\"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return this.currentContainer.containerCache.over||(this.containers[p]._trigger(\"over\",e,this._uiHash()),this.currentContainer.containerCache.over=1),void 0;o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger(\"change\",e,this._uiHash()),this.containers[p]._trigger(\"change\",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger(\"over\",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):\"clone\"===i.helper?this.currentItem.clone():this.currentItem;return s.parents(\"body\").length||t(\"parent\"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),(\"document\"===n.containment||\"window\"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,\"document\"===n.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,(\"document\"===n.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s=\"hidden\"!==t(e).css(\"overflow\"),this.containment=[i.left+(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)+(parseInt(t(e).css(\"paddingLeft\"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css(\"borderTopWidth\"),10)||0)+(parseInt(t(e).css(\"paddingTop\"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)-(parseInt(t(e).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css(\"borderTopWidth\"),10)||0)-(parseInt(t(e).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s=\"absolute\"===e?1:-1,n=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(r[0].tagName);return\"relative\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():l?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],\"down\"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)(\"auto\"===this._storedCSS[s]||\"static\"===this._storedCSS[s])&&(this._storedCSS[s]=\"\");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,\"ui-sortable-helper\")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger(\"receive\",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(\".ui-sortable-helper\")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger(\"update\",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger(\"remove\",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger(\"receive\",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger(\"update\",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i(\"deactivate\",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i(\"out\",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find(\"body\").css(\"cursor\",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",\"auto\"===this._storedZIndex?\"\":this._storedZIndex),this.dragging=!1,e||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})});","/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)\n * Licensed under the MIT License (LICENSE.txt).\n *\n * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.\n * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.\n * Thanks to: Seamus Leahy for adding deltaX and deltaY\n *\n * Version: 3.0.6\n *\n * Requires: 1.2.2+\n */\n\n(function($) {\n\nvar types = ['DOMMouseScroll', 'mousewheel'];\n\nif ($.event.fixHooks) {\n    for ( var i=types.length; i; ) {\n        $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;\n    }\n}\n\n$.event.special.mousewheel = {\n    setup: function() {\n        if ( this.addEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.addEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = handler;\n        }\n    },\n\n    teardown: function() {\n        if ( this.removeEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.removeEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = null;\n        }\n    }\n};\n\n$.fn.extend({\n    mousewheel: function(fn) {\n        return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n\n    unmousewheel: function(fn) {\n        return this.unbind(\"mousewheel\", fn);\n    }\n});\n\n\nfunction handler(event) {\n    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;\n    event = $.event.fix(orgEvent);\n    event.type = \"mousewheel\";\n\n    // Old school scrollwheel delta\n    if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta/120; }\n    if ( orgEvent.detail     ) { delta = -orgEvent.detail/3; }\n\n    // New school multidimensional scroll (touchpads) deltas\n    deltaY = delta;\n\n    // Gecko\n    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n        deltaY = 0;\n        deltaX = -1*delta;\n    }\n\n    // Webkit\n    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }\n    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }\n\n    // Add event and delta to the front of the arguments\n    args.unshift(event, delta, deltaX, deltaY);\n\n    return ($.event.dispatch || $.event.handle).apply(this, args);\n}\n\n})(jQuery);","/**\n * jQuery mousehold plugin - fires an event while the mouse is clicked down.\n * Additionally, the function, when executed, is passed a single\n * argument representing the count of times the event has been fired during\n * this session of the mouse hold.\n *\n * @author Remy Sharp (leftlogic.com)\n * @date 2006-12-15\n * @example $(\"img\").mousehold(200, function(i){  })\n * @desc Repeats firing the passed function while the mouse is clicked down\n *\n * @name mousehold\n * @type jQuery\n * @param Number timeout The frequency to repeat the event in milliseconds\n * @param Function fn A function to execute\n * @cat Plugin\n */\n\n(function($) {\n\n$.fn.mousehold = function(timeout, f) {\n  if (timeout && typeof timeout == 'function') {\n    f = timeout;\n    timeout = 100;\n  }\n  if (f && typeof f == 'function') {\n    var timer = 0;\n    var fireStep = 0;\n    return this.each(function() {\n      $(this).mousedown(function() {\n        fireStep = 1;\n        var ctr = 0;\n        var t = this;\n        timer = setInterval(function() {\n          ctr++;\n          f.call(t, ctr);\n          fireStep = 2;\n        }, timeout);\n      });\n\n      var clearMousehold = function() {\n        clearInterval(timer);\n        if (fireStep == 1) f.call(this, 1);\n        fireStep = 0;\n      };\n\n      $(this).mouseout(clearMousehold);\n      $(this).mouseup(clearMousehold);\n    })\n  }\n}\n\n})(jQuery);\n","// tipsy, facebook style tooltips for jquery\n// version 1.0.0a\n// (c) 2008-2010 jason frame [jason@onehackoranother.com]\n// released under the MIT license\n\n(function($) {\n    \n    function maybeCall(thing, ctx) {\n        return (typeof thing == 'function') ? (thing.call(ctx)) : thing;\n    };\n    \n    function isElementInDOM(ele) {\n      while (ele = ele.parentNode) {\n        if (ele == document) return true;\n      }\n      return false;\n    };\n    \n    function Tipsy(element, options) {\n        this.$element = $(element);\n        this.options = options;\n        this.enabled = true;\n        this.fixTitle();\n    };\n    \n    Tipsy.prototype = {\n        show: function() {\n            var title = this.getTitle();\n            if (title && this.enabled) {\n                var $tip = this.tip();\n                \n                $tip.find('.tipsy-inner')[this.options.html ? 'html' : 'text'](title);\n                $tip[0].className = 'tipsy'; // reset classname in case of dynamic gravity\n                $tip.remove().css({top: 0, left: 0, visibility: 'hidden', display: 'block'}).prependTo(document.body);\n                \n                var pos = $.extend({}, this.$element.offset(), {\n                    width: this.$element[0].offsetWidth,\n                    height: this.$element[0].offsetHeight\n                });\n                \n                var actualWidth = $tip[0].offsetWidth,\n                    actualHeight = $tip[0].offsetHeight,\n                    gravity = maybeCall(this.options.gravity, this.$element[0]);\n                \n                var tp;\n                switch (gravity.charAt(0)) {\n                    case 'n':\n                        tp = {top: pos.top + pos.height + this.options.offset, left: pos.left + pos.width / 2 - actualWidth / 2};\n                        break;\n                    case 's':\n                        tp = {top: pos.top - actualHeight - this.options.offset, left: pos.left + pos.width / 2 - actualWidth / 2};\n                        break;\n                    case 'e':\n                        tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth - this.options.offset};\n                        break;\n                    case 'w':\n                        tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width + this.options.offset};\n                        break;\n                }\n                \n                if (gravity.length == 2) {\n                    if (gravity.charAt(1) == 'w') {\n                        tp.left = pos.left + pos.width / 2 - 15;\n                    } else {\n                        tp.left = pos.left + pos.width / 2 - actualWidth + 15;\n                    }\n                }\n                \n                $tip.css(tp).addClass('tipsy-' + gravity);\n                $tip.find('.tipsy-arrow')[0].className = 'tipsy-arrow tipsy-arrow-' + gravity.charAt(0);\n                if (this.options.className) {\n                    $tip.addClass(maybeCall(this.options.className, this.$element[0]));\n                }\n                \n                if (this.options.fade) {\n                    $tip.stop().css({opacity: 0, display: 'block', visibility: 'visible'}).animate({opacity: this.options.opacity});\n                } else {\n                    $tip.css({visibility: 'visible', opacity: this.options.opacity});\n                }\n            }\n        },\n        \n        hide: function() {\n            if (this.options.fade) {\n                this.tip().stop().fadeOut(function() { $(this).remove(); });\n            } else {\n                this.tip().remove();\n            }\n        },\n        \n        fixTitle: function() {\n            var $e = this.$element;\n            if ($e.attr('title') || typeof($e.attr('original-title')) != 'string') {\n                $e.attr('original-title', $e.attr('title') || '').removeAttr('title');\n            }\n        },\n        \n        getTitle: function() {\n            var title, $e = this.$element, o = this.options;\n            this.fixTitle();\n            var title, o = this.options;\n            if (typeof o.title == 'string') {\n                title = $e.attr(o.title == 'title' ? 'original-title' : o.title);\n            } else if (typeof o.title == 'function') {\n                title = o.title.call($e[0]);\n            }\n            title = ('' + title).replace(/(^\\s*|\\s*$)/, \"\");\n            return title || o.fallback;\n        },\n        \n        tip: function() {\n            if (!this.$tip) {\n                this.$tip = $('<div class=\"tipsy\"></div>').html('<div class=\"tipsy-arrow\"></div><div class=\"tipsy-inner\"></div>');\n                this.$tip.data('tipsy-pointee', this.$element[0]);\n            }\n            return this.$tip;\n        },\n        \n        validate: function() {\n            if (!this.$element[0].parentNode) {\n                this.hide();\n                this.$element = null;\n                this.options = null;\n            }\n        },\n        \n        enable: function() { this.enabled = true; },\n        disable: function() { this.enabled = false; },\n        toggleEnabled: function() { this.enabled = !this.enabled; }\n    };\n    \n    $.fn.tipsy = function(options) {\n        \n        if (options === true) {\n            return this.data('tipsy');\n        } else if (typeof options == 'string') {\n            var tipsy = this.data('tipsy');\n            if (tipsy) tipsy[options]();\n            return this;\n        }\n        \n        options = $.extend({}, $.fn.tipsy.defaults, options);\n        \n        function get(ele) {\n            var tipsy = $.data(ele, 'tipsy');\n            if (!tipsy) {\n                tipsy = new Tipsy(ele, $.fn.tipsy.elementOptions(ele, options));\n                $.data(ele, 'tipsy', tipsy);\n            }\n            return tipsy;\n        }\n        \n        function enter() {\n            var tipsy = get(this);\n            tipsy.hoverState = 'in';\n            if (options.delayIn == 0) {\n                tipsy.show();\n            } else {\n                tipsy.fixTitle();\n                setTimeout(function() { if (tipsy.hoverState == 'in') tipsy.show(); }, options.delayIn);\n            }\n        };\n        \n        function leave() {\n            var tipsy = get(this);\n            tipsy.hoverState = 'out';\n            if (options.delayOut == 0) {\n                tipsy.hide();\n            } else {\n                setTimeout(function() { if (tipsy.hoverState == 'out') tipsy.hide(); }, options.delayOut);\n            }\n        };\n        \n        if (!options.live) this.each(function() { get(this); });\n        \n        if (options.trigger != 'manual') {\n            var binder   = options.live ? 'live' : 'bind',\n                eventIn  = options.trigger == 'hover' ? 'mouseenter' : 'focus',\n                eventOut = options.trigger == 'hover' ? 'mouseleave' : 'blur';\n            this[binder](eventIn, enter)[binder](eventOut, leave);\n        }\n        \n        return this;\n        \n    };\n    \n    $.fn.tipsy.defaults = {\n        className: null,\n        delayIn: 0,\n        delayOut: 0,\n        fade: false,\n        fallback: '',\n        gravity: 'n',\n        html: false,\n        live: false,\n        offset: 0,\n        opacity: 0.8,\n        title: 'title',\n        trigger: 'hover'\n    };\n    \n    $.fn.tipsy.revalidate = function() {\n      $('.tipsy').each(function() {\n        var pointee = $.data(this, 'tipsy-pointee');\n        if (!pointee || !isElementInDOM(pointee)) {\n          $(this).remove();\n        }\n      });\n    };\n    \n    // Overwrite this method to provide options on a per-element basis.\n    // For example, you could store the gravity in a 'tipsy-gravity' attribute:\n    // return $.extend({}, options, {gravity: $(ele).attr('tipsy-gravity') || 'n' });\n    // (remember - do not modify 'options' in place!)\n    $.fn.tipsy.elementOptions = function(ele, options) {\n        return $.metadata ? $.extend({}, options, $(ele).metadata()) : options;\n    };\n    \n    $.fn.tipsy.autoNS = function() {\n        return $(this).offset().top > ($(document).scrollTop() + $(window).height() / 2) ? 's' : 'n';\n    };\n    \n    $.fn.tipsy.autoWE = function() {\n        return $(this).offset().left > ($(document).scrollLeft() + $(window).width() / 2) ? 'e' : 'w';\n    };\n    \n    /**\n     * yields a closure of the supplied parameters, producing a function that takes\n     * no arguments and is suitable for use as an autogravity function like so:\n     *\n     * @param margin (int) - distance from the viewable region edge that an\n     *        element should be before setting its tooltip's gravity to be away\n     *        from that edge.\n     * @param prefer (string, e.g. 'n', 'sw', 'w') - the direction to prefer\n     *        if there are no viewable region edges effecting the tooltip's\n     *        gravity. It will try to vary from this minimally, for example,\n     *        if 'sw' is preferred and an element is near the right viewable \n     *        region edge, but not the top edge, it will set the gravity for\n     *        that element's tooltip to be 'se', preserving the southern\n     *        component.\n     */\n     $.fn.tipsy.autoBounds = function(margin, prefer) {\n\t\treturn function() {\n\t\t\tvar dir = {ns: prefer[0], ew: (prefer.length > 1 ? prefer[1] : false)},\n\t\t\t    boundTop = $(document).scrollTop() + margin,\n\t\t\t    boundLeft = $(document).scrollLeft() + margin,\n\t\t\t    $this = $(this);\n\n\t\t\tif ($this.offset().top < boundTop) dir.ns = 'n';\n\t\t\tif ($this.offset().left < boundLeft) dir.ew = 'w';\n\t\t\tif ($(window).width() + $(document).scrollLeft() - $this.offset().left < margin) dir.ew = 'e';\n\t\t\tif ($(window).height() + $(document).scrollTop() - $this.offset().top < margin) dir.ns = 's';\n\n\t\t\treturn dir.ns + (dir.ew ? dir.ew : '');\n\t\t}\n\t};\n    \n})(jQuery);","/*\n  Based on Base.js 1.1a (c) 2006-2010, Dean Edwards\n  Updated to pass JSHint and converted into a module by Kenneth Powers\n  License: http://www.opensource.org/licenses/mit-license.php\n*/\n/*global define:true module:true*/\n/*jshint eqeqeq:true*/\n(function (name, global, definition) {\n  if (typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof define !== 'undefined' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    global[name] = definition();\n  }\n})('Base', this, function () {\n  // Base Object\n  var Base = function () {};\n\n  // Implementation\n  Base.extend = function (_instance, _static) { // subclass\n    var extend = Base.prototype.extend;\n    // build the prototype\n    Base._prototyping = true;\n    var proto = new this();\n    extend.call(proto, _instance);\n    proto.base = function () {\n      // call this method from any other method to invoke that method's ancestor\n    };\n    delete Base._prototyping;\n    // create the wrapper for the constructor function\n    //var constructor = proto.constructor.valueOf(); //-dean\n    var constructor = proto.constructor;\n    var klass = proto.constructor = function () {\n        if (!Base._prototyping) {\n          if (this._constructing || this.constructor === klass) { // instantiation\n            this._constructing = true;\n            constructor.apply(this, arguments);\n            delete this._constructing;\n          } else if (arguments[0] !== null) { // casting\n            return (arguments[0].extend || extend).call(arguments[0], proto);\n          }\n        }\n      };\n    // build the class interface\n    klass.ancestor = this;\n    klass.extend = this.extend;\n    klass.forEach = this.forEach;\n    klass.implement = this.implement;\n    klass.prototype = proto;\n    klass.toString = this.toString;\n    klass.valueOf = function (type) {\n      return (type === 'object') ? klass : constructor.valueOf();\n    };\n    extend.call(klass, _static);\n    // class initialization\n    if (typeof klass.init === 'function') klass.init();\n    return klass;\n  };\n\n  Base.prototype = {\n    extend: function (source, value) {\n      if (arguments.length > 1) { // extending with a name/value pair\n        var ancestor = this[source];\n        if (ancestor && (typeof value === 'function') && // overriding a method?\n        // the valueOf() comparison is to avoid circular references\n        (!ancestor.valueOf || ancestor.valueOf() !== value.valueOf()) && /\\bbase\\b/.test(value)) {\n          // get the underlying method\n          var method = value.valueOf();\n          // override\n          value = function () {\n            var previous = this.base || Base.prototype.base;\n            this.base = ancestor;\n            var returnValue = method.apply(this, arguments);\n            this.base = previous;\n            return returnValue;\n          };\n          // point to the underlying method\n          value.valueOf = function (type) {\n            return (type === 'object') ? value : method;\n          };\n          value.toString = Base.toString;\n        }\n        this[source] = value;\n      } else if (source) { // extending with an object literal\n        var extend = Base.prototype.extend;\n        // if this object has a customized extend method then use it\n        if (!Base._prototyping && typeof this !== 'function') {\n          extend = this.extend || extend;\n        }\n        var proto = {\n          toSource: null\n        };\n        // do the \"toString\" and other methods manually\n        var hidden = ['constructor', 'toString', 'valueOf'];\n        // if we are prototyping then include the constructor\n        for (var i = Base._prototyping ? 0 : 1; i < hidden.length; i++) {\n          var h = hidden[i];\n          if (source[h] !== proto[h])\n            extend.call(this, h, source[h]);\n        }\n        // copy each of the source object's properties to this object\n        for (var key in source) {\n          if (!proto[key]) extend.call(this, key, source[key]);\n        }\n      }\n      return this;\n    }\n  };\n\n  // initialize\n  Base = Base.extend({\n    constructor: function () {\n      this.extend(arguments[0]);\n    }\n  }, {\n    ancestor: Object,\n    version: '1.1',\n    forEach: function (object, block, context) {\n      for (var key in object) {\n        if (this.prototype[key] === undefined) {\n          block.call(context, object[key], key, object);\n        }\n      }\n    },\n    implement: function () {\n      for (var i = 0; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'function') {\n          // if it's a function, call it\n          arguments[i](this.prototype);\n        } else {\n          // add the interface using the extend method\n          this.prototype.extend(arguments[i]);\n        }\n      }\n      return this;\n    },\n    toString: function () {\n      return String(this.valueOf());\n    }\n  });\n\n  // Return Base implementation\n  return Base;\n});\n","!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.RTree=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){\"use strict\";var rectangle=_dereq_(\"./rectangle\");var bbox=function(ar,obj){if(obj&&obj.bbox){return{leaf:obj,x:obj.bbox[0],y:obj.bbox[1],w:obj.bbox[2]-obj.bbox[0],h:obj.bbox[3]-obj.bbox[1]}}var len=ar.length;var i=0;var a=new Array(len);while(i<len){a[i]=[ar[i][0],ar[i][1]];i++}var first=a[0];len=a.length;i=1;var temp={min:[].concat(first),max:[].concat(first)};while(i<len){if(a[i][0]<temp.min[0]){temp.min[0]=a[i][0]}else if(a[i][0]>temp.max[0]){temp.max[0]=a[i][0]}if(a[i][1]<temp.min[1]){temp.min[1]=a[i][1]}else if(a[i][1]>temp.max[1]){temp.max[1]=a[i][1]}i++}var out={x:temp.min[0],y:temp.min[1],w:temp.max[0]-temp.min[0],h:temp.max[1]-temp.min[1]};if(obj){out.leaf=obj}return out};var geoJSON={};geoJSON.point=function(obj,self){return self.insertSubtree({x:obj.geometry.coordinates[0],y:obj.geometry.coordinates[1],w:0,h:0,leaf:obj},self.root)};geoJSON.multiPointLineString=function(obj,self){return self.insertSubtree(bbox(obj.geometry.coordinates,obj),self.root)};geoJSON.multiLineStringPolygon=function(obj,self){return self.insertSubtree(bbox(Array.prototype.concat.apply([],obj.geometry.coordinates),obj),self.root)};geoJSON.multiPolygon=function(obj,self){return self.insertSubtree(bbox(Array.prototype.concat.apply([],Array.prototype.concat.apply([],obj.geometry.coordinates)),obj),self.root)};geoJSON.makeRec=function(obj){return rectangle(obj.x,obj.y,obj.w,obj.h)};geoJSON.geometryCollection=function(obj,self){if(obj.bbox){return self.insertSubtree({leaf:obj,x:obj.bbox[0],y:obj.bbox[1],w:obj.bbox[2]-obj.bbox[0],h:obj.bbox[3]-obj.bbox[1]},self.root)}var geos=obj.geometry.geometries;var i=0;var len=geos.length;var temp=[];var g;while(i<len){g=geos[i];switch(g.type){case\"Point\":temp.push(geoJSON.makeRec({x:g.coordinates[0],y:g.coordinates[1],w:0,h:0}));break;case\"MultiPoint\":temp.push(geoJSON.makeRec(bbox(g.coordinates)));break;case\"LineString\":temp.push(geoJSON.makeRec(bbox(g.coordinates)));break;case\"MultiLineString\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],g.coordinates))));break;case\"Polygon\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],g.coordinates))));break;case\"MultiPolygon\":temp.push(geoJSON.makeRec(bbox(Array.prototype.concat.apply([],Array.prototype.concat.apply([],g.coordinates)))));break;case\"GeometryCollection\":geos=geos.concat(g.geometries);len=geos.length;break}i++}var first=temp[0];i=1;len=temp.length;while(i<len){first.expand(temp[i]);i++}return self.insertSubtree({leaf:obj,x:first.x(),y:first.y(),h:first.h(),w:first.w()},self.root)};exports.geoJSON=function(prelim){var that=this;var features,feature;if(Array.isArray(prelim)){features=prelim.slice()}else if(prelim.features&&Array.isArray(prelim.features)){features=prelim.features.slice()}else if(prelim instanceof Object){features=[prelim]}else{throw\"this isn't what we're looking for\"}var len=features.length;var i=0;while(i<len){feature=features[i];if(feature.type===\"Feature\"){switch(feature.geometry.type){case\"Point\":geoJSON.point(feature,that);break;case\"MultiPoint\":geoJSON.multiPointLineString(feature,that);break;case\"LineString\":geoJSON.multiPointLineString(feature,that);break;case\"MultiLineString\":geoJSON.multiLineStringPolygon(feature,that);break;case\"Polygon\":geoJSON.multiLineStringPolygon(feature,that);break;case\"MultiPolygon\":geoJSON.multiPolygon(feature,that);break;case\"GeometryCollection\":geoJSON.geometryCollection(feature,that);break}}i++}};exports.bbox=function(){var x1,y1,x2,y2;switch(arguments.length){case 1:x1=arguments[0][0][0];y1=arguments[0][0][1];x2=arguments[0][1][0];y2=arguments[0][1][1];break;case 2:x1=arguments[0][0];y1=arguments[0][1];x2=arguments[1][0];y2=arguments[1][1];break;case 4:x1=arguments[0];y1=arguments[1];x2=arguments[2];y2=arguments[3];break}return this.search({x:x1,y:y1,w:x2-x1,h:y2-y1})}},{\"./rectangle\":3}],2:[function(_dereq_,module,exports){\"use strict\";var RTree=_dereq_(\"./rtree\");var geojson=_dereq_(\"./geojson\");RTree.prototype.bbox=geojson.bbox;RTree.prototype.geoJSON=geojson.geoJSON;RTree.Rectangle=_dereq_(\"./rectangle\");module.exports=RTree},{\"./geojson\":1,\"./rectangle\":3,\"./rtree\":4}],3:[function(_dereq_,module,exports){\"use strict\";function Rectangle(x,y,w,h){if(!(this instanceof Rectangle)){return new Rectangle(x,y,w,h)}var x2,y2,p;if(x.x){w=x.w;h=x.h;y=x.y;if(x.w!==0&&!x.w&&x.x2){w=x.x2-x.x;h=x.y2-x.y}else{w=x.w;h=x.h}x=x.x;x2=x+w;y2=y+h;p=h+w?false:true}else{x2=x+w;y2=y+h;p=h+w?false:true}this.x1=this.x=function(){return x};this.y1=this.y=function(){return y};this.x2=function(){return x2};this.y2=function(){return y2};this.w=function(){return w};this.h=function(){return h};this.p=function(){return p};this.overlap=function(a){if(p||a.p()){return x<=a.x2()&&x2>=a.x()&&y<=a.y2()&&y2>=a.y()}return x<a.x2()&&x2>a.x()&&y<a.y2()&&y2>a.y()};this.expand=function(a){var nx,ny;var ax=a.x();var ay=a.y();var ax2=a.x2();var ay2=a.y2();if(x>ax){nx=ax}else{nx=x}if(y>ay){ny=ay}else{ny=y}if(x2>ax2){w=x2-nx}else{w=ax2-nx}if(y2>ay2){h=y2-ny}else{h=ay2-ny}x=nx;y=ny;return this}}Rectangle.overlapRectangle=function(a,b){if(a.h===0&&a.w===0||b.h===0&&b.w===0){return a.x<=b.x+b.w&&a.x+a.w>=b.x&&a.y<=b.y+b.h&&a.y+a.h>=b.y}else{return a.x<b.x+b.w&&a.x+a.w>b.x&&a.y<b.y+b.h&&a.y+a.h>b.y}};Rectangle.containsRectangle=function(a,b){return a.x+a.w<=b.x+b.w&&a.x>=b.x&&a.y+a.h<=b.y+b.h&&a.y>=b.y};Rectangle.expandRectangle=function(a,b){var nx,ny;var axw=a.x+a.w;var bxw=b.x+b.w;var ayh=a.y+a.h;var byh=b.y+b.h;if(a.x>b.x){nx=b.x}else{nx=a.x}if(a.y>b.y){ny=b.y}else{ny=a.y}if(axw>bxw){a.w=axw-nx}else{a.w=bxw-nx}if(ayh>byh){a.h=ayh-ny}else{a.h=byh-ny}a.x=nx;a.y=ny;return a};Rectangle.makeMBR=function(nodes,rect){if(!nodes.length){return{x:0,y:0,w:0,h:0}}rect=rect||{};rect.x=nodes[0].x;rect.y=nodes[0].y;rect.w=nodes[0].w;rect.h=nodes[0].h;for(var i=1,len=nodes.length;i<len;i++){Rectangle.expandRectangle(rect,nodes[i])}return rect};Rectangle.squarifiedRatio=function(l,w,fill){var lperi=(l+w)/2;var larea=l*w;var lgeo=larea/(lperi*lperi);return larea*fill/lgeo};module.exports=Rectangle},{}],4:[function(_dereq_,module,exports){\"use strict\";var rectangle=_dereq_(\"./rectangle\");function RTree(width){if(!(this instanceof RTree)){return new RTree(width)}var minWidth=3;var maxWidth=6;if(!isNaN(width)){minWidth=Math.floor(width/2);maxWidth=width}var rootTree={x:0,y:0,w:0,h:0,id:\"root\",nodes:[]};this.root=rootTree;var flatten=function(tree){var todo=tree.slice();var done=[];var current;while(todo.length){current=todo.pop();if(current.nodes){todo=todo.concat(current.nodes)}else if(current.leaf){done.push(current)}}return done};var removeSubtree=function(rect,obj,root){var hitStack=[];var countStack=[];var retArray=[];var currentDepth=1;var tree,i,ltree;if(!rect||!rectangle.overlapRectangle(rect,root)){return retArray}var retObj={x:rect.x,y:rect.y,w:rect.w,h:rect.h,target:obj};countStack.push(root.nodes.length);hitStack.push(root);while(hitStack.length>0){tree=hitStack.pop();i=countStack.pop()-1;if(\"target\"in retObj){while(i>=0){ltree=tree.nodes[i];if(rectangle.overlapRectangle(retObj,ltree)){if(retObj.target&&\"leaf\"in ltree&&ltree.leaf===retObj.target||!retObj.target&&(\"leaf\"in ltree||rectangle.containsRectangle(ltree,retObj))){if(\"nodes\"in ltree){retArray=flatten(tree.nodes.splice(i,1))}else{retArray=tree.nodes.splice(i,1)}rectangle.makeMBR(tree.nodes,tree);delete retObj.target;break}else if(\"nodes\"in ltree){currentDepth++;countStack.push(i);hitStack.push(tree);tree=ltree;i=ltree.nodes.length}}i--}}else if(\"nodes\"in retObj){tree.nodes.splice(i+1,1);if(tree.nodes.length>0){rectangle.makeMBR(tree.nodes,tree)}for(var t=0;t<retObj.nodes.length;t++){insertSubtree(retObj.nodes[t],tree)}retObj.nodes=[];if(hitStack.length===0&&tree.nodes.length<=1){retObj.nodes=searchSubtree(tree,true,retObj.nodes,tree);tree.nodes=[];hitStack.push(tree);countStack.push(1)}else if(hitStack.length>0&&tree.nodes.length<minWidth){retObj.nodes=searchSubtree(tree,true,retObj.nodes,tree);tree.nodes=[]}else{delete retObj.nodes}}else{rectangle.makeMBR(tree.nodes,tree)}currentDepth-=1}return retArray};var chooseLeafSubtree=function(rect,root){var bestChoiceIndex=-1;var bestChoiceStack=[];var bestChoiceArea;var first=true;bestChoiceStack.push(root);var nodes=root.nodes;while(first||bestChoiceIndex!==-1){if(first){first=false}else{bestChoiceStack.push(nodes[bestChoiceIndex]);nodes=nodes[bestChoiceIndex].nodes;bestChoiceIndex=-1}for(var i=nodes.length-1;i>=0;i--){var ltree=nodes[i];if(\"leaf\"in ltree){bestChoiceIndex=-1;break}var oldLRatio=rectangle.squarifiedRatio(ltree.w,ltree.h,ltree.nodes.length+1);var nw=Math.max(ltree.x+ltree.w,rect.x+rect.w)-Math.min(ltree.x,rect.x);var nh=Math.max(ltree.y+ltree.h,rect.y+rect.h)-Math.min(ltree.y,rect.y);var lratio=rectangle.squarifiedRatio(nw,nh,ltree.nodes.length+2);if(bestChoiceIndex<0||Math.abs(lratio-oldLRatio)<bestChoiceArea){bestChoiceArea=Math.abs(lratio-oldLRatio);bestChoiceIndex=i}}}return bestChoiceStack};var linearSplit=function(nodes){var n=pickLinear(nodes);while(nodes.length>0){pickNext(nodes,n[0],n[1])}return n};var pickNext=function(nodes,a,b){var areaA=rectangle.squarifiedRatio(a.w,a.h,a.nodes.length+1);var areaB=rectangle.squarifiedRatio(b.w,b.h,b.nodes.length+1);var highAreaDelta;var highAreaNode;var lowestGrowthGroup;for(var i=nodes.length-1;i>=0;i--){var l=nodes[i];var newAreaA={};newAreaA.x=Math.min(a.x,l.x);newAreaA.y=Math.min(a.y,l.y);newAreaA.w=Math.max(a.x+a.w,l.x+l.w)-newAreaA.x;newAreaA.h=Math.max(a.y+a.h,l.y+l.h)-newAreaA.y;var changeNewAreaA=Math.abs(rectangle.squarifiedRatio(newAreaA.w,newAreaA.h,a.nodes.length+2)-areaA);var newAreaB={};newAreaB.x=Math.min(b.x,l.x);newAreaB.y=Math.min(b.y,l.y);newAreaB.w=Math.max(b.x+b.w,l.x+l.w)-newAreaB.x;newAreaB.h=Math.max(b.y+b.h,l.y+l.h)-newAreaB.y;var changeNewAreaB=Math.abs(rectangle.squarifiedRatio(newAreaB.w,newAreaB.h,b.nodes.length+2)-areaB);if(!highAreaNode||!highAreaDelta||Math.abs(changeNewAreaB-changeNewAreaA)<highAreaDelta){highAreaNode=i;highAreaDelta=Math.abs(changeNewAreaB-changeNewAreaA);lowestGrowthGroup=changeNewAreaB<changeNewAreaA?b:a}}var tempNode=nodes.splice(highAreaNode,1)[0];if(a.nodes.length+nodes.length+1<=minWidth){a.nodes.push(tempNode);rectangle.expandRectangle(a,tempNode)}else if(b.nodes.length+nodes.length+1<=minWidth){b.nodes.push(tempNode);rectangle.expandRectangle(b,tempNode)}else{lowestGrowthGroup.nodes.push(tempNode);rectangle.expandRectangle(lowestGrowthGroup,tempNode)}};var pickLinear=function(nodes){var lowestHighX=nodes.length-1;var highestLowX=0;var lowestHighY=nodes.length-1;var highestLowY=0;var t1,t2;for(var i=nodes.length-2;i>=0;i--){var l=nodes[i];if(l.x>nodes[highestLowX].x){highestLowX=i}else if(l.x+l.w<nodes[lowestHighX].x+nodes[lowestHighX].w){lowestHighX=i}if(l.y>nodes[highestLowY].y){highestLowY=i}else if(l.y+l.h<nodes[lowestHighY].y+nodes[lowestHighY].h){lowestHighY=i}}var dx=Math.abs(nodes[lowestHighX].x+nodes[lowestHighX].w-nodes[highestLowX].x);var dy=Math.abs(nodes[lowestHighY].y+nodes[lowestHighY].h-nodes[highestLowY].y);if(dx>dy){if(lowestHighX>highestLowX){t1=nodes.splice(lowestHighX,1)[0];t2=nodes.splice(highestLowX,1)[0]}else{t2=nodes.splice(highestLowX,1)[0];t1=nodes.splice(lowestHighX,1)[0]}}else{if(lowestHighY>highestLowY){t1=nodes.splice(lowestHighY,1)[0];t2=nodes.splice(highestLowY,1)[0]}else{t2=nodes.splice(highestLowY,1)[0];t1=nodes.splice(lowestHighY,1)[0]}}return[{x:t1.x,y:t1.y,w:t1.w,h:t1.h,nodes:[t1]},{x:t2.x,y:t2.y,w:t2.w,h:t2.h,nodes:[t2]}]};var attachData=function(node,moreTree){node.nodes=moreTree.nodes;node.x=moreTree.x;node.y=moreTree.y;node.w=moreTree.w;node.h=moreTree.h;return node};var searchSubtree=function(rect,returnNode,returnArray,root){var hitStack=[];if(!rectangle.overlapRectangle(rect,root)){return returnArray}hitStack.push(root.nodes);while(hitStack.length>0){var nodes=hitStack.pop();for(var i=nodes.length-1;i>=0;i--){var ltree=nodes[i];if(rectangle.overlapRectangle(rect,ltree)){if(\"nodes\"in ltree){hitStack.push(ltree.nodes)}else if(\"leaf\"in ltree){if(!returnNode){returnArray.push(ltree.leaf)}else{returnArray.push(ltree)}}}}}return returnArray};var insertSubtree=function(node,root){var bc;if(root.nodes.length===0){root.x=node.x;root.y=node.y;root.w=node.w;root.h=node.h;root.nodes.push(node);return}var treeStack=chooseLeafSubtree(node,root);var retObj=node;var pbc;while(treeStack.length>0){if(bc&&\"nodes\"in bc&&bc.nodes.length===0){pbc=bc;bc=treeStack.pop();for(var t=0;t<bc.nodes.length;t++){if(bc.nodes[t]===pbc||bc.nodes[t].nodes.length===0){bc.nodes.splice(t,1);break}}}else{bc=treeStack.pop()}if(\"leaf\"in retObj||\"nodes\"in retObj||Array.isArray(retObj)){if(Array.isArray(retObj)){for(var ai=0;ai<retObj.length;ai++){rectangle.expandRectangle(bc,retObj[ai])}bc.nodes=bc.nodes.concat(retObj)}else{rectangle.expandRectangle(bc,retObj);bc.nodes.push(retObj)}if(bc.nodes.length<=maxWidth){retObj={x:bc.x,y:bc.y,w:bc.w,h:bc.h}}else{var a=linearSplit(bc.nodes);retObj=a;if(treeStack.length<1){bc.nodes.push(a[0]);treeStack.push(bc);retObj=a[1]}}}else{rectangle.expandRectangle(bc,retObj);retObj={x:bc.x,y:bc.y,w:bc.w,h:bc.h}}}};this.insertSubtree=insertSubtree;this.getTree=function(){return rootTree};this.setTree=function(newTree,where){if(!where){where=rootTree}return attachData(where,newTree)};this.search=function(rect,returnNode,returnArray){returnArray=returnArray||[];return searchSubtree(rect,returnNode,returnArray,rootTree)};var removeArea=function(rect){var numberDeleted=1,retArray=[],deleted;while(numberDeleted>0){deleted=removeSubtree(rect,false,rootTree);numberDeleted=deleted.length;retArray=retArray.concat(deleted)}return retArray};var removeObj=function(rect,obj){var retArray=removeSubtree(rect,obj,rootTree);return retArray};this.remove=function(rect,obj){if(!obj||typeof obj===\"function\"){return removeArea(rect,obj)}else{return removeObj(rect,obj)}};this.insert=function(rect,obj){var retArray=insertSubtree({x:rect.x,y:rect.y,w:rect.w,h:rect.h,leaf:obj},rootTree);return retArray}}RTree.prototype.toJSON=function(printing){return JSON.stringify(this.root,false,printing)};RTree.fromJSON=function(json){var rt=new RTree;rt.setTree(JSON.parse(json));return rt};module.exports=RTree;if(typeof Array.isArray!==\"function\"){Array.isArray=function(a){return typeof a===\"object\"&&{}.toString.call(a)===\"[object Array]\"}}},{\"./rectangle\":3}]},{},[2])(2)});","(function(){function C(){}function A(){this.was=[0]}function B(a,b,c){this.hufts=new Int32Array(4320);this.window=new Uint8Array(c);this.end=c;this.checkfn=b;this.mode=0;this.reset(a,null);this.index=this.table=this.left=0;this.blens=null;this.bb=new Int32Array(1);this.tb=new Int32Array(1);this.codes=new D;this.check=this.write=this.read=this.bitb=this.bitk=this.last=0;this.inftree=new E}function D(){}function E(){}function y(a,b,c,d,h){if(0!=h){if(!a)throw\"Undef src\";if(!c)throw\"Undef dest\";if(0==\nb&&h==a.length)c.set(a,d);else if(T)a=a.subarray(b,b+h),c.set(a,d);else if(1==a.BYTES_PER_ELEMENT&&100<h)a=new Uint8Array(a.buffer,a.byteOffset+b,h),c.set(a,d);else for(var f=0;f<h;++f)c[d+f]=a[b+f]}}function J(a,b,c,d){a=b?c?new Uint8Array(a,b,c):new Uint8Array(a,b,a.byteLength-b):new Uint8Array(a);c=new C;c.inflateInit(15,!0);c.next_in=a;c.next_in_index=0;c.avail_in=a.length;a=[];for(var h=0;;){var f=new Uint8Array(32E3);c.next_out=f;c.next_out_index=0;c.avail_out=f.length;var g=c.inflate(0);if(0!=\ng&&1!=g&&-5!=g)throw c.msg;if(0!=c.avail_out){var e=new Uint8Array(f.length-c.avail_out);y(f,0,e,0,f.length-c.avail_out);f=e}a.push(f);h+=f.length;if(1==g||-5==g)break}d&&(d[0]=(b||0)+c.next_in_index);if(1==a.length)return a[0].buffer;b=new Uint8Array(h);for(c=d=0;c<a.length;++c)h=a[c],y(h,0,b,d,h.length),d+=h.length;return b.buffer}function K(a,b){this.block=a;this.offset=b}function G(a,b,c){var d=4294967296*(a[b+6]&255)+16777216*(a[b+5]&255)+65536*(a[b+4]&255)+256*(a[b+3]&255)+(a[b+2]&255);a=a[b+\n1]<<8|a[b];return 0!=d||0!=a||c?new K(d,a):null}function L(a,b){b=Math.min(b||1,a.byteLength-50);for(var c=[],d=[0],h=0;d[0]<b;){var f=new Uint8Array(a,d[0],12),f=f[11]<<8|f[10],f=J(a,12+f+d[0],Math.min(65536,a.byteLength-12-f-d[0]),d);d[0]+=8;h+=f.byteLength;c.push(f)}if(1==c.length)return c[0];d=new Uint8Array(h);for(f=h=0;f<c.length;++f){var g=new Uint8Array(c[f]);y(g,0,d,h,g.length);h+=g.length}return d.buffer}function M(a,b){this.minv=a;this.maxv=b}function U(a,b){var c,d=[];--b;d.push(0);for(c=\n1+(a>>26);c<=1+(b>>26);++c)d.push(c);for(c=9+(a>>23);c<=9+(b>>23);++c)d.push(c);for(c=73+(a>>20);c<=73+(b>>20);++c)d.push(c);for(c=585+(a>>17);c<=585+(b>>17);++c)d.push(c);for(c=4681+(a>>14);c<=4681+(b>>14);++c)d.push(c);return d}function F(a){this.blob=a}function z(a,b,c,d){d||(\"object\"===typeof b?(d=b,b=void 0):d={});this.url=a;this.start=b||0;c&&(this.end=c);this.opts=d}function N(a){if(!a)return null;for(var b=new Uint8Array(a.length),c=0;c<b.length;++c)b[c]=a.charCodeAt(c);return b.buffer}function O(a,\nb){var c=new ArrayBuffer(8),d=new Uint8Array(c),c=new Float32Array(c);d[0]=a[b];d[1]=a[b+1];d[2]=a[b+2];d[3]=a[b+3];return c[0]}function t(a,b){return a[b+3]<<24|a[b+2]<<16|a[b+1]<<8|a[b]}function P(a,b){return a[b+1]<<8|a[b]}function V(a,b){return a[b]}function H(){}function Q(a,b,c,d,h){function f(a){if(!a)return d(null,\"Couldn't access BAM\");a=L(a,a.byteLength);a=new Uint8Array(a);var b=t(a,0);if(21840194!=b)return d(null,\"Not a BAM file, magic=0x\"+b.toString(16));for(var c=t(a,4),e=\"\",b=0;b<c;++b)e+=\nString.fromCharCode(a[b+8]);e=t(a,c+8);c+=12;g.chrToIndex={};g.indexToChr=[];for(b=0;b<e;++b){for(var f=t(a,c),h=\"\",k=0;k<f-1;++k)h+=String.fromCharCode(a[c+4+k]);t(a,c+f+4);g.chrToIndex[h]=b;0==h.indexOf(\"chr\")?g.chrToIndex[h.substring(3)]=b:g.chrToIndex[\"chr\"+h]=b;g.indexToChr.push(h);c=c+8+f}if(g.indices)return d(g)}var g=new H;g.data=a;g.bai=b;g.indexChunks=c;var e=g.indexChunks?g.indexChunks.minBlockIndex:1E9;if(g.indexChunks){b=g.indexChunks.chunks;g.indices=[];for(var k=0;k<b.length;k++)g.indices[k]=\nnull;g.data.slice(0,e).fetch(f)}else g.bai.fetch(function(b){var k,q,n;if(b){var l=new Uint8Array(b),u=t(l,0);if(21578050!=u)b=d(null,\"Not a BAI file, magic=0x\"+u.toString(16));else{u=t(l,4);g.indices=[];for(var s=8,w=0;w<u;++w){var I=s;k=l;var r=n=I;q=t(k,r);for(var r=r+4,v=0;v<q;++v){t(k,r);var x=t(k,r+4),r=r+(8+16*x)}for(var v=t(k,r),r=r+4,x=1E9,y=r,A=0;A<v;++A){var z=G(k,y),y=y+8;if(z){k=z.block;0<z.offset&&(k+=65536);k<x&&(x=k);break}}r+=8*v;k=x;n=r-n;s+=n;e=Math.min(k,e);0<q&&(g.indices[w]=\nnew Uint8Array(b,I,s-I))}b=!0}}else b=\"Couldn't access BAI\";!0!==b?g.bai.url&&\"undefined\"===typeof h?(g.bai.url=g.data.url.replace(/.bam$/,\".bai\"),Q(a,g.bai,c,d,!0)):d(null,b):g.data.slice(0,e).fetch(f)})}function W(){}var x=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],X=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,\n0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,\n138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,\n80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,\n23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,\n0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,\n205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,\n0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,\n7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],Y=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],Z=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,\n115,131,163,195,227,258,0,0],aa=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],ba=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];C.prototype.inflateInit=function(a,b){a||(a=15);b&&(b=!1);this.istate=new A;return this.istate.inflateInit(this,b?-a:a)};C.prototype.inflate=function(a){return null==this.istate?-2:this.istate.inflate(this,a)};C.prototype.inflateEnd=\nfunction(){if(null==this.istate)return-2;var a=istate.inflateEnd(this);this.istate=null;return a};C.prototype.inflateSync=function(){return istate.inflateSync(this)};C.prototype.inflateSetDictionary=function(a,b){return istate.inflateSetDictionary(this,a,b)};A.prototype.inflateReset=function(a){if(null==a||null==a.istate)return-2;a.total_in=a.total_out=0;a.msg=null;a.istate.mode=0!=a.istate.nowrap?7:0;a.istate.blocks.reset(a,null);return 0};A.prototype.inflateEnd=function(a){null!=this.blocks&&this.blocks.free(a);\nthis.blocks=null;return 0};A.prototype.inflateInit=function(a,b){this.blocks=a.msg=null;nowrap=0;0>b&&(b=-b,nowrap=1);if(8>b||15<b)return this.inflateEnd(a),-2;this.wbits=b;a.istate.blocks=new B(a,0!=a.istate.nowrap?null:this,1<<b);this.inflateReset(a);return 0};A.prototype.inflate=function(a,b){var c,d;if(null==a||null==a.istate||null==a.next_in)return-2;b=4==b?-5:0;for(c=-5;;)switch(a.istate.mode){case 0:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;if(8!=((a.istate.method=a.next_in[a.next_in_index++])&\n15)){a.istate.mode=13;a.msg=\"unknown compression method\";a.istate.marker=5;break}if((a.istate.method>>4)+8>a.istate.wbits){a.istate.mode=13;a.msg=\"invalid window size\";a.istate.marker=5;break}a.istate.mode=1;case 1:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;d=a.next_in[a.next_in_index++]&255;if(0!=((a.istate.method<<8)+d)%31){a.istate.mode=13;a.msg=\"incorrect header check\";a.istate.marker=5;break}if(0==(d&32)){a.istate.mode=7;break}a.istate.mode=2;case 2:if(0==a.avail_in)return c;c=b;\na.avail_in--;a.total_in++;a.istate.need=(a.next_in[a.next_in_index++]&255)<<24&4278190080;a.istate.mode=3;case 3:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<16&16711680;a.istate.mode=4;case 4:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<8&65280;a.istate.mode=5;case 5:if(0==a.avail_in)return c;a.avail_in--;a.total_in++;a.istate.need+=a.next_in[a.next_in_index++]&255;a.adler=\na.istate.need;a.istate.mode=6;return 2;case 6:return a.istate.mode=13,a.msg=\"need dictionary\",a.istate.marker=0,-2;case 7:c=a.istate.blocks.proc(a,c);if(-3==c){a.istate.mode=13;a.istate.marker=0;break}0==c&&(c=b);if(1!=c)return c;c=b;a.istate.blocks.reset(a,a.istate.was);if(0!=a.istate.nowrap){a.istate.mode=12;break}a.istate.mode=8;case 8:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need=(a.next_in[a.next_in_index++]&255)<<24&4278190080;a.istate.mode=9;case 9:if(0==a.avail_in)return c;\nc=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<16&16711680;a.istate.mode=10;case 10:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=(a.next_in[a.next_in_index++]&255)<<8&65280;a.istate.mode=11;case 11:if(0==a.avail_in)return c;c=b;a.avail_in--;a.total_in++;a.istate.need+=a.next_in[a.next_in_index++]&255;if(a.istate.was[0]!=a.istate.need){a.istate.mode=13;a.msg=\"incorrect data check\";a.istate.marker=5;break}a.istate.mode=12;case 12:return 1;\ncase 13:return-3;default:return-2}};A.prototype.inflateSetDictionary=function(a,b,c){var d=0,h=c;if(null==a||null==a.istate||6!=a.istate.mode)return-2;if(a._adler.adler32(1,b,0,c)!=a.adler)return-3;a.adler=a._adler.adler32(0,null,0,0);h>=1<<a.istate.wbits&&(h=(1<<a.istate.wbits)-1,d=c-h);a.istate.blocks.set_dictionary(b,d,h);a.istate.mode=7;return 0};var da=[0,0,255,255];A.prototype.inflateSync=function(a){var b,c,d;if(null==a||null==a.istate)return-2;13!=a.istate.mode&&(a.istate.mode=13,a.istate.marker=\n0);if(0==(b=a.avail_in))return-5;c=a.next_in_index;for(d=a.istate.marker;0!=b&&4>d;)a.next_in[c]==da[d]?d++:d=0!=a.next_in[c]?0:4-d,c++,b--;a.total_in+=c-a.next_in_index;a.next_in_index=c;a.avail_in=b;a.istate.marker=d;if(4!=d)return-3;b=a.total_in;c=a.total_out;this.inflateReset(a);a.total_in=b;a.total_out=c;a.istate.mode=7;return 0};A.prototype.inflateSyncPoint=function(a){return null==a||null==a.istate||null==a.istate.blocks?-2:a.istate.blocks.sync_point()};var R=[16,17,18,0,8,7,9,6,10,5,11,4,\n12,3,13,2,14,1,15];B.prototype.reset=function(a,b){b&&(b[0]=this.check);6==this.mode&&this.codes.free(a);this.read=this.write=this.bitb=this.bitk=this.mode=0;this.checkfn&&(a.adler=this.check=a._adler.adler32(0,null,0,0))};B.prototype.proc=function(a,b){var c,d,h,f,g,e,k;f=a.next_in_index;g=a.avail_in;d=this.bitb;h=this.bitk;e=this.write;for(k=e<this.read?this.read-e-1:this.end-e;;)switch(this.mode){case 0:for(;3>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,\na.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}c=d&7;this.last=c&1;switch(c>>>1){case 0:d>>>=3;h-=3;c=h&7;d>>>=c;h-=c;this.mode=1;break;case 1:var m=new Int32Array(1),p=new Int32Array(1),q=[],n=[];c=p;var l=q,u=n;m[0]=9;c[0]=5;l[0]=X;u[0]=Y;this.codes.init(m[0],p[0],q[0],0,n[0],0,a);d>>>=3;h-=3;this.mode=6;break;case 2:d>>>=3;h-=3;this.mode=3;break;case 3:return d>>>=3,h-=3,this.mode=13,a.msg=\"invalid block type\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=\ng,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b)}break;case 1:for(;32>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}if((~d>>>16&65535)!=(d&65535))return this.mode=13,a.msg=\"invalid stored block lengths\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,\nb);this.left=d&65535;d=h=0;this.mode=0!=this.left?2:0!=this.last?7:0;break;case 2:if(0==g)return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,write=e,this.inflate_flush(a,b);if(0==k&&(e==end&&0!=read&&(e=0,k=e<this.read?this.read-e-1:this.end-e),0==k&&(this.write=e,b=this.inflate_flush(a,b),e=this.write,k=e<this.read?this.read-e-1:this.end-e,e==this.end&&0!=this.read&&(e=0,k=e<this.read?this.read-e-1:this.end-e),0==k)))return this.bitb=d,this.bitk=h,a.avail_in=\ng,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);b=0;c=this.left;c>g&&(c=g);c>k&&(c=k);y(a.next_in,f,this.window,e,c);f+=c;g-=c;e+=c;k-=c;if(0!=(this.left-=c))break;this.mode=0!=this.last?7:0;break;case 3:for(;14>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}this.table=c=d&16383;if(29<(c&31)||29<(c>>5&31))return this.mode=\n9,a.msg=\"too many length or distance symbols\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);c=258+(c&31)+(c>>5&31);if(null==this.blens||this.blens.length<c)this.blens=new Int32Array(c);else for(k=0;k<c;k++)this.blens[k]=0;d>>>=14;h-=14;this.index=0;mode=4;case 4:for(;this.index<4+(this.table>>>10);){for(;3>h;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,\nthis.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}this.blens[R[this.index++]]=d&7;d>>>=3;h-=3}for(;19>this.index;)this.blens[R[this.index++]]=0;this.bb[0]=7;c=this.inftree.inflate_trees_bits(this.blens,this.bb,this.tb,this.hufts,a);if(0!=c)return b=c,-3==b&&(this.blens=null,this.mode=9),this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,write=e,this.inflate_flush(a,b);this.index=0;this.mode=5;case 5:for(;;){c=this.table;if(!(this.index<258+\n(c&31)+(c>>5&31)))break;for(c=this.bb[0];h<c;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}c=this.hufts[3*(this.tb[0]+(d&x[c]))+1];p=this.hufts[3*(this.tb[0]+(d&x[c]))+2];if(16>p)d>>>=c,h-=c,this.blens[this.index++]=p;else{k=18==p?7:p-14;for(m=18==p?11:3;h<c+k;){if(0!=g)b=0;else return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=\nf,this.write=e,this.inflate_flush(a,b);g--;d|=(a.next_in[f++]&255)<<h;h+=8}d>>>=c;h-=c;m+=d&x[k];d>>>=k;h-=k;k=this.index;c=this.table;if(k+m>258+(c&31)+(c>>5&31)||16==p&&1>k)return this.blens=null,this.mode=9,a.msg=\"invalid bit length repeat\",b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);p=16==p?this.blens[k-1]:0;do this.blens[k++]=p;while(0!=--m);this.index=k}}this.tb[0]=-1;m=new Int32Array(1);p=new Int32Array(1);q=\nnew Int32Array(1);n=new Int32Array(1);m[0]=9;p[0]=6;c=this.table;c=this.inftree.inflate_trees_dynamic(257+(c&31),1+(c>>5&31),this.blens,m,p,q,n,this.hufts,a);if(0!=c)return-3==c&&(this.blens=null,this.mode=13),b=c,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);this.codes.init(m[0],p[0],this.hufts,q[0],this.hufts,n[0],a);this.mode=6;case 6:this.bitb=d;this.bitk=h;a.avail_in=g;a.total_in+=f-a.next_in_index;a.next_in_index=f;\nthis.write=e;if(1!=(b=this.codes.proc(this,a,b)))return this.inflate_flush(a,b);b=0;this.codes.free(a);f=a.next_in_index;g=a.avail_in;d=this.bitb;h=this.bitk;e=this.write;k=e<this.read?this.read-e-1:this.end-e;if(0==this.last){this.mode=0;break}this.mode=7;case 7:this.write=e;b=this.inflate_flush(a,b);e=this.write;if(this.read!=this.write)return this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);mode=12;case 8:return b=1,this.bitb=\nd,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);case 9:return b=-3,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b);default:return b=-2,this.bitb=d,this.bitk=h,a.avail_in=g,a.total_in+=f-a.next_in_index,a.next_in_index=f,this.write=e,this.inflate_flush(a,b)}};B.prototype.free=function(a){this.reset(a,null);this.hufts=this.window=null};B.prototype.set_dictionary=\nfunction(a,b,c){y(a,b,window,0,c);this.read=this.write=c};B.prototype.sync_point=function(){return 1==this.mode};B.prototype.inflate_flush=function(a,b){var c,d,h;d=a.next_out_index;h=this.read;c=(h<=this.write?this.write:this.end)-h;c>a.avail_out&&(c=a.avail_out);0!=c&&-5==b&&(b=0);a.avail_out-=c;a.total_out+=c;null!=this.checkfn&&(a.adler=this.check=a._adler.adler32(this.check,this.window,h,c));y(this.window,h,a.next_out,d,c);d+=c;h+=c;h==this.end&&(h=0,this.write==this.end&&(this.write=0),c=this.write-\nh,c>a.avail_out&&(c=a.avail_out),0!=c&&-5==b&&(b=0),a.avail_out-=c,a.total_out+=c,null!=this.checkfn&&(a.adler=this.check=a._adler.adler32(this.check,this.window,h,c)),y(this.window,h,a.next_out,d,c),d+=c,h+=c);a.next_out_index=d;this.read=h;return b};D.prototype.init=function(a,b,c,d,h,f,g){this.mode=0;this.lbits=a;this.dbits=b;this.ltree=c;this.ltree_index=d;this.dtree=h;this.dtree_index=f;this.tree=null};D.prototype.proc=function(a,b,c){var d,h,f=0,g=0,e=0,k,m,p,e=b.next_in_index;k=b.avail_in;\nf=a.bitb;g=a.bitk;m=a.write;for(p=m<a.read?a.read-m-1:a.end-m;;)switch(this.mode){case 0:if(258<=p&&10<=k&&(a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,c=this.inflate_fast(this.lbits,this.dbits,this.ltree,this.ltree_index,this.dtree,this.dtree_index,a,b),e=b.next_in_index,k=b.avail_in,f=a.bitb,g=a.bitk,m=a.write,p=m<a.read?a.read-m-1:a.end-m,0!=c)){this.mode=1==c?7:9;break}this.need=this.lbits;this.tree=this.ltree;this.tree_index=this.ltree_index;this.mode=\n1;case 1:for(d=this.need;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}d=3*(this.tree_index+(f&x[d]));f>>>=this.tree[d+1];g-=this.tree[d+1];h=this.tree[d];if(0==h){this.lit=this.tree[d+2];this.mode=6;break}if(0!=(h&16)){this.get=h&15;this.len=this.tree[d+2];this.mode=2;break}if(0==(h&64)){this.need=h;this.tree_index=d/3+this.tree[d+2];break}if(0!=(h&32)){this.mode=7;break}this.mode=\n9;b.msg=\"invalid literal/length code\";c=-3;a.bitb=f;a.bitk=g;b.avail_in=k;b.total_in+=e-b.next_in_index;b.next_in_index=e;a.write=m;return a.inflate_flush(b,c);case 2:for(d=this.get;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}this.len+=f&x[d];f>>=d;g-=d;this.need=this.dbits;this.tree=this.dtree;this.tree_index=this.dtree_index;this.mode=3;case 3:for(d=this.need;g<d;){if(0!=\nk)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}d=3*(this.tree_index+(f&x[d]));f>>=this.tree[d+1];g-=this.tree[d+1];h=this.tree[d];if(0!=(h&16)){this.get=h&15;this.dist=this.tree[d+2];this.mode=4;break}if(0==(h&64)){this.need=h;this.tree_index=d/3+this.tree[d+2];break}this.mode=9;b.msg=\"invalid distance code\";c=-3;a.bitb=f;a.bitk=g;b.avail_in=k;b.total_in+=e-b.next_in_index;b.next_in_index=\ne;a.write=m;return a.inflate_flush(b,c);case 4:for(d=this.get;g<d;){if(0!=k)c=0;else return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);k--;f|=(b.next_in[e++]&255)<<g;g+=8}this.dist+=f&x[d];f>>=d;g-=d;this.mode=5;case 5:for(d=m-this.dist;0>d;)d+=a.end;for(;0!=this.len;){if(0==p&&(m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p&&(a.write=m,c=a.inflate_flush(b,c),m=a.write,p=m<a.read?a.read-m-1:a.end-m,m==a.end&&0!=a.read&&\n(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p)))return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);a.window[m++]=a.window[d++];p--;d==a.end&&(d=0);this.len--}this.mode=0;break;case 6:if(0==p&&(m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p&&(a.write=m,c=a.inflate_flush(b,c),m=a.write,p=m<a.read?a.read-m-1:a.end-m,m==a.end&&0!=a.read&&(m=0,p=m<a.read?a.read-m-1:a.end-m),0==p)))return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=\ne-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);c=0;a.window[m++]=this.lit;p--;this.mode=0;break;case 7:7<g&&(g-=8,k++,e--);a.write=m;c=a.inflate_flush(b,c);m=a.write;if(a.read!=a.write)return a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);this.mode=8;case 8:return c=1,a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);case 9:return c=-3,a.bitb=f,a.bitk=g,b.avail_in=\nk,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c);default:return c=-2,a.bitb=f,a.bitk=g,b.avail_in=k,b.total_in+=e-b.next_in_index,b.next_in_index=e,a.write=m,a.inflate_flush(b,c)}};D.prototype.free=function(a){};D.prototype.inflate_fast=function(a,b,c,d,h,f,g,e){var k,m,p,q,n,l,u,s,w,t,r,v;l=e.next_in_index;u=e.avail_in;q=g.bitb;n=g.bitk;s=g.write;w=s<g.read?g.read-s-1:g.end-s;a=x[a];t=x[b];do{for(;20>n;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=q&a;m=c;p=d;v=3*(p+k);if(0==\n(b=m[v]))q>>=m[v+1],n-=m[v+1],g.window[s++]=m[v+2],w--;else{do{q>>=m[v+1];n-=m[v+1];if(0!=(b&16)){b&=15;r=m[v+2]+(q&x[b]);q>>=b;for(n-=b;15>n;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=q&t;m=h;p=f;v=3*(p+k);b=m[v];do if(q>>=m[v+1],n-=m[v+1],0!=(b&16)){for(b&=15;n<b;)u--,q|=(e.next_in[l++]&255)<<n,n+=8;k=m[v+2]+(q&x[b]);q>>=b;n-=b;w-=r;if(s>=k)k=s-k,g.window[s++]=g.window[k++],g.window[s++]=g.window[k++],r-=2;else{k=s-k;do k+=g.end;while(0>k);b=g.end-k;if(r>b){r-=b;if(0<s-k&&b>s-k){do g.window[s++]=g.window[k++];\nwhile(0!=--b)}else y(g.window,k,g.window,s,b),s+=b;k=0}}do g.window[s++]=g.window[k++];while(0!=--r);break}else if(0==(b&64))k+=m[v+2],k+=q&x[b],v=3*(p+k),b=m[v];else return e.msg=\"invalid distance code\",r=e.avail_in-u,r=n>>3<r?n>>3:r,u+=r,l-=r,n-=r<<3,g.bitb=q,g.bitk=n,e.avail_in=u,e.total_in+=l-e.next_in_index,e.next_in_index=l,g.write=s,-3;while(1);break}if(0==(b&64)){if(k+=m[v+2],k+=q&x[b],v=3*(p+k),0==(b=m[v])){q>>=m[v+1];n-=m[v+1];g.window[s++]=m[v+2];w--;break}}else{if(0!=(b&32))return r=e.avail_in-\nu,r=n>>3<r?n>>3:r,u+=r,l-=r,n-=r<<3,g.bitb=q,g.bitk=n,e.avail_in=u,e.total_in+=l-e.next_in_index,e.next_in_index=l,g.write=s,1;e.msg=\"invalid literal/length code\";r=e.avail_in-u;r=n>>3<r?n>>3:r;u+=r;l-=r;n-=r<<3;g.bitb=q;g.bitk=n;e.avail_in=u;e.total_in+=l-e.next_in_index;e.next_in_index=l;g.write=s;return-3}}while(1)}}while(258<=w&&10<=u);r=e.avail_in-u;r=n>>3<r?n>>3:r;l-=r;g.bitb=q;g.bitk=n-(r<<3);e.avail_in=u+r;e.total_in+=l-e.next_in_index;e.next_in_index=l;g.write=s;return 0};E.prototype.huft_build=\nfunction(a,b,c,d,h,f,g,e,k,m,p){var q,n,l,u,s,w,t,r,v;w=0;n=c;do this.c[a[b+w]]++,w++,n--;while(0!=n);if(this.c[0]==c)return g[0]=-1,e[0]=0;s=e[0];for(l=1;15>=l&&0==this.c[l];l++);u=l;s<l&&(s=l);for(n=15;0!=n&&0==this.c[n];n--);m=n;s>n&&(s=n);e[0]=s;for(e=1<<l;l<n;l++,e<<=1)if(0>(e-=this.c[l]))return-3;if(0>(e-=this.c[n]))return-3;this.c[n]+=e;this.x[1]=l=0;w=1;for(t=2;0!=--n;)this.x[t]=l+=this.c[w],t++,w++;w=n=0;do 0!=(l=a[b+w])&&(this.v[this.x[l]++]=n),w++;while(++n<c);c=this.x[m];w=this.x[0]=n=\n0;b=-1;r=-s;for(v=t=this.u[0]=0;u<=m;u++)for(a=this.c[u];0!=a--;){for(;u>r+s;){b++;r+=s;v=m-r;v=v>s?s:v;if((q=1<<(l=u-r))>a+1&&(q-=a+1,t=u,l<v))for(;++l<v&&!((q<<=1)<=this.c[++t]);)q-=this.c[t];v=1<<l;if(1440<this.hn[0]+v)return-3;this.u[b]=t=this.hn[0];this.hn[0]+=v;0!=b?(this.x[b]=n,this.r[0]=l,this.r[1]=s,l=n>>>r-s,this.r[2]=t-this.u[b-1]-l,y(this.r,0,k,3*(this.u[b-1]+l),3)):g[0]=t}this.r[1]=u-r;w>=c?this.r[0]=192:p[w]<d?(this.r[0]=256>this.v[w]?0:96,this.r[2]=this.v[w++]):(this.r[0]=f[this.v[w]-\nd]+16+64,this.r[2]=h[this.v[w++]-d]);q=1<<u-r;for(l=n>>>r;l<v;l+=q)y(this.r,0,k,3*(t+l),3);for(l=1<<u-1;0!=(n&l);l>>>=1)n^=l;n^=l;for(l=(1<<r)-1;(n&l)!=this.x[b];)b--,r-=s,l=(1<<r)-1}return 0!=e&&1!=m?-5:0};E.prototype.inflate_trees_bits=function(a,b,c,d,h){this.initWorkArea(19);this.hn[0]=0;a=this.huft_build(a,0,19,19,null,null,c,b,d,this.hn,this.v);if(-3==a)h.msg=\"oversubscribed dynamic bit lengths tree\";else if(-5==a||0==b[0])h.msg=\"incomplete dynamic bit lengths tree\",a=-3;return a};E.prototype.inflate_trees_dynamic=\nfunction(a,b,c,d,h,f,g,e,k){this.initWorkArea(288);this.hn[0]=0;f=this.huft_build(c,0,a,257,Z,aa,f,d,e,this.hn,this.v);if(0!=f||0==d[0])return-3==f?k.msg=\"oversubscribed literal/length tree\":-4!=f&&(k.msg=\"incomplete literal/length tree\",f=-3),f;this.initWorkArea(288);f=this.huft_build(c,a,b,0,ba,ca,g,h,e,this.hn,this.v);return 0!=f||0==h[0]&&257<a?(-3==f?k.msg=\"oversubscribed distance tree\":-5==f?(k.msg=\"incomplete distance tree\",f=-3):-4!=f&&(k.msg=\"empty distance tree with lengths\",f=-3),f):0};\nE.prototype.initWorkArea=function(a){null==this.hn&&(this.hn=new Int32Array(1),this.v=new Int32Array(a),this.c=new Int32Array(16),this.r=new Int32Array(3),this.u=new Int32Array(15),this.x=new Int32Array(16));this.v.length<a&&(this.v=new Int32Array(a));for(var b=0;b<a;b++)this.v[b]=0;for(b=0;16>b;b++)this.c[b]=0;for(b=0;3>b;b++)this.r[b]=0;y(this.c,0,this.u,0,15);y(this.c,0,this.x,0,16)};var T=\"function\"===typeof(new Uint8Array(1)).subarray;K.prototype.toString=function(){return\"\"+this.block+\":\"+this.offset};\nF.prototype.slice=function(a,b){var c;c=this.blob.slice?b?this.blob.slice(a,a+b):this.blob.slice(a):b?this.blob.webkitSlice(a,a+b):this.blob.webkitSlice(a);return new F(c)};F.prototype.salted=function(){return this};F.prototype.fetch=\"undefined\"!==typeof FileReader?function(a){var b=new FileReader;b.onloadend=function(c){a(N(b.result))};b.readAsBinaryString(this.blob)}:function(a){var b=new FileReaderSync;try{var c=b.readAsArrayBuffer(this.blob);a(c)}catch(d){a(null,d)}};z.prototype.slice=function(a,\nb){if(0>a)throw\"Bad slice \"+a;var c=this.start,d=this.end,c=c&&a?c+a:a||c;return new z(this.url,c,b&&c?c+b-1:d||b-1,this.opts)};0<=navigator.userAgent.indexOf(\"Safari\")&&navigator.userAgent.indexOf(\"Chrome\");z.prototype.fetchAsText=function(a){var b=this;this.getURL().then(function(c){try{var d=new XMLHttpRequest;d.open(\"GET\",c,!0);if(b.end){if(1E8<b.end-b.start)throw\"Monster fetch!\";d.setRequestHeader(\"Range\",\"bytes=\"+b.start+\"-\"+b.end)}d.onreadystatechange=function(){if(4==d.readyState)return 200==\nd.status||206==d.status?a(d.responseText):a(null)};b.opts.credentials&&(d.withCredentials=!0);d.send(\"\")}catch(h){return a(null)}}).fail(function(b){console.log(b);return a(null,b)})};z.prototype.salted=function(){var a=this.opts,b={},c;for(c in a)b[c]=a[c];b.salt=!0;return new z(this.url,this.start,this.end,b)};z.prototype.getURL=function(){return this.opts.resolver?this.opts.resolver(this.url).then(function(a){return\"string\"===typeof a?a:a.url}):$.Deferred().resolve(this.url)};z.prototype.fetch=\nfunction(a,b){var c=this;b=b||{};var d=b.attempt||1,h=b.truncatedLength;if(3<d)return a(null);this.getURL().then(function(f){try{var g;b.timeout&&!c.opts.credentials&&(g=setTimeout(function(){console.log(\"timing out \"+f);e.abort();return a(null,\"Timeout\")},b.timeout));var e=new XMLHttpRequest,k;e.open(\"GET\",f,!0);e.overrideMimeType(\"text/plain; charset=x-user-defined\");if(c.end){if(1E8<c.end-c.start)throw\"Monster fetch!\";e.setRequestHeader(\"Range\",\"bytes=\"+c.start+\"-\"+c.end);k=c.end-c.start+1}e.responseType=\n\"arraybuffer\";e.onreadystatechange=function(){if(4==e.readyState){g&&clearTimeout(g);if(200==e.status||206==e.status){if(e.response){var b=e.response.byteLength;return!k||k==b||h&&b==h?a(e.response):c.fetch(a,{attempt:d+1,truncatedLength:b})}if(e.mozResponseArrayBuffer)return a(e.mozResponseArrayBuffer);b=e.responseText;return!k||k==b.length||h&&b.length==h?a(N(e.responseText)):c.fetch(a,{attempt:d+1,truncatedLength:b.length})}return c.fetch(a,{attempt:d+1})}};c.opts.credentials&&(e.withCredentials=\n!0);e.send(\"\")}catch(m){return a(null)}}).fail(function(b){console.log(b);return a(null,b)})};H.prototype.blocksForRange=function(a,b,c){var d=this.indices[a];if(!d)return[];a=U(b,c);for(var h=[],f=0;f<a.length;++f)h[a[f]]=!0;a=[];for(var g=[],f=t(d,0),e=4,k=0;k<f;++k){var m=t(d,e),p=t(d,e+4),e=e+8;if(h[m])for(var q=0;q<p;++q){var n=G(d,e),l=G(d,e+8);(4681>m?g:a).push(new M(n,l));e+=16}else e+=16*p}f=t(d,e);h=null;b=Math.min(b>>14,f-1);c=Math.min(c>>14,f-1);for(f=b;f<=c;++f)(b=G(d,e+4+8*f))&&(!h||\nb.block<h.block||b.offset<h.offset)&&(h=b);d=[];if(null!=h)for(f=0;f<g.length;++f)c=g[f],c.maxv.block>=h.block&&c.maxv.offset>=h.offset&&d.push(c);g=d;d=[];for(f=0;f<g.length;++f)d.push(g[f]);for(f=0;f<a.length;++f)d.push(a[f]);d.sort(function(a,b){var c=a.minv.block-b.minv.block;return 0!=c?c:a.minv.offset-b.minv.offset});a=[];if(0<d.length){g=d[0];for(f=1;f<d.length;++f)c=d[f],c.minv.block==g.maxv.block?g=new M(g.minv,c.maxv):(a.push(g),g=c);a.push(g)}return a};H.prototype.fetch=function(a,b,c,\nd,h){function f(){if(q>=k.length)return d(p);if(n){var a=new Uint8Array(n),a=g.readBamRecords(a,k[q].minv.offset,p,b,c,e,h);n=null;++q;return a?d(p):f()}var m=k[q],a=m.minv.block;g.data.slice(a,m.maxv.block+65536-a).fetch(function(a){n=L(a,m.maxv.block-m.minv.block+1);return f()})}var g=this;h=h||{};var e=this.chrToIndex[a],k;if(void 0===e)k=[];else{if(null===this.indices[e]&&this.indexChunks.chunks[e]){var m=this.indexChunks.chunks[e];return this.bai.slice(m[0],m[1]).fetch(function(f){f=new Uint8Array(f);\nthis.indices[e]=f;return this.fetch(a,b,c,d,h)}.bind(this))}(k=this.blocksForRange(e,b,c))||d(null,\"Error in index fetch\")}var p=[],q=0,n;f()};var S=\"=ACxGxxxTxxxxxxN\".split(\"\"),ea=\"MIDNSHP=X???????\".split(\"\");H.prototype.readBamRecords=function(a,b,c,d,h,f,g){for(;;){var e=t(a,b),e=b+e+4;if(e>=a.length)return!1;var k=new W,m=t(a,b+4),p=t(a,b+8),q=t(a,b+12),n=(q&65280)>>8,l=q&255,q=t(a,b+16),u=(q&4294901760)>>16,s=q&65535,q=t(a,b+20),w=t(a,b+24),x=t(a,b+28);t(a,b+32);k.segment=this.indexToChr[m];\nk.flag=u;k.pos=p;k.mq=n;g.light&&(k.seqLength=q);if(!g.light){0<=w&&(k.nextSegment=this.indexToChr[w],k.nextPos=x);n=\"\";for(p=0;p<l-1;++p)n+=String.fromCharCode(a[b+36+p]);k.readName=n;b=b+36+l;l=\"\";for(p=0;p<s;++p)n=t(a,b),l=l+(n>>4)+ea[n&15],b+=4;k.cigar=l;s=\"\";l=q+1>>1;for(p=0;p<l;++p)n=a[b+p],s+=S[(n&240)>>4],s.length<q&&(s+=S[n&15]);b+=l;k.seq=s;s=\"\";for(p=0;p<q;++p)s+=String.fromCharCode(a[b+p]+33);b+=q;for(k.quals=s;b<e;){s=String.fromCharCode(a[b],a[b+1]);l=String.fromCharCode(a[b+2]);if(\"A\"==\nl)l=String.fromCharCode(a[b+3]),b+=4;else if(\"i\"==l||\"I\"==l)l=t(a,b+3),b+=7;else if(\"c\"==l||\"C\"==l)l=a[b+3],b+=4;else if(\"s\"==l||\"S\"==l)l=P(a,b+3),b+=5;else if(\"f\"==l)l=O(a,b+3),b+=7;else if(\"Z\"==l||\"H\"==l)for(b+=3,l=\"\";p=a[b++],0!=p;)l+=String.fromCharCode(p);else if(\"B\"==l){l=String.fromCharCode(a[b+3]);p=t(a,b+4);if(\"i\"==l||\"I\"==l||\"f\"==l)n=4,u=\"f\"==l?O:t;else if(\"s\"==l||\"S\"==l)n=2,u=P;else if(\"c\"==l||\"C\"==l)n=1,u=V;else throw\"Unknown array type \"+l;b+=8;l=[];for(w=0;w<p;++w)l.push(u(a,b)),b+=\nn}else throw\"Unknown type \"+l;k[s]=l}}if(!d||k.pos<=h&&k.pos+q>=d)void 0!==f&&m!=f||c.push(k);if(k.pos>h)return!0;b=e}};window.dallianceLib={URLFetchable:z,BlobFetchable:F,makeBam:function(a,b,c,d,h){a.slice(0,10).fetch(function(f){return f?Q(a,b,c,d,h):d(null,\"Couldn't access BAM.\")},{timeout:5E3})},inflateBuffer:J};\"object\"===typeof module&&\"object\"===typeof module.exports&&(module.exports=window.dallianceLib)})();\n","!function(a){var b=this;\"object\"==typeof exports?module.exports=a(b):\"function\"==typeof define&&define.amd?define([],function(){return a(b)}):b.jDataView=a(b)}(function(a){\"use strict\";function b(a,b){return\"object\"!=typeof a||null===a?!1:a.constructor===b||Object.prototype.toString.call(a)===\"[object \"+b.name+\"]\"}function c(a,c){return!c&&b(a,Array)?a:Array.prototype.slice.call(a)}function d(a,b){return void 0!==a?a:b}function e(a,c,f,g){if(e.is(a)){var h=a.slice(c,c+f);return h._littleEndian=d(g,h._littleEndian),h}if(!e.is(this))return new e(a,c,f,g);if(this.buffer=a=e.wrapBuffer(a),this._isArrayBuffer=j.ArrayBuffer&&b(a,ArrayBuffer),this._isPixelData=!0&&j.PixelData&&b(a,CanvasPixelArray),this._isDataView=j.DataView&&this._isArrayBuffer,this._isNodeBuffer=!1,!this._isArrayBuffer&&!this._isPixelData&&!b(a,Array))throw new TypeError(\"jDataView buffer has an incompatible type\");this._littleEndian=!!g;var i=\"byteLength\"in a?a.byteLength:a.length;this.byteOffset=c=d(c,0),this.byteLength=f=d(f,i-c),this._offset=this._bitOffset=0,this._isDataView?this._view=new DataView(a,c,f):this._checkBounds(c,f,i),this._engineAction=this._isDataView?this._dataViewAction:this._isArrayBuffer?this._arrayBufferAction:this._arrayAction}function f(a){for(var b=j.ArrayBuffer?Uint8Array:Array,c=new b(a.length),d=0,e=a.length;e>d;d++)c[d]=255&a.charCodeAt(d);return c}function g(a){return a>=0&&31>a?1<<a:g[a]||(g[a]=Math.pow(2,a))}function h(a,b){this.lo=a,this.hi=b}function i(){h.apply(this,arguments)}var j={NodeBuffer:!1,DataView:\"DataView\"in a,ArrayBuffer:\"ArrayBuffer\"in a,PixelData:!0&&\"CanvasPixelArray\"in a&&!(\"Uint8ClampedArray\"in a)&&\"document\"in a},k=a.TextEncoder,l=a.TextDecoder;if(j.PixelData)var m=document.createElement(\"canvas\").getContext(\"2d\"),n=function(a,b){var c=m.createImageData((a+3)/4,1).data;if(c.byteLength=a,void 0!==b)for(var d=0;a>d;d++)c[d]=b[d];return c};var o={Int8:1,Int16:2,Int32:4,Uint8:1,Uint16:2,Uint32:4,Float32:4,Float64:8};e.wrapBuffer=function(a){switch(typeof a){case\"number\":if(j.ArrayBuffer)a=new Uint8Array(a).buffer;else if(j.PixelData)a=n(a);else{a=new Array(a);for(var d=0;d<a.length;d++)a[d]=0}return a;case\"string\":a=f(a);default:return\"length\"in a&&!(j.ArrayBuffer&&b(a,ArrayBuffer)||j.PixelData&&b(a,CanvasPixelArray))&&(j.ArrayBuffer?b(a,ArrayBuffer)||(a=new Uint8Array(a).buffer,b(a,ArrayBuffer)||(a=new Uint8Array(c(a,!0)).buffer)):a=j.PixelData?n(a.length,a):c(a)),a}},e.is=function(a){return a&&a.jDataView},e.from=function(){return new e(arguments)},e.Uint64=h,h.prototype={valueOf:function(){return this.lo+g(32)*this.hi},toString:function(){return Number.prototype.toString.apply(this.valueOf(),arguments)}},h.fromNumber=function(a){var b=Math.floor(a/g(32)),c=a-b*g(32);return new h(c,b)},e.Int64=i,i.prototype=\"create\"in Object?Object.create(h.prototype):new h,i.prototype.valueOf=function(){return this.hi<g(31)?h.prototype.valueOf.apply(this,arguments):-(g(32)-this.lo+g(32)*(g(32)-1-this.hi))},i.fromNumber=function(a){var b,c;if(a>=0){var d=h.fromNumber(a);b=d.lo,c=d.hi}else c=Math.floor(a/g(32)),b=a-c*g(32),c+=g(32);return new i(b,c)};var p=e.prototype={compatibility:j,jDataView:!0,_checkBounds:function(a,b,c){if(\"number\"!=typeof a)throw new TypeError(\"Offset is not a number.\");if(\"number\"!=typeof b)throw new TypeError(\"Size is not a number.\");if(0>b)throw new RangeError(\"Length is negative.\");if(0>a||a+b>d(c,this.byteLength))throw new RangeError(\"Offsets are out of bounds.\")},_action:function(a,b,c,e,f){return this._engineAction(a,b,d(c,this._offset),d(e,this._littleEndian),f)},_dataViewAction:function(a,b,c,d,e){return this._offset=c+o[a],b?this._view[\"get\"+a](c,d):this._view[\"set\"+a](c,e,d)},_arrayBufferAction:function(b,c,e,f,g){var h,i=o[b],j=a[b+\"Array\"];if(f=d(f,this._littleEndian),1===i||(this.byteOffset+e)%i===0&&f)return h=new j(this.buffer,this.byteOffset+e,1),this._offset=e+i,c?h[0]:h[0]=g;var k=new Uint8Array(c?this.getBytes(i,e,f,!0):i);return h=new j(k.buffer,0,1),c?h[0]:(h[0]=g,void this._setBytes(e,k,f))},_arrayAction:function(a,b,c,d,e){return b?this[\"_get\"+a](c,d):this[\"_set\"+a](c,e,d)},_getBytes:function(a,b,e){e=d(e,this._littleEndian),b=d(b,this._offset),a=d(a,this.byteLength-b),this._checkBounds(b,a),b+=this.byteOffset,this._offset=b-this.byteOffset+a;var f=this._isArrayBuffer?new Uint8Array(this.buffer,b,a):(this.buffer.slice||Array.prototype.slice).call(this.buffer,b,b+a);return e||1>=a?f:c(f).reverse()},getBytes:function(a,b,e,f){var g=this._getBytes(a,b,d(e,!0));return f?c(g):g},_setBytes:function(a,b,e){var f=b.length;if(0!==f){if(e=d(e,this._littleEndian),a=d(a,this._offset),this._checkBounds(a,f),!e&&f>1&&(b=c(b,!0).reverse()),a+=this.byteOffset,this._isArrayBuffer)new Uint8Array(this.buffer,a,f).set(b);else for(var g=0;f>g;g++)this.buffer[a+g]=b[g];this._offset=a-this.byteOffset+f}},setBytes:function(a,b,c){this._setBytes(a,b,d(c,!0))},getString:function(a,b,c){var d=this._getBytes(a,b,!0);if(c=\"utf8\"===c?\"utf-8\":c||\"binary\",l&&\"binary\"!==c)return new l(c).decode(this._isArrayBuffer?d:new Uint8Array(d));var e=\"\";a=d.length;for(var f=0;a>f;f++)e+=String.fromCharCode(d[f]);return\"utf-8\"===c&&(e=decodeURIComponent(escape(e))),e},setString:function(a,b,c){c=\"utf8\"===c?\"utf-8\":c||\"binary\";var d;k&&\"binary\"!==c?d=new k(c).encode(b):(\"utf-8\"===c&&(b=unescape(encodeURIComponent(b))),d=f(b)),this._setBytes(a,d,!0)},getChar:function(a){return this.getString(1,a)},setChar:function(a,b){this.setString(a,b)},tell:function(){return this._offset},seek:function(a){return this._checkBounds(a,0),this._offset=a},skip:function(a){return this.seek(this._offset+a)},slice:function(a,b,c){function f(a,b){return 0>a?a+b:a}return a=f(a,this.byteLength),b=f(d(b,this.byteLength),this.byteLength),c?new e(this.getBytes(b-a,a,!0,!0),void 0,void 0,this._littleEndian):new e(this.buffer,this.byteOffset+a,b-a,this._littleEndian)},alignBy:function(a){return this._bitOffset=0,1!==d(a,1)?this.skip(a-(this._offset%a||a)):this._offset},_getFloat64:function(a,b){var c=this._getBytes(8,a,b),d=1-2*(c[7]>>7),e=((c[7]<<1&255)<<3|c[6]>>4)-1023,f=(15&c[6])*g(48)+c[5]*g(40)+c[4]*g(32)+c[3]*g(24)+c[2]*g(16)+c[1]*g(8)+c[0];return 1024===e?0!==f?0/0:1/0*d:-1023===e?d*f*g(-1074):d*(1+f*g(-52))*g(e)},_getFloat32:function(a,b){var c=this._getBytes(4,a,b),d=1-2*(c[3]>>7),e=(c[3]<<1&255|c[2]>>7)-127,f=(127&c[2])<<16|c[1]<<8|c[0];return 128===e?0!==f?0/0:1/0*d:-127===e?d*f*g(-149):d*(1+f*g(-23))*g(e)},_get64:function(a,b,c){c=d(c,this._littleEndian),b=d(b,this._offset);for(var e=c?[0,4]:[4,0],f=0;2>f;f++)e[f]=this.getUint32(b+e[f],c);return this._offset=b+8,new a(e[0],e[1])},getInt64:function(a,b){return this._get64(i,a,b)},getUint64:function(a,b){return this._get64(h,a,b)},_getInt32:function(a,b){var c=this._getBytes(4,a,b);return c[3]<<24|c[2]<<16|c[1]<<8|c[0]},_getUint32:function(a,b){return this._getInt32(a,b)>>>0},_getInt16:function(a,b){return this._getUint16(a,b)<<16>>16},_getUint16:function(a,b){var c=this._getBytes(2,a,b);return c[1]<<8|c[0]},_getInt8:function(a){return this._getUint8(a)<<24>>24},_getUint8:function(a){return this._getBytes(1,a)[0]},_getBitRangeData:function(a,b){var c=(d(b,this._offset)<<3)+this._bitOffset,e=c+a,f=c>>>3,g=e+7>>>3,h=this._getBytes(g-f,f,!0),i=0;(this._bitOffset=7&e)&&(this._bitOffset-=8);for(var j=0,k=h.length;k>j;j++)i=i<<8|h[j];return{start:f,bytes:h,wideValue:i}},getSigned:function(a,b){var c=32-a;return this.getUnsigned(a,b)<<c>>c},getUnsigned:function(a,b){var c=this._getBitRangeData(a,b).wideValue>>>-this._bitOffset;return 32>a?c&~(-1<<a):c},_setBinaryFloat:function(a,b,c,d,e){var f,h,i=0>b?1:0,j=~(-1<<d-1),k=1-j;0>b&&(b=-b),0===b?(f=0,h=0):isNaN(b)?(f=2*j+1,h=1):1/0===b?(f=2*j+1,h=0):(f=Math.floor(Math.log(b)/Math.LN2),f>=k&&j>=f?(h=Math.floor((b*g(-f)-1)*g(c)),f+=j):(h=Math.floor(b/g(k-c)),f=0));for(var l=[];c>=8;)l.push(h%256),h=Math.floor(h/256),c-=8;for(f=f<<c|h,d+=c;d>=8;)l.push(255&f),f>>>=8,d-=8;l.push(i<<d|f),this._setBytes(a,l,e)},_setFloat32:function(a,b,c){this._setBinaryFloat(a,b,23,8,c)},_setFloat64:function(a,b,c){this._setBinaryFloat(a,b,52,11,c)},_set64:function(a,b,c,e){\"object\"!=typeof c&&(c=a.fromNumber(c)),e=d(e,this._littleEndian),b=d(b,this._offset);var f=e?{lo:0,hi:4}:{lo:4,hi:0};for(var g in f)this.setUint32(b+f[g],c[g],e);this._offset=b+8},setInt64:function(a,b,c){this._set64(i,a,b,c)},setUint64:function(a,b,c){this._set64(h,a,b,c)},_setUint32:function(a,b,c){this._setBytes(a,[255&b,b>>>8&255,b>>>16&255,b>>>24],c)},_setUint16:function(a,b,c){this._setBytes(a,[255&b,b>>>8&255],c)},_setUint8:function(a,b){this._setBytes(a,[255&b])},setUnsigned:function(a,b,c){var d=this._getBitRangeData(c,a),e=d.wideValue,f=d.bytes;e&=~(~(-1<<c)<<-this._bitOffset),e|=(32>c?b&~(-1<<c):b)<<-this._bitOffset;for(var g=f.length-1;g>=0;g--)f[g]=255&e,e>>>=8;this._setBytes(d.start,f,!0)}};for(var q in o)!function(a){p[\"get\"+a]=function(b,c){return this._action(a,!0,b,c)},p[\"set\"+a]=function(b,c,d){this._action(a,!1,b,d,c)}}(q);p._setInt32=p._setUint32,p._setInt16=p._setUint16,p._setInt8=p._setUint8,p.setSigned=p.setUnsigned;for(var r in p)\"set\"===r.slice(0,3)&&!function(a){p[\"write\"+a]=function(){Array.prototype.unshift.call(arguments,void 0),this[\"set\"+a].apply(this,arguments)}}(r.slice(3));return e});\n//# sourceMappingURL=jdataview.js.map\n","(function () {\n\nif (typeof jDataView === 'undefined' && typeof require !== 'undefined') {\n\tjDataView = require('./jDataView.js');\n}\n\n// Extend code from underscorejs (modified for fast inheritance using prototypes)\nfunction inherit(obj) {\n  if ('create' in Object) {\n    obj = Object.create(obj);\n  } else {\n    function ClonedObject() {}\n    ClonedObject.prototype = obj;\n    obj = new ClonedObject();\n  }\n  for (var i = 1; i < arguments.length; ++i) {\n    var source = arguments[i];\n    for (var prop in source) {\n      if (source[prop] !== undefined) {\n        obj[prop] = source[prop];\n      }\n    }\n  }\n  return obj;\n}\n\nfunction jParser(view, structure) {\n  if (!(this instanceof arguments.callee)) {\n    throw new Error(\"Constructor may not be called as a function\");\n  }\n  if (!(view instanceof jDataView)) {\n    view = new jDataView(view, undefined, undefined, true);\n  }\n  this.view = view;\n  this.view.seek(0);\n  this._bitShift = 0;\n  this.structure = inherit(jParser.prototype.structure, structure);\n}\n\nfunction toInt(val) {\n  return val instanceof Function ? val.call(this) : val;\n}\n\njParser.prototype.structure = {\n  uint8: function () { return this.view.getUint8(); },\n  uint16: function () { return this.view.getUint16(); },\n  uint32: function () { return this.view.getUint32(); },\n  uint64 : function () { return parseInt(this.view.getUint64(),10); },\n  int8: function () { return this.view.getInt8(); },\n  int16: function () { return this.view.getInt16(); },\n  int32: function () { return this.view.getInt32(); },\n  float32: function () { return this.view.getFloat32(); },\n  float64: function () { return this.view.getFloat64(); },\n  char: function () { return this.view.getChar(); },\n  string: function (length) {\n    return this.view.getString(toInt.call(this, length));\n  },\n  array: function (type, length) {\n    length = toInt.call(this, length);\n    var results = [];\n    for (var i = 0; i < length; ++i) {\n      results.push(this.parse(type));\n    }\n    return results;\n  },\n  seek: function (position, block) {\n    position = toInt.call(this, position);\n    if (block instanceof Function) {\n      var old_position = this.view.tell();\n      this.view.seek(position);\n      var result = block.call(this);\n      this.view.seek(old_position);\n      return result;\n    } else {\n      return this.view.seek(position);\n    }\n  },\n  tell: function () {\n    return this.view.tell();\n  },\n  skip: function (offset) {\n    offset = toInt.call(this, offset);\n    this.view.seek(this.view.tell() + offset);\n    return offset;\n  },\n  err : function(e){\n    this.current = { error : e };\n    return;\n  },\n  if: function (predicate) {\n    if (predicate instanceof Function ? predicate.call(this) : predicate) {\n    return this.parse.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  }\n};\n\njParser.prototype.seek = jParser.prototype.structure.seek;\njParser.prototype.tell = jParser.prototype.structure.tell;\njParser.prototype.skip = jParser.prototype.structure.skip;\njParser.prototype.err  = jParser.prototype.structure.err;\n\njParser.prototype.parse = function (structure) {\n  if (typeof structure === 'number') {\n    var fieldValue = 0,\n    bitSize = structure;\n\n    if (this._bitShift < 0) {\n      var byteShift = this._bitShift >> 3; // Math.floor(_bitShift / 8)\n      this.skip(byteShift);\n      this._bitShift &= 7; // _bitShift + 8 * Math.floor(_bitShift / 8)\n    }\n    if (this._bitShift > 0 && bitSize >= 8 - this._bitShift) {\n      fieldValue = this.view.getUint8() & ~(-1 << (8 - this._bitShift));\n      bitSize -= 8 - this._bitShift;\n      this._bitShift = 0;\n    }\n    while (bitSize >= 8) {\n      fieldValue = this.view.getUint8() | (fieldValue << 8);\n      bitSize -= 8;\n    }\n    if (bitSize > 0) {\n      fieldValue = ((this.view.getUint8() >>> (8 - (this._bitShift + bitSize))) & ~(-1 << bitSize)) | (fieldValue << bitSize);\n      this._bitShift += bitSize - 8; // passing negative value for next pass\n    }\n\n    return fieldValue;\n  }\n\n  // f, 1, 2 means f(1, 2)\n  if (structure instanceof Function) {\n    return structure.apply(this, Array.prototype.slice.call(arguments, 1));\n  }\n\n  // 'int32', ... is a shortcut for ['int32', ...]\n  if (typeof structure === 'string') {\n    structure = Array.prototype.slice.call(arguments);\n  }\n\n  // ['string', 256] means structure['string'](256)\n  if (structure instanceof Array) {\n    var key = structure[0];\n    if (!(key in this.structure)) {\n      throw new Error(\"Missing structure for `\" + key + \"`\");\n    }\n    return this.parse.apply(this, [this.structure[key]].concat(structure.slice(1)));\n  }\n\n  // {key: val} means {key: parse(val)}\n  if (typeof structure === 'object') {\n    var output = {},\n    current = this.current;\n\n    this.current = output;\n\n    for (var key in structure) {\n      if(this.current.error){\n        output = this.current;\n        return output;\n      }\n      var value = this.parse(structure[key]);\n\n      // skipping undefined call results (useful for 'if' statement)\n      if (value !== undefined) {\n        output[key] = value;\n      }\n    }\n\n    this.current = current;\n\n    return output;\n  }\n\n  throw new Error(\"Unknown structure type `\" + structure + \"`\");\n};\n\n\nvar all;\nif (typeof self !== 'undefined') {\n  all = self;\n} else if (typeof window !== 'undefined') {\n  all = window;\n} else if (typeof global !== 'undefined') {\n  all = global;\n}\n// Browser + Web Worker\nall.jParser = jParser;\n\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = jParser;\n}\n\n})();\n","(function () {\n  var BWReader = function (data, callback) {\n    // constants: bigwig/bigbed file header signatures (magic numbers) (32 bit) , can be swapped ( big-endian | BE )\n    var BIG_WIG_MAGIC    = 0x888FFC26;\n    var BIG_WIG_MAGIC_BE = 0x26FC8F88;\n\n    var BIG_BED_MAGIC    = 0x8789F2EB;\n    var BIG_BED_MAGIC_BE = 0xEBF28987;\n\n    var CIRTREE_MAGIC = 0x78ca8c91;\n    var IDXTREE_MAGIC = 0x2468ace0;\n\n    // type of file converted to bigwig bedgraph |variable step wiggle | fixed step wiggle\n    var BIG_WIG_TYPE_GRAPH = 1;\n    var BIG_WIG_TYPE_VSTEP = 2;\n    var BIG_WIG_TYPE_FSTEP = 3;\n\n    // bigbed data color regex\n    var BED_COLOR_REGEXP = new RegExp(\"^[0-9]+,[0-9]+,[0-9]+\");\n\n    var M1 = 256;\n    var M2 = 256*256;\n    var M3 = 256*256*256;\n    var M4 = 256*256*256*256;\n\n    var bbi = {\n      fetchedData: new RTree()\n    };\n\n    function init() {\n      checkSignature();\n    }\n\n    function getData(start, length, cb) {\n      var end     = start + length;\n      var fetched = bbi.fetchedData.search({ x: start, w: length, y: 0, h: 1 }).filter(function (d) { return d[0] <= start && d[1] >= end; });\n\n      if (fetched.length == 1) {\n        cb(fetched[0][2].slice(start - fetched[0][0], start + length));\n      } else {\n        data.slice(start, length).fetch(function (d) {\n          bbi.fetchedData.insert({ x: start, w: length, y: 0, h: 1 }, [ start, start + length, d ]);\n          cb(d);\n        });\n      }\n    }\n\n    function checkSignature() {\n      getData(0, 512, function (header) {\n        var ba    = new Uint8Array(header);\n        var sa    = new Uint16Array(header);\n        var la    = new Uint32Array(header);\n        var magic = la[0];\n        var error, reduction, dataOffset, indexOffset;\n\n        if (magic === BIG_WIG_MAGIC) {\n          bbi.type = 'bigwig';\n        } else if (magic === BIG_BED_MAGIC) {\n          bbi.type = 'bigbed';\n        } else if (magic === BIG_WIG_MAGIC_BE || magic === BIG_BED_MAGIC_BE) {\n          error = 'big-endian files not supported yet!';\n        } else{\n          error = 'unsupported file format';\n        }\n\n        if (error) {\n          callback(null, error);\n        }\n\n        bbi.version             = sa[2];\n        bbi.numZoomLevels       = sa[3];\n        bbi.chromTreeOffset     = read64Bit(ba, 8);\n        bbi.unzoomedDataOffset  = read64Bit(ba, 16);\n        bbi.unzoomedIndexOffset = read64Bit(ba, 24);\n        bbi.fieldCount          = sa[16];\n        bbi.definedFieldCount   = sa[17];\n        bbi.asOffset            = read64Bit(ba, 36);\n        bbi.totalSummaryOffset  = read64Bit(ba, 44);\n        bbi.uncompressBufSize   = la[13];\n        bbi.extHeaderOffset     = read64Bit(ba, 56);\n        bbi.compressed          = bbi.uncompressBufSize  > 0;\n        bbi.summary             = bbi.totalSummaryOffset > 0;\n        bbi.extHeader           = bbi.extHeaderOffset    > 0;\n        bbi.zoomHeaders         = [];\n\n        for (var i = 0; i < bbi.numZoomLevels; i++) {\n          reduction   = la[16 + 6*i];\n          dataOffset  = read64Bit(ba, 72 + 24*i);\n          indexOffset = read64Bit(ba, 80 + 24*i);\n\n          bbi.zoomHeaders.push({\n            reductionLevel : reduction,\n            dataOffset     : dataOffset,\n            indexOffset    : indexOffset\n          });\n        }\n\n        readAutoSQL(readChromTree); // reading autoSQL passing next task as callback\n      });\n    }\n\n    // autoSQL could be present in some bigbed files\n    function readAutoSQL(cb) {\n      if (bbi.asOffset === 0) {\n        cb(); // no autoSQL present\n      } else {\n        // autoSQL present, need to parse\n        getData(bbi.asOffset, 2048, function (d) {\n          var ba = new Uint8Array(d);\n          var s  = '';\n\n          for (var i = 0; i < ba.length; i++) {\n            if (ba[i] === 0) {\n              break;\n            }\n\n            s += String.fromCharCode(ba[i]);\n          }\n\n          var header_re   = /(\\w+)\\s+(\\w+)\\s+(\"([^\"]+)\")?\\s*\\(\\s*/;\n          var field_re    = /([\\w\\[\\]]+)\\s+(\\w+)\\s*;\\s*(\"([^\"]+)\")?\\s*/g;\n          var headerMatch = header_re.exec(s);\n\n          if (headerMatch) {\n            var as = {\n              declType : headerMatch[1],\n              name     : headerMatch[2],\n              comment  : headerMatch[4],\n              fields   : []\n            };\n\n            s = s.substring(headerMatch[0]);\n\n            for (var m = field_re.exec(s); m !== null; m = field_re.exec(s)) {\n              as.fields.push({\n                type    : m[1],\n                name    : m[2],\n                comment : m[4]\n              });\n            }\n\n            bbi.schema = as;\n          }\n\n          cb();\n        });\n      }\n    }\n\n    // reading B+ tree which maps chrom names to ids used in R-tree\n    function readChromTree() {\n      var len = bbi.unzoomedDataOffset - bbi.chromTreeOffset;\n          len = len + (4 - len%4);\n\n      getData(bbi.chromTreeOffset, len, function (d) {\n        var ba    = new Uint8Array(d);\n        var sa    = new Uint16Array(d);\n        var la    = new Uint32Array(d);\n        var magic = la[0];\n        var error;\n\n        function readChromTreeLeaf(nodeOffset) {\n          // padding 8 byte\n          var children = sa[(nodeOffset/2) + 1];\n          var offset   = nodeOffset + 4;\n          var chrom, i, c, idx, len;\n\n          while (children > 0) {\n            children--;\n            chrom = '';\n\n            for (i = 0; i < bbi.bpTree.keySize; i++) {\n              c = ba[offset + i];\n\n              if (c !== 0) {\n                chrom += String.fromCharCode(c);\n              }\n            }\n\n            offset += bbi.bpTree.keySize;\n\n            idx = (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset + 0]);\n            len = (ba[offset + 7] << 24) | (ba[offset + 6] << 16) | (ba[offset + 5] << 8) | (ba[offset + 4]);\n\n            offset += 8;\n\n            bbi.chroms[idx]  = chrom;\n            bbi.lengths[idx] = len;\n          }\n        }\n\n        if (magic === CIRTREE_MAGIC) {\n          bbi.bpTree = {\n            itemsPerBlock : la[1],\n            keySize       : la[2],\n            valueSize     : la[3],\n            itemCount     : read64Bit(ba, 16)\n          };\n\n          bbi.chroms  = new Array(bbi.bpTree.itemCount);\n          bbi.lengths = new Array(bbi.bpTree.itemCount);\n        } else {\n          error = 'chromosome id B+ tree not found!';\n        }\n\n        if (error) {\n          callback(null, error);\n        } else {\n          readChromTreeLeaf(32);\n        }\n\n        readRTreeIndex();\n      });\n    }\n\n    function readRTreeIndex() {\n      getData(bbi.unzoomedIndexOffset, 48, function (d) {\n        var ba    = new Uint8Array(d);\n        var la    = new Uint32Array(d);\n        var magic = la[0];\n\n        if (magic === IDXTREE_MAGIC) {\n          bbi.Rheader = {\n            blockSize     : la[1],\n            nItems        : read64Bit(ba, 8),\n            chrIdxStart   : la[4],\n            baseStart     : la[5],\n            chrIdxEnd     : la[6],\n            baseEnd       : la[7],\n            endFileOffset : read64Bit(ba, 32),\n            nItemsPerSlot : la[10]\n          };\n\n          bbi.rootOffset = bbi.unzoomedIndexOffset + 48;\n          bbi.getValues  = getValues;\n\n          callback(bbi);\n        } else {\n          callback(null, 'R-tree not found!');\n        }\n      });\n    }\n\n    function getRTreeNode(treedata, offset) {\n      var ba       = new Uint8Array(treedata);\n      var sa       = new Uint16Array(treedata);\n      var la       = new Uint32Array(treedata);\n      var children = sa[offset/2 + 1];\n      var lo, i;\n\n      var node = {\n        isLeaf      : ba[offset],\n        children    : children,\n        chrIdxStart : new Array(children),\n        baseStart   : new Array(children),\n        chrIdxEnd   : new Array(children),\n        baseEnd     : new Array(children),\n        dataOffset  : new Array(children),\n        x           : {}\n      };\n\n      if (node.isLeaf) {\n        node.x.size = new Array(children);\n      } else {\n        node.x.child = new Array(children);\n\n        for (i = 0; i < children; i++) {\n          node.x.child[i] = -1;\n        }\n      }\n\n      offset += 4;\n\n      for (i = 0; i < children; i++) {\n        lo = offset / 4;\n\n        node.chrIdxStart[i] = la[lo];\n        node.baseStart[i]   = la[lo + 1];\n        node.chrIdxEnd[i]   = la[lo + 2];\n        node.baseEnd[i]     = la[lo + 3];\n        node.dataOffset[i]  = read64Bit(ba, offset + 16);\n\n        offset += 24;\n\n        if (node.isLeaf) {\n          node.x.size[i] = read64Bit(ba, offset);\n          offset += 8;\n        }\n      }\n\n      return node;\n    }\n\n    function getValues(chrom, start, end, cb) {\n      var vals    = [];\n      var chromid = bbi.chroms.indexOf(chrom);\n\n      if (chromid == -1) {\n        chromid = bbi.chroms.indexOf('chr' + chrom);\n\n        if (chromid == -1) {\n          return cb([], 'chrom not found');\n        }\n      }\n\n      var query = {\n        chrom : chromid,\n        start : start,\n        end   : end\n      };\n\n      function traverseRTree() {\n        var outstanding = 0;\n\n        function fetchRTreeKids(offset, level) {\n          outstanding += offset.length;\n\n          var min         = offset[0];\n          var maxNodeSize = 4 + bbi.Rheader.blockSize*32;\n          var max         = offset[offset.length - 1] + maxNodeSize;\n\n          getData(min, max - min, function (treedata) {\n            // traverse kids\n            for (var i = 0; i < offset.length; i++) {\n              traverseRTreeKids(treedata, offset[i] - min, level);\n\n              if (--outstanding === 0) {\n                fetchBlocks();\n              }\n            }\n          });\n        }\n\n        function traverseRTreeKids(treedata, offset, level) {\n          var node     = getRTreeNode(treedata, offset);\n          var overlaps = findOverlaps(node);\n          var i;\n\n          if (node.isLeaf) {\n            for (i = 0; i < overlaps.length; i++){\n              vals.push({\n                offset : node.dataOffset[overlaps[i]],\n                size   : node.x.size[overlaps[i]]\n              });\n            }\n\n            return [];\n          } else {\n            fetchRTreeKids(overlaps.map(function (o) { return node.dataOffset[o]; }), level + 1);\n          }\n        }\n\n        function findOverlaps(node) {\n          var children = node.children;\n          var overlaps = [];\n\n          for (var i = 0; i < children; i++) {\n            var startChrom = node.chrIdxStart[i];\n            var startBase  = node.baseStart[i];\n            var endChrom   = node.chrIdxEnd[i];\n            var endBase    = node.baseEnd[i];\n\n            if (\n              ((startChrom < query.chrom) || (startChrom == query.chrom && startBase <= query.end)) &&\n              ((endChrom   > query.chrom) || (endChrom   == query.chrom && endBase   >= query.start))\n            ) {\n              overlaps.push(i);\n            }\n          }\n\n          return overlaps;\n        }\n\n        fetchRTreeKids([bbi.rootOffset], 1);\n      }\n\n      function fetchBlocks() {\n        vals.sort(function (b0, b1) {\n          return (b0.offset | 0) - (b1.offset | 0);\n        });\n\n        if (vals.length === 0) {\n          return getBlocks();\n        }\n\n        var totalSize = 0;\n        var base      = vals[0].offset;\n\n        for (var i = 0; i < vals.length; i++) {\n          totalSize += vals[i].size;\n        }\n\n        getData(base, totalSize, function (buffer) {\n          var ioffset = 0;\n          var bi      = 0;\n          var fb, blockData;\n\n          while (ioffset < totalSize) {\n            fb = vals[bi];\n\n            if (bbi.uncompressBufSize > 0) {\n              blockData = dallianceLib.inflateBuffer(buffer, ioffset + 2, fb.size - 2);\n            } else {\n              blockData = buffer.slice(ioffset, ioffset + fb.size);\n            }\n\n            vals[bi].data = blockData;\n            ioffset      += fb.size;\n            bi++;\n          }\n\n          getBlocks();\n        });\n      }\n\n      function getBlocks() {\n        var parser = bbi.type == 'bigwig' ? WiggleParser : bbi.type == 'bigbed' ? BEDParser : false;\n        var result = [];\n\n        if (parser && vals.length) {\n          for (var i = 0; i < vals.length; i++) {\n            result = result.concat(parser(vals[i].data, query));\n          }\n        }\n\n        cb(result);\n      }\n\n      traverseRTree();\n    }\n\n    function WiggleParser(data, query) {\n      var arr        = [];\n      var ba         = new Uint8Array(data);\n      var sa         = new Int16Array(data);\n      var la         = new Int32Array(data);\n      var fa         = new Float32Array(data);\n      var chromId    = la[0];\n      var chr        = parseInt(bbi.chroms[chromId].replace('chr', ''), 10);\n      var blockStart = la[1] + 1;\n      var itemStep   = la[3];\n      var itemSpan   = la[4];\n      var blockType  = ba[20];\n      var itemCount  = sa[11];\n      var i, start, end, score;\n\n      if (blockType === BIG_WIG_TYPE_FSTEP) { // fixedStep wiggle\n        for (i = 0; i < itemCount; i++) {\n          start = blockStart + i*itemStep;\n          end   = start + itemSpan - 1;\n          score = fa[i + 6];\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      } else if (blockType === BIG_WIG_TYPE_VSTEP) { // variable step wiggle\n        for (i = 0; i < itemCount; i++) {\n          start = la[i*2 + 6] + 1;\n          end   = start + itemSpan - 1;\n          score = fa[i*2 + 7];\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      } else if (blockType === BIG_WIG_TYPE_GRAPH) { // bedGraph\n        for (i = 0; i < itemCount; i++) {\n          start = la[i*3 + 6] + 1;\n          end   = la[i*3 + 7];\n          score = fa[i*3 + 8];\n\n          if (start > end) {\n            start = end;\n          }\n\n          if (chromId == query.chrom) {\n            arr.push({\n              chr    : chr,\n              start  : start,\n              end    : end,\n              height : score\n            });\n          }\n        }\n      }\n\n      return arr;\n    }\n\n    function BEDParser(data, query) {\n      var arr      = [];\n      var ba       = new Uint8Array(data);\n      var la       = new Int32Array(data);\n      var offset   = 0;\n      var bbRecord, ch, rest;\n\n      while (offset < la.length) {\n        bbRecord = {\n          chromid : la[offset],\n          chr     : bbi.chroms[la[offset]],\n          start   : la[offset + 1],\n          end     : la[offset + 2]\n        };\n\n        offset += 12;\n\n        while (true) {\n          ch = ba[offset++];\n\n          if (ch !== 0) {\n            rest += String.fromCharCode(ch);\n          } else {\n            break;\n          }\n        }\n\n        if (bbRecord.chromid === query.chrom) {\n          arr.push([ bbRecord.chr, bbRecord.start, bbRecord.end, rest ].join('\\t'));\n        }\n      }\n\n      return arr;\n    }\n\n    // reads 8 bytes from data\n    function read64Bit(ba, o) {\n      var val = ba[o] + ba[o+1]*M1 + ba[o+2]*M2 + ba[o+3]*M3 + ba[o+4]*M4;\n      return val;\n    }\n\n    function readFloat(ba, o) {\n      var a = new Uint8Array([ ba[o], ba[o+1], ba[o+2], ba[o+3] ]);\n      var b = a.buffer;\n      var c = new Float32Array(b);\n      return c[0];\n    }\n\n    // reads 4 bytes from data\n    function read32Bit(ba, o) {\n      var a = ba[o];\n      var b = ba[o+1];\n      var c = ba[o+2];\n      var d = ba[o+3];\n      var r = (a | ((b << 8) >>> 0) | ((c << 16) >>> 0) | ((d << 24) >>> 0)) >>> 0;\n      return r;\n    }\n\n     // reads 2 bytes from data\n    function read16Bit(ba, o) {\n      var r = ba[o] | (ba[o+1] << 8);\n      return r;\n    }\n\n    // reads 1 byte from data\n    function read8Bit(ba, o) {\n      return ba[o];\n    }\n\n    init();\n  };\n\n  window.BWReader = BWReader;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = BWReader;\n  }\n})();\n","(function () {\n  var tabi_fmt = {\n    string0: function (size) {\n      return this.parse(['string', size]).replace(/\\0+$/, '');\n    },\n    header: {\n      magic   : ['string', 4],\n      n_ref   : 'int32',\n      format  : 'int32',\n      col_seq : 'int32',\n      col_beg : 'int32',\n      col_end : 'int32',\n      meta    : 'int32',\n      skip    : 'int32',\n      l_nm    : 'int32',\n      names   : ['string0', function () { return this.current.l_nm; }]\n    },\n    chunk: {\n      cnk_beg: 'uint64',\n      cnk_end: 'uint64'\n    },\n    bin: {\n      bin      : 'uint32',\n      n_chunk  : 'int32',\n      chunkseq : ['array', 'chunk', function () { return this.current.n_chunk; }]\n    },\n    index: {\n      n_bin     : 'int32',\n      binseq    : ['array', 'bin', function () { return this.current.n_bin; }],\n      n_intv    : 'int32',\n      intervseq : ['array', 'uint64', function () { return this.current.n_intv; }]\n    },\n    tabix: {\n      head     : 'header',\n      indexseq : ['array', 'index', function () { return this.current.head.n_ref; }]\n    }\n  };\n\n  var bgzf_hd_fmt = {\n    header: {\n      id1   : 'uint8',\n      id2   : 'uint8',\n      cm    : 'uint8',\n      flg   : 'uint8',\n      mtime : 'uint32',\n      xfl   : 'uint8',\n      os    : 'uint8',\n      xlen  : 'uint16'\n    },\n    subheader: {\n      si1   : 'uint8',\n      si2   : 'uint8',\n      slen  : 'uint16',\n      bsize : 'uint16'\n    },\n    bgzfHd: { head: 'header', subhead: 'subheader' }\n  };\n\n  var hdSize  = 18;\n  var inflate = dallianceLib.inflateBuffer;\n  var _2p16   = 1 << 16;\n\n  var VCFReader = function (vcf, tbi) {\n    this.vcf_data = vcf;\n    this.tbi_data = tbi;\n  };\n\n  VCFReader.prototype.readTabix = function (cb) {\n    var bins2hash = function (binseq) {\n      var hash = {};\n      var i    = 0;\n      var b;\n\n      for (var x in binseq) {\n        b       = binseq[x].bin;\n        hash[b] = i;\n        i++;\n      }\n\n      return hash;\n    };\n\n    var parse_tabix = function (tabix_buffer) {\n      var tabix = new jParser(tabix_buffer, tabi_fmt).parse('tabix');\n\n      tabix.head.names = tabix.head.names.split('\\0');\n      tabix.bhash = {};\n\n      for (var i = 0; i < tabix.head.n_ref; i++){\n        tabix.bhash[i] = bins2hash(tabix.indexseq[i].binseq);\n      }\n\n      cb(tabix);\n    };\n\n    this.inflateRegion(this.tbi_data, 0, 100000000, parse_tabix);\n  };\n\n  VCFReader.prototype.getRecords = function (ref, beg, end, callback) {\n    var records = [];\n    var chunks  = this.getChunks(ref, beg, end);\n    var vcfThis = this;\n\n    if (chunks == -1) {\n      return callback([]);\n    }\n\n    (function loop(x) {\n      if (x < chunks.length) {\n        vcfThis.inflateRegion(vcfThis.vcf_data, chunks[x].start, chunks[x].end, function (record, ebsz) {\n          var last = record.byteLength - ebsz + chunks[x].inner_end;\n          record = vcfThis.buffer2String(record).slice(chunks[x].inner_start, last);\n\n          if (record.length > 0) {\n            record = record.split('\\n').filter(function (rec) {\n              if (rec.length > 0) {\n                var n = parseInt(rec.split('\\t')[1]);\n                return ((beg <= n) && (n <= end));\n              }\n            }).join('\\n');\n\n            records.push(record);\n          }\n\n          loop(++x);\n        });\n      } else {\n        callback(records.join('\\n'));\n      }\n    })(0);\n  };\n\n  VCFReader.prototype.getChunks = function (ref, beg, end) {\n    var tbi     = this.tabix;\n    var vcfThis = this;\n\n    ref = tbi.head.names.indexOf(ref.toString());\n\n    if (ref == -1) {\n      return -1;\n    }\n\n    var bids  = this.reg2bins(beg, end + 1).filter(function (x) { return typeof tbi.bhash[ref][x] != 'undefined'; });\n    var bcnks = bids.map(function (x) { return vcfThis.bin2Ranges(tbi, ref, x); });\n    var cnks  = bcnks.reduce(function (V, ranges) {\n      ranges.forEach(function (item) { V.push(item); });\n      return V;\n    }, []);\n\n    cnks = this.remove_duplicates(cnks);\n\n    return cnks;\n  };\n\n  VCFReader.prototype.inflateRegion = function (d, beg, end, cbfn) {\n    var blocks  = [];\n    var vcfThis = this;\n\n    var cb = function (block, nextBlockOffset) {\n      blocks.push(block);\n\n      if (nextBlockOffset == -1) {\n        cbfn(vcfThis.appendBuffers(blocks), blocks[blocks.length - 1].byteLength);\n      } else if (nextBlockOffset <= end) {\n        vcfThis.inflateBlock(d, nextBlockOffset, cb);\n      } else {\n        cbfn(vcfThis.appendBuffers(blocks), blocks[blocks.length - 1].byteLength);\n      }\n    };\n\n    this.inflateBlock(d, beg, cb);\n  };\n\n  VCFReader.prototype.inflateBlock = function (d, blockOffset, cbfn) {\n    var cb2 = function (hdobj) {\n      d.slice(blockOffset, hdobj.subhead.bsize + 1).fetch(function (block) {\n        var inflated_block  = inflate(block, hdSize, block.byteLength - hdSize);\n        var nextBlockOffset = blockOffset + hdobj.subhead.bsize + 1;\n\n        if (hdobj.subhead.bsize == 27) {\n          nextBlockOffset = -1; // last bgzf block\n        }\n\n        cbfn(inflated_block, nextBlockOffset);\n      });\n    };\n\n    this.getBGZFHD(d, blockOffset, cb2);\n  };\n\n  VCFReader.prototype.getBGZFHD = function (d, offset, cbfn) {\n    d.slice(offset, hdSize + 1).fetch(function (buf) {\n      var parser = new jParser(buf, bgzf_hd_fmt);\n      var hdobj  = parser.parse('bgzfHd');\n      cbfn(hdobj);\n    });\n  };\n\n  VCFReader.prototype.appendBuffers = function (bufferVec) {\n    var totalSize = 0;\n\n    for (var i = 0; i < bufferVec.length; i++) {\n      totalSize = totalSize + bufferVec[i].byteLength;\n    }\n\n    var tmp    = new Uint8Array(totalSize);\n    var offset = 0;\n\n    for (i = 0; i < bufferVec.length; i++) {\n      tmp.set(new Uint8Array(bufferVec[i]), offset);\n      offset = offset + bufferVec[i].byteLength;\n    }\n\n    return tmp.buffer;\n  };\n\n  VCFReader.prototype.buffer2String = function (resultBuffer) {\n    var s        = '';\n    var resultBB = new Uint8Array(resultBuffer);\n\n    for (var i = 0; i < resultBB.length; ++i) {\n      s += String.fromCharCode(resultBB[i]);\n    }\n\n    return s;\n  };\n\n  VCFReader.prototype.remove_duplicates = function (objectsArray) {\n    var usedObjects = {};\n\n    for (var i = objectsArray.length - 1; i >= 0; i--) {\n      var so = JSON.stringify(objectsArray[i]);\n\n      if (usedObjects[so]) {\n        objectsArray.splice(i, 1);\n      } else {\n        usedObjects[so] = true;\n      }\n    }\n\n    return objectsArray;\n  };\n\n  VCFReader.prototype.bin2Ranges = function (tbi, ref, binid) {\n    var ranges = [];\n    var bs     = tbi.indexseq[ref].binseq;\n    var cnkseq = bs[tbi.bhash[ref][binid]].chunkseq;\n    var cnk;\n\n    for (var i = 0; i < cnkseq.length; i++) {\n      cnk = cnkseq[i];\n\n      ranges.push({\n        start       : Math.floor(cnk.cnk_beg / _2p16),\n        inner_start : cnk.cnk_beg % _2p16,\n        end         : Math.floor(cnk.cnk_end / _2p16),\n        inner_end   : cnk.cnk_end % _2p16\n      });\n    }\n\n    return ranges;\n  };\n\n  VCFReader.prototype.reg2bins = function (beg, end) {\n    var list = [];\n    var i;\n\n    --end;\n\n    list.push(0);\n\n    for (i = 1    + (beg >> 26); i <= 1    + (end >> 26); ++i) { list.push(i); }\n    for (i = 9    + (beg >> 23); i <= 9    + (end >> 23); ++i) { list.push(i); }\n    for (i = 73   + (beg >> 20); i <= 73   + (end >> 20); ++i) { list.push(i); }\n    for (i = 585  + (beg >> 17); i <= 585  + (end >> 17); ++i) { list.push(i); }\n    for (i = 4681 + (beg >> 14); i <= 4681 + (end >> 14); ++i) { list.push(i); }\n\n    return list;\n  };\n\n  window.VCFReader = VCFReader;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = VCFReader;\n  }\n})();\n","var Genoverse = Base.extend({\n  // Defaults\n  urlParamTemplate   : 'r=__CHR__:__START__-__END__', // Overwrite this for your URL style\n  width              : 1000,\n  longestLabel       : 30,\n  defaultLength      : 5000,\n  defaultScrollDelta : 100,\n  tracks             : [],\n  highlights         : [],\n  plugins            : [],\n  dragAction         : 'scroll',         // Options are: scroll, select, off\n  wheelAction        : 'off',            // Options are: zoom, off\n  isStatic           : false,            // If true, will stop drag, select and zoom actions occurring\n  saveable           : false,            // If true, track configuration and ordering will be saved in sessionStorage/localStorage\n  saveKey            : '',               // Default key for sessionStorage/localStorage configuration is 'genoverse'. saveKey will be appended to this if it is set\n  storageType        : 'sessionStorage', // Set to localStorage for permanence\n  autoHideMessages   : true,             // Determines whether to collapse track messages by default\n  trackAutoHeight    : false,            // Determines whether to automatically resize tracks to show all their features (can be overridden by track.autoHeight)\n  hideEmptyTracks    : true,             // Determines whether to hide an automatically resized tracks if it has no features, or to show it empty (can be overridden by track.hideEmpty)\n  genome             : undefined,        // The genome used in the browser - can be an object or a string, which will be used to obtain a javascript file\n  useHash            : undefined,        // If true, window.location.hash is changed on navigation. If false, window.history.pushState is used. If undefined, pushState will be used if present in the browser\n\n  // Default coordinates for initial view, overwrite in your config\n  chr   : 1,\n  start : 1,\n  end   : 1000000,\n\n  constructor: function (config) {\n    var browser = this;\n\n    if (!this.supported()) {\n      return this.die('Your browser does not support this functionality');\n    }\n\n    config = config || {};\n\n    config.container = $(config.container); // Make sure container is a jquery object, jquery recognises itself automatically\n\n    if (!(config.container && config.container.length)) {\n      config.container = $('<div>').appendTo('body');\n    }\n\n    config.container.addClass('genoverse').data('genoverse', this);\n\n    $.extend(this, config);\n\n    this.eventNamespace = '.genoverse.' + (++Genoverse.id);\n    this.events         = { browser: {}, tracks: {} };\n\n    $.when(Genoverse.ready, this.loadGenome(), this.loadPlugins()).always(function () {\n      Genoverse.wrapFunctions(browser);\n      browser.init();\n    });\n  },\n\n  loadGenome: function () {\n    if (typeof this.genome === 'string') {\n      var genomeName = this.genome;\n\n      return $.ajax({\n        url      : Genoverse.origin + 'js/genomes/' + genomeName + '.js',\n        dataType : 'script',\n        context  : this,\n        success  : function () {\n          this.genome = Genoverse.Genomes[genomeName];\n\n          if (!this.genome) {\n            this.die('Unable to load genome ' + genomeName);\n          }\n        }\n      });\n    }\n  },\n\n  loadPlugins: function (plugins) {\n    var browser         = this;\n    var loadPluginsTask = $.Deferred();\n\n    plugins = plugins || this.plugins;\n\n    this.loadedPlugins = this.loadedPlugins || {};\n\n    for (var i in Genoverse.Plugins) {\n      this.loadedPlugins[i] = this.loadedPlugins[i] || 'script';\n    }\n\n    if (typeof plugins === 'string') {\n      plugins = [ plugins ];\n    }\n\n    function loadPlugin(plugin) {\n      var css      = Genoverse.origin + 'css/'        + plugin + '.css';\n      var js       = Genoverse.origin + 'js/plugins/' + plugin + '.js';\n      var deferred = $.Deferred();\n\n      function getCSS() {\n        function done() {\n          browser.loadedPlugins[plugin] = browser.loadedPlugins[plugin] || 'script';\n          deferred.resolve(plugin);\n        }\n\n        if (Genoverse.Plugins[plugin].noCSS || $('link[href=\"' + css + '\"]').length) {\n          return done();\n        }\n\n        $('<link href=\"' + css + '\" rel=\"stylesheet\">').on('load', done).appendTo('body');\n      }\n\n      if (browser.loadedPlugins[plugin] || $('script[src=\"' + js + '\"]').length) {\n        getCSS();\n      } else {\n        $.getScript(js, getCSS);\n      }\n\n      return deferred;\n    }\n\n    function initializePlugin(plugin) {\n      if (typeof Genoverse.Plugins[plugin] !== 'function' || browser.loadedPlugins[plugin] === true) {\n        return [];\n      }\n\n      var requires = Genoverse.Plugins[plugin].requires;\n      var deferred = $.Deferred();\n\n      function init() {\n        if (browser.loadedPlugins[plugin] !== true) {\n          Genoverse.Plugins[plugin].call(browser);\n          browser.container.addClass('gv-' + plugin.replace(/([A-Z])/g, '-$1').toLowerCase() + '-plugin');\n          browser.loadedPlugins[plugin] = true;\n        }\n\n        deferred.resolve();\n      }\n\n      if (requires) {\n        $.when(browser.loadPlugins(requires)).done(init);\n      } else {\n        init();\n      }\n\n      return deferred;\n    }\n\n    // Load plugins css file\n    $.when.apply($, $.map(plugins, loadPlugin)).done(function () {\n      var pluginsLoaded = [];\n      var plugin;\n\n      for (var i = 0; i < arguments.length; i++) {\n        plugin = arguments[i];\n\n        if (browser.loadedPlugins[plugin] !== true) {\n          pluginsLoaded.push(initializePlugin(plugin));\n        }\n      }\n\n      $.when.apply($, pluginsLoaded).always(loadPluginsTask.resolve);\n    });\n\n    return loadPluginsTask;\n  },\n\n  init: function () {\n    var width = this.width;\n\n    this.addDomElements(width);\n    this.addUserEventHandlers();\n\n    if (this.isStatic) {\n      this.dragAction       = this.wheelAction = 'off';\n      this.urlParamTemplate = false;\n    }\n\n    this.tracksById       = {};\n    this.prev             = {};\n    this.legends          = {};\n    this.saveKey          = this.saveKey ? 'genoverse-' + this.saveKey : 'genoverse';\n    this.urlParamTemplate = this.urlParamTemplate || '';\n    this.useHash          = typeof this.useHash === 'boolean' ? this.useHash : typeof window.history.pushState !== 'function';\n    this.textWidth        = document.createElement('canvas').getContext('2d').measureText('W').width;\n    this.labelWidth       = this.labelContainer.outerWidth(true);\n    this.width           -= this.labelWidth;\n    this.paramRegex       = this.urlParamTemplate ? new RegExp('([?&;])' + this.urlParamTemplate\n      .replace(/(\\b(\\w+=)?__CHR__(.)?)/,   '$2([\\\\w\\\\.]+)$3')\n      .replace(/(\\b(\\w+=)?__START__(.)?)/, '$2(\\\\d+)$3')\n      .replace(/(\\b(\\w+=)?__END__(.)?)/,   '$2(\\\\d+)$3') + '([;&])'\n    ) : '';\n\n    var urlCoords = this.getURLCoords();\n    var coords    = urlCoords.chr && urlCoords.start && urlCoords.end ? urlCoords : { chr: this.chr, start: this.start, end: this.end };\n\n    this.chr = coords.chr;\n\n    if (this.genome) {\n      this.chromosomeSize = this.genome[this.chr].size;\n    }\n\n    this.canChangeChr = !!this.genome;\n\n    if (this.saveable) {\n      this.loadConfig();\n    } else {\n      this.addTracks();\n    }\n\n    this.setRange(coords.start, coords.end);\n\n    if (this.highlights.length) {\n      this.addHighlights(this.highlights);\n    }\n  },\n\n  loadConfig: function () {\n    this.defaultTracks = $.extend([], true, this.tracks);\n\n    var config = window[this.storageType].getItem(this.saveKey);\n\n    if (config) {\n      config = JSON.parse(config);\n    } else {\n      return this.addTracks();\n    }\n\n    var tracksByNamespace = Genoverse.getAllTrackTypes();\n    var tracks            = [];\n    var tracksById        = {};\n    var savedConfig       = {};\n    var i, prop, track;\n\n    function setConfig(track, conf) {\n      for (prop in conf) {\n        if (prop === 'config') {\n          savedConfig[conf.id] = conf[prop];\n        } else {\n          if (prop === 'height') {\n            conf[prop] = parseInt(conf[prop], 10);\n\n            if (isNaN(conf[prop])) {\n              continue;\n            }\n          }\n\n          track.prototype[prop] = conf[prop];\n        }\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id) {\n        tracksById[this.tracks[i].prototype.id] = this.tracks[i];\n      }\n    }\n\n    for (i = 0; i < config.length; i++) {\n      track = tracksById[config[i].id];\n\n      if (track) {\n        setConfig(track, config[i]);\n        track._fromStorage = true;\n      } else if (tracksByNamespace[config[i].namespace]) {\n        track = tracksByNamespace[config[i].namespace];\n\n        this.trackIds = this.trackIds || {};\n        this.trackIds[track.prototype.id] = this.trackIds[track.prototype.id] || 1;\n\n        config[i].id = config[i].id || track.prototype.id;\n\n        track = track.extend({ id: !tracksById[config[i].id] ? config[i].id : track.prototype.id + (tracksById[track.prototype.id] ? this.trackIds[track.prototype.id]++ : '') });\n\n        setConfig(track, config[i]);\n        tracks.push(track);\n      }\n    }\n\n    for (i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].prototype.id && !this.tracks[i]._fromStorage) {\n        continue;\n      }\n\n      tracks.push(this.tracks[i]);\n    }\n\n    this.tracks      = tracks;\n    this.savedConfig = savedConfig;\n\n    this.addTracks();\n  },\n\n  saveConfig: function () {\n    if (this._constructing || !this.saveable) {\n      return;\n    }\n\n    var config = [];\n    var conf, j;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].id && !(this.tracks[i] instanceof Genoverse.Track.Legend) && !(this.tracks[i] instanceof Genoverse.Track.HighlightRegion)) {\n        // when saving height, initialHeight is the height of the track once margins have been added, while defaultHeight is the DEFINED height of the track.\n        // Subtracting the difference between them gives you back the correct height to input back into the track when loading configuration\n        conf = {\n          id         : this.tracks[i].id,\n          namespace  : this.tracks[i].namespace,\n          order      : this.tracks[i].order,\n          autoHeight : this.tracks[i].autoHeight,\n          height     : this.tracks[i].height - (this.tracks[i].initialHeight - this.tracks[i].defaultHeight)\n        };\n\n        if (this.tracks[i].config) {\n          for (j in this.tracks[i].config) {\n            conf.config    = conf.config || {};\n            conf.config[j] = this.tracks[i].config[j];\n          }\n        }\n\n        config.push(conf);\n      }\n    }\n\n    // Safari in private browsing mode does not allow writes to storage, so wrap in a try/catch to stop errors occuring\n    try {\n      window[this.storageType].setItem(this.saveKey, JSON.stringify(config));\n    } catch (e) {}\n  },\n\n  resetConfig: function () {\n    // Non removable highlights should be re-added after reset\n    var unremovableHighlights = [];\n\n    if (this.tracksById.highlights) {\n      this.tracksById.highlights.removeHighlights();\n      unremovableHighlights = $.map(this.tracksById.highlights.prop('featuresById'), function (h) { return h; });\n    }\n\n    window[this.storageType].removeItem(this.saveKey);\n\n    this._constructing = true;\n    this.savedConfig   = {};\n\n    this.removeTracks($.extend([],    this.tracks)); // Shallow clone to ensure that removeTracks doesn't hit problems when splicing this.tracks\n    this.addTracks($.extend(true, [], this.defaultTracks));\n\n    if (unremovableHighlights.length) {\n      this.addHighlights(unremovableHighlights);\n    }\n\n    this._constructing = false;\n  },\n\n  addDomElements: function (width) {\n    this.menus          = $();\n    this.labelContainer = $('<ul class=\"gv-label-container\">').appendTo(this.container).sortable({\n      items  : 'li:not(.gv-unsortable)',\n      handle : '.gv-handle',\n      axis   : 'y',\n      helper : 'clone',\n      cursor : 'move',\n      update : $.proxy(this.updateTrackOrder, this),\n      start  : function (e, ui) {\n        ui.placeholder.css({ height: ui.item.height(), visibility: 'visible' }).html(ui.item.html());\n        ui.helper.hide();\n      }\n    });\n\n    this.wrapper  = $('<div class=\"gv-wrapper\">').appendTo(this.container);\n    this.selector = $('<div class=\"gv-selector gv-crosshair\">').appendTo(this.wrapper);\n\n    this.selectorControls = this.zoomInHighlight = this.zoomOutHighlight = $();\n\n    this.container.addClass('gv-canvas-container').width(width);\n\n    if (!this.isStatic) {\n      this.selectorControls = $(\n        '<div class=\"gv-selector-controls gv-panel\">'         +\n        '  <div class=\"gv-button-set\">'                       +\n        '  <div class=\"gv-position\">'                         +\n        '    <div class=\"gv-chr\"></div>'                      +\n        '    <div class=\"gv-start-end\">'                      +\n        '      <div class=\"gv-start\"></div>'                  +\n        '      <div class=\"gv-end\"></div>'                    +\n        '    </div>'                                          +\n        '  </div>'                                            +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-zoom-here\">Zoom here</button>' +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-center\">Center</button>'       +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-highlight\">Highlight</button>' +\n        '  </div>'                                            +\n        '  <div class=\"gv-button-set\">'                       +\n        '    <button class=\"gv-cancel\">Cancel</button>'       +\n        '  </div>'                                            +\n        '</div>'\n      ).appendTo(this.selector);\n\n      this.zoomInHighlight = $(\n        '<div class=\"gv-canvas-zoom gv-i\">' +\n        '  <div class=\"gv-t gv-l gv-h\"></div>' +\n        '  <div class=\"gv-t gv-r gv-h\"></div>' +\n        '  <div class=\"gv-t gv-l gv-v\"></div>' +\n        '  <div class=\"gv-t gv-r gv-v\"></div>' +\n        '  <div class=\"gv-b gv-l gv-h\"></div>' +\n        '  <div class=\"gv-b gv-r gv-h\"></div>' +\n        '  <div class=\"gv-b gv-l gv-v\"></div>' +\n        '  <div class=\"gv-b gv-r gv-v\"></div>' +\n        '</div>'\n      ).appendTo('body');\n\n      this.zoomOutHighlight = this.zoomInHighlight.clone().toggleClass('gv-i gv-o').appendTo('body');\n    }\n  },\n\n  addUserEventHandlers: function () {\n    var browser        = this;\n    var documentEvents = {};\n\n    this.container.on({\n      mousedown: function (e) {\n        browser.hideMessages();\n\n        // Only scroll on left click, and do nothing if clicking on a button in selectorControls\n        if ((!e.which || e.which === 1) && !(this === browser.selector[0] && e.target !== this)) {\n          browser.mousedown(e);\n        }\n\n        return false;\n      },\n      mousewheel: function (e, delta, deltaX, deltaY) {\n        if (browser.noWheelZoom) {\n          return true;\n        }\n\n        browser.hideMessages();\n\n        if (deltaY === 0 && deltaX !== 0) {\n          browser.startDragScroll(e);\n          browser.move(-deltaX * 10);\n          browser.stopDragScroll(false);\n        } else if (browser.wheelAction === 'zoom') {\n          return browser.mousewheelZoom(e, delta);\n        }\n      },\n      dblclick: function (e) {\n        if (browser.isStatic) {\n          return true;\n        }\n\n        browser.hideMessages();\n        browser.mousewheelZoom(e, 1);\n      }\n    }, '.gv-image-container, .gv-selector');\n\n    this.selectorControls.on('click', function (e) {\n      var pos = browser.getSelectorPosition();\n\n      switch (e.target.className) {\n        case 'gv-zoom-here' : browser.setRange(pos.start, pos.end, true); break;\n        case 'gv-center'    : browser.moveTo(browser.chr, pos.start, pos.end, true, true); browser.cancelSelect(); break;\n        case 'gv-highlight' : browser.addHighlight({ chr: browser.chr, start: pos.start, end: pos.end });\n        case 'gv-cancel'    : browser.cancelSelect(); break;\n        default             : break;\n      }\n    });\n\n    documentEvents['mouseup'    + this.eventNamespace] = $.proxy(this.mouseup,   this);\n    documentEvents['mousemove'  + this.eventNamespace] = $.proxy(this.mousemove, this);\n    documentEvents['keydown'    + this.eventNamespace] = $.proxy(this.keydown,   this);\n    documentEvents['keyup'      + this.eventNamespace] = $.proxy(this.keyup,     this);\n    documentEvents['mousewheel' + this.eventNamespace] = function (e) {\n      if (browser.wheelAction === 'zoom') {\n        if (browser.wheelTimeout) {\n          clearTimeout(browser.wheelTimeout);\n        }\n\n        browser.noWheelZoom  = browser.noWheelZoom || e.target !== browser.container[0];\n        browser.wheelTimeout = setTimeout(function () { browser.noWheelZoom = false; }, 300);\n      }\n    };\n\n    $(document).on(documentEvents);\n    $(window).on((this.useHash ? 'hashchange' : 'popstate') + this.eventNamespace, $.proxy(this.popState, this));\n  },\n\n  onTracks: function () {\n    var args = $.extend([], arguments);\n    var func = args.shift();\n    var mvc;\n\n    for (var i = 0; i < this.tracks.length; i++) {\n      if (this.tracks[i].disabled) {\n        continue;\n      }\n\n      mvc = this.tracks[i]._interface[func];\n\n      if (mvc) {\n        this.tracks[i][mvc][func].apply(this.tracks[i][mvc], args);\n      } else if (this.tracks[i][func]) {\n        this.tracks[i][func].apply(this.tracks[i], args);\n      }\n    }\n  },\n\n  reset: function () {\n    this.onTracks.apply(this, [ 'reset' ].concat([].slice.call(arguments)));\n    this.prev  = {};\n    this.scale = 9e99; // arbitrary value so that setScale resets track scales as well\n    this.setRange(this.start, this.end);\n  },\n\n  setWidth: function (width) {\n    this.width  = width;\n    this.width -= this.labelWidth;\n\n    if (this.controlPanel) {\n      this.width -= this.controlPanel.width();\n    }\n\n    if (this.superContainer) {\n      this.superContainer.width(width);\n      this.container.width(this.width);\n    } else {\n      this.container.width(width);\n    }\n\n    this.onTracks('setWidth', this.width);\n    this.reset('resizing');\n  },\n\n  mousewheelZoom: function (e, delta) {\n    var browser = this;\n\n    clearTimeout(this.zoomDeltaTimeout);\n    clearTimeout(this.zoomTimeout);\n\n    this.zoomDeltaTimeout = setTimeout(function () {\n      if (delta > 0) {\n        browser.zoomInHighlight.css({ left: e.pageX - 20, top: e.pageY - 20, display: 'block' }).animate({\n          width: 80, height: 80, top: '-=20', left: '-=20'\n        }, {\n          complete: function () { $(this).css({ width: 40, height: 40, display: 'none' }); }\n        });\n      } else {\n        browser.zoomOutHighlight.css({ left: e.pageX - 40, top: e.pageY - 40, display: 'block' }).animate({\n          width: 40, height: 40, top: '+=20', left: '+=20'\n        }, {\n          complete: function () { $(this).css({ width: 80, height: 80, display: 'none' }); }\n        });\n      }\n    }, 100);\n\n    this.zoomTimeout = setTimeout(function () {\n      browser[delta > 0 ? 'zoomIn' : 'zoomOut'](e.pageX - browser.container.offset().left - browser.labelWidth);\n\n      if (browser.dragAction === 'select') {\n        browser.moveSelector(e);\n      }\n    }, 300);\n\n    return false;\n  },\n\n  startDragScroll: function (e) {\n    this.dragging    = 'scroll';\n    this.scrolling   = !e;\n    this.dragOffset  = e ? e.pageX - this.left : 0;\n    this.dragStart   = this.start;\n    this.scrollDelta = Math.max(this.scale, this.defaultScrollDelta);\n  },\n\n  stopDragScroll: function (update) {\n    this.dragging  = false;\n    this.scrolling = false;\n\n    if (update !== false) {\n      if (this.start !== this.dragStart) {\n        this.updateURL();\n      }\n\n      this.checkTrackHeights();\n    }\n  },\n\n  startDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    var x = Math.max(0, e.pageX - this.wrapper.offset().left - 2);\n\n    this.dragging        = 'select';\n    this.selectorStalled = false;\n    this.selectorStart   = x;\n\n    this.selector.css({ left: x, width: 0 }).removeClass('gv-crosshair');\n    this.selectorControls.hide();\n  },\n\n  stopDragSelect: function (e) {\n    if (!e) {\n      return false;\n    }\n\n    this.dragging        = false;\n    this.selectorStalled = true;\n\n    if (this.selector.outerWidth(true) < 2) {\n      return this.cancelSelect();\n    }\n\n    // Calculate the position, so that selectorControls appear near the mouse cursor\n    var top = Math.min(e.pageY - this.wrapper.offset().top, this.wrapper.outerHeight(true) - 1.2 * this.selectorControls.outerHeight(true));\n    var pos = this.getSelectorPosition();\n\n    this.selectorControls.find('.gv-chr').html(this.chr);\n    this.selectorControls.find('.gv-start').html(pos.start);\n    this.selectorControls.find('.gv-end').html(pos.end);\n\n    this.selectorControls.find('.gv-selector-location').html(this.chr + ':' + pos.start + '-' + pos.end).end().css({\n      top  : top,\n      left : this.selector.outerWidth(true) / 2 - this.selectorControls.outerWidth(true) / 2\n    }).show();\n  },\n\n  cancelSelect: function (keepDragging) {\n    if (!keepDragging) {\n      this.dragging = false;\n    }\n\n    this.selectorStalled = false;\n\n    this.selector.addClass('gv-crosshair').width(0);\n    this.selectorControls.hide();\n\n    if (this.dragAction === 'scroll') {\n      this.selector.hide();\n    }\n  },\n\n  dragSelect: function (e) {\n    var x = e.pageX - this.wrapper.offset().left;\n\n    if (x > this.selectorStart) {\n      this.selector.css({\n        left  : this.selectorStart,\n        width : Math.min(x - this.selectorStart, this.width - this.selectorStart - 1)\n      });\n    } else {\n      this.selector.css({\n        left  : Math.max(x, 1),\n        width : Math.min(this.selectorStart - x, this.selectorStart - 1)\n      });\n    }\n  },\n\n  setDragAction: function (action, keepSelect) {\n    this.dragAction = action;\n\n    if (this.dragAction === 'select') {\n      this.selector.addClass('gv-crosshair').width(0).show();\n    } else if (keepSelect && !this.selector.hasClass('gv-crosshair')) {\n      this.selectorStalled = false;\n    } else {\n      this.cancelSelect();\n      this.selector.hide();\n    }\n  },\n\n  toggleSelect: function (on) {\n    if (on) {\n      this.prev.dragAction = 'scroll';\n      this.setDragAction('select');\n    } else {\n      this.setDragAction(this.prev.dragAction, true);\n      delete this.prev.dragAction;\n    }\n  },\n\n  setWheelAction: function (action) {\n    this.wheelAction = action;\n  },\n\n  keydown: function (e) {\n    if (e.which === 16 && !this.prev.dragAction && this.dragAction === 'scroll') { // shift key\n      this.toggleSelect(true);\n    } else if (e.which === 27) { // escape key\n      this.cancelSelect();\n      this.closeMenus();\n    }\n  },\n\n  keyup: function (e) {\n    if (e.which === 16 && this.prev.dragAction) { // shift key\n      this.toggleSelect();\n    }\n  },\n\n  mousedown: function (e) {\n    if (e.shiftKey) {\n      if (this.dragAction === 'scroll') {\n        this.toggleSelect(true);\n      }\n    } else if (this.prev.dragAction) {\n      this.toggleSelect();\n    }\n\n    switch (this.dragAction) {\n      case 'select' : this.startDragSelect(e); break;\n      case 'scroll' : this.startDragScroll(e); break;\n      default       : break;\n    }\n  },\n\n  mouseup: function (e) {\n    switch (this.dragging) {\n      case 'select' : this.stopDragSelect(e); break;\n      case 'scroll' : this.stopDragScroll();  break;\n      default       : break;\n    }\n  },\n\n  mousemove: function (e) {\n    if (this.dragging && !this.scrolling) {\n      switch (this.dragAction) {\n        case 'scroll' : this.move(e.pageX - this.dragOffset - this.left); break;\n        case 'select' : this.dragSelect(e); break;\n        default       : break;\n      }\n    } else if (this.dragAction === 'select') {\n      this.moveSelector(e);\n    }\n  },\n\n  moveSelector: function (e) {\n    if (!this.selectorStalled) {\n      this.selector.css('left', e.pageX - this.wrapper.offset().left - 2);\n    }\n  },\n\n  move: function (delta) {\n    var scale = this.scale;\n    var start, end, left;\n\n    if (scale > 1) {\n      delta = Math.round(delta / scale) * scale; // Force stepping by base pair when in small regions\n    }\n\n    left = this.left + delta;\n\n    if (left <= this.minLeft) {\n      left  = this.minLeft;\n      delta = this.minLeft - this.left;\n    } else if (left >= this.maxLeft) {\n      left  = this.maxLeft;\n      delta = this.maxLeft - this.left;\n    }\n\n    start = Math.max(Math.round(this.start - delta / scale), 1);\n    end   = start + this.length - 1;\n\n    if (end > this.chromosomeSize) {\n      end   = this.chromosomeSize;\n      start = end - this.length + 1;\n    }\n\n    this.left = left;\n\n    if (start !== this.dragStart) {\n      this.closeMenus();\n      this.cancelSelect(true);\n    }\n\n    this.onTracks('move', delta);\n    this.setRange(start, end);\n  },\n\n  moveTo: function (chr, start, end, update, keepLength) {\n    if (typeof chr !== 'undefined' && chr != this.chr) {\n      if (this.canChangeChr) {\n        if (this.genome && this.genome[chr]) {\n          this.chr            = chr;\n          this.chromosomeSize = this.genome[chr].size;\n          this.start          = this.end = this.scale = -1;\n        } else {\n          this.die('Chromosome cannot be found in genome');\n        }\n\n        this.onTracks('changeChr');\n      } else {\n        this.die('Chromosome changing is not allowed');\n      }\n    }\n\n    this.setRange(start, end, update, keepLength);\n\n    if (this.prev.scale === this.scale) {\n      this.left = Math.max(Math.min(this.left + Math.round((this.prev.start - this.start) * this.scale), this.maxLeft), this.minLeft);\n      this.onTracks('moveTo', this.chr, this.start, this.end, (this.prev.start - this.start) * this.scale);\n    }\n  },\n\n  setRange: function (start, end, update, keepLength) {\n    this.prev.start = this.start;\n    this.prev.end   = this.end;\n    this.start      = Math.min(Math.max(typeof start === 'number' ? Math.floor(start) : parseInt(start, 10), 1), this.chromosomeSize);\n    this.end        = Math.max(Math.min(typeof end   === 'number' ? Math.floor(end)   : parseInt(end,   10), this.chromosomeSize), 1);\n\n    if (this.end < this.start) {\n      this.end = Math.min(this.start + this.defaultLength - 1, this.chromosomeSize);\n    }\n\n    if (keepLength && this.end - this.start + 1 !== this.length) {\n      if (this.end === this.chromosomeSize) {\n        this.start = this.end - this.length + 1;\n      } else {\n        var center = (this.start + this.end) / 2;\n        this.start = Math.max(Math.floor(center - this.length / 2), 1);\n        this.end   = this.start + this.length - 1;\n\n        if (this.end > this.chromosomeSize) {\n          this.end   = this.chromosomeSize;\n          this.start = this.end - this.length + 1;\n        }\n      }\n    } else {\n      this.length = this.end - this.start + 1;\n    }\n\n    this.setScale();\n\n    if (update === true && (this.prev.start !== this.start || this.prev.end !== this.end)) {\n      this.updateURL();\n    }\n  },\n\n  setScale: function () {\n    this.prev.scale  = this.scale;\n    this.scale       = this.width / this.length;\n    this.scaledStart = this.start * this.scale;\n\n    if (this.prev.scale !== this.scale) {\n      this.left        = 0;\n      this.minLeft     = Math.round((this.end   - this.chromosomeSize) * this.scale);\n      this.maxLeft     = Math.round((this.start - 1) * this.scale);\n      this.labelBuffer = Math.ceil(this.textWidth / this.scale) * this.longestLabel;\n\n      if (this.prev.scale) {\n        this.cancelSelect();\n        this.closeMenus();\n      }\n\n      this.onTracks('setScale');\n      this.onTracks('makeFirstImage');\n    }\n  },\n\n  checkTrackHeights: function () {\n    if (this.dragging) {\n      return;\n    }\n\n    this.onTracks('checkHeight');\n  },\n\n  resetTrackHeights: function () {\n    this.onTracks('resetHeight');\n  },\n\n  zoomIn: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start + x / (2 * this.scale));\n    var end   = this.length === 2 ? start : Math.round(start + (this.length - 1) / 2);\n\n    this.setRange(start, end, true);\n  },\n\n  zoomOut: function (x) {\n    if (!x) {\n      x = this.width / 2;\n    }\n\n    var start = Math.round(this.start - x / this.scale);\n    var end   = this.length === 1 ? start + 1 : Math.round(start + 2 * (this.length - 1));\n\n    this.setRange(start, end, true);\n  },\n\n  addTrack: function (track, after) {\n    return this.addTracks([ track ], after)[0];\n  },\n\n  addTracks: function (tracks, after) {\n    var defaults = {\n      browser : this,\n      width   : this.width\n    };\n\n    var push = !!tracks;\n    var order;\n\n    tracks = tracks || $.extend([], this.tracks);\n\n    if (push && !$.grep(this.tracks, function (t) { return typeof t === 'function'; }).length) {\n      var insertAfter = (after ? $.grep(this.tracks, function (t) { return t.order < after; }) : this.tracks).sort(function (a, b) { return b.order - a.order; })[0];\n\n      if (insertAfter) {\n        order = insertAfter.order + 0.1;\n      }\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      tracks[i] = new tracks[i]($.extend(defaults, {\n        namespace : Genoverse.getTrackNamespace(tracks[i]),\n        order     : typeof order === 'number' ? order : i,\n        config    : this.savedConfig ? $.extend(true, {}, this.savedConfig[tracks[i].prototype.id]) : undefined\n      }));\n\n      if (tracks[i].id) {\n        this.tracksById[tracks[i].id] = tracks[i];\n      }\n\n      if (push) {\n        this.tracks.push(tracks[i]);\n      } else {\n        this.tracks[i] = tracks[i];\n      }\n    }\n\n    this.sortTracks();\n    this.saveConfig();\n\n    return tracks;\n  },\n\n  removeTrack: function (track) {\n    this.removeTracks((track.prop('childTracks') || []).concat(track));\n  },\n\n  removeTracks: function (tracks) {\n    var i = tracks.length;\n    var track, j;\n\n    while (i--) {\n      track = tracks[i];\n      j     = this.tracks.length;\n\n      while (j--) {\n        if (track === this.tracks[j]) {\n          this.tracks.splice(j, 1);\n          break;\n        }\n      }\n\n      if (track.id) {\n        delete this.tracksById[track.id];\n      }\n\n      track.destructor(); // Destroy DOM elements and track itself\n    }\n\n    this.saveConfig();\n  },\n\n  sortTracks: function () {\n    if ($.grep(this.tracks, function (t) { return typeof t !== 'object'; }).length) {\n      return;\n    }\n\n    var sorted     = $.extend([], this.tracks).sort(function (a, b) { return a.order - b.order; });\n    var labels     = $();\n    var containers = $();\n    var container;\n\n    for (var i = 0; i < sorted.length; i++) {\n      if (sorted[i].prop('parentTrack')) {\n        continue;\n      }\n\n      if (!sorted[i].prop('fixedOrder')) {\n        sorted[i].prop('order', i);\n      }\n\n      container = sorted[i].prop('superContainer') || sorted[i].prop('container');\n\n      if (sorted[i].prop('menus').length) {\n        sorted[i].prop('top', container.position().top);\n      }\n\n      labels.push(sorted[i].prop('label')[0]);\n      containers.push(container[0]);\n    }\n\n    this.labelContainer.append(labels);\n    this.wrapper.append(containers);\n\n    // Correct the order\n    this.tracks = sorted;\n\n    labels.map(function () { return $(this).data('track'); }).each(function () {\n      if (this.prop('menus').length) {\n        var diff = (this.prop('superContainer') || this.prop('container')).position().top - this.prop('top');\n        this.prop('menus').css('top', function (i, top) { return parseInt(top, 10) + diff; });\n        this.prop('top', null);\n      }\n    });\n\n    sorted = labels = containers = null;\n  },\n\n  updateTrackOrder: function (e, ui) {\n    var track = ui.item.data('track');\n\n    if (track.prop('unsortable') || track.prop('fixedOrder')) {\n      return;\n    }\n\n    var prev = ui.item.prev().data('track');\n    var next = ui.item.next().data('track');\n    var p    = prev ? prev.prop('order') : 0;\n    var n    = next ? next.prop('order') : 0;\n    var o    = p || n;\n    var order;\n\n    if (prev && next && Math.floor(n) === Math.floor(p)) {\n      order = p + (n - p) / 2;\n    } else {\n      order = o + (p ? 1 : -1) * Math.abs(Math.round(o) - o || 1) / 2;\n    }\n\n    track.prop('order', order);\n\n    this.sortTracks();\n    this.saveConfig();\n  },\n\n  updateURL: function () {\n    if (this.urlParamTemplate) {\n      if (this.useHash) {\n        window.location.hash = this.getQueryString();\n      } else {\n        window.history.pushState({}, '', this.getQueryString());\n      }\n    }\n  },\n\n  popState: function () {\n    var coords = this.getURLCoords();\n    var start  = parseInt(coords.start, 10);\n    var end    = parseInt(coords.end,   10);\n\n    if (\n      (coords.chr && coords.chr != this.chr) ||\n      (coords.start && !(start === this.start && end === this.end))\n    ) {\n      // FIXME: a back action which changes scale or a zoom out will reset tracks, since scrollStart will not be the same as it was before\n      this.moveTo(coords.chr, start, end);\n    }\n\n    this.closeMenus();\n    this.hideMessages();\n  },\n\n  getURLCoords: function () {\n    var match  = ((this.useHash ? window.location.hash.replace(/^#/, '?') || window.location.search : window.location.search) + '&').match(this.paramRegex);\n    var coords = {};\n    var i      = 0;\n\n    if (!match) {\n      return coords;\n    }\n\n    match = match.slice(2, -1);\n\n    $.each(this.urlParamTemplate.split('__'), function () {\n      var tmp = this.match(/^(CHR|START|END)$/);\n\n      if (tmp) {\n        coords[tmp[1].toLowerCase()] = tmp[1] === 'CHR' ? match[i++] : parseInt(match[i++], 10);\n      }\n    });\n\n    return coords;\n  },\n\n  getQueryString: function () {\n    var location = this.urlParamTemplate\n      .replace('__CHR__',   this.chr)\n      .replace('__START__', this.start)\n      .replace('__END__',   this.end);\n\n    return this.useHash ? location : window.location.search ? (window.location.search + '&').replace(this.paramRegex, '$1' + location + '$5').slice(0, -1) : '?' + location;\n  },\n\n  getChromosomeSize: function (chr) {\n    return chr && this.genome && this.genome[chr] ? this.genome[chr].size : this.chromosomeSize;\n  },\n\n  supported: function () {\n    var el = document.createElement('canvas');\n    return !!(el.getContext && el.getContext('2d'));\n  },\n\n  die: function (error, el) {\n    if (el && el.length) {\n      el.html(error);\n    } else {\n      throw error;\n    }\n\n    this.failed = true;\n  },\n\n  menuTemplate: $(\n    '<div class=\"gv-menu\">'                                            +\n      '<div class=\"gv-close gv-menu-button fa fa-times-circle\"></div>' +\n      '<div class=\"gv-menu-loading\">Loading...</div>'                  +\n      '<div class=\"gv-menu-content\">'                                  +\n        '<div class=\"gv-title\"></div>'                                 +\n        '<a class=\"gv-focus\" href=\"#\">Focus here</a>'                  +\n        '<a class=\"gv-highlight\" href=\"#\">Highlight this feature</a>'  +\n        '<table></table>'                                              +\n      '</div>'                                                         +\n    '</div>'\n  ).on('click', function (e) {\n    if ($(e.target).hasClass('gv-close')) {\n      $(this).fadeOut('fast', function () {\n        var data = $(this).data();\n\n        if (data.track) {\n          data.track.prop('menus', data.track.prop('menus').not(this));\n        }\n\n        data.browser.menus = data.browser.menus.not(this);\n      });\n    }\n  }),\n\n  makeMenu: function (features, event, track) {\n    if (!features) {\n      return false;\n    }\n\n    if (!Array.isArray(features)) {\n      features = [ features ];\n    }\n\n    if (features.length === 0) {\n      return false;\n    } else if (features.length === 1) {\n      return this.makeFeatureMenu(features[0], event, track);\n    }\n\n    var browser   = this;\n    var menu      = this.menuTemplate.clone(true).data({ browser: this });\n    var contentEl = $('.gv-menu-content', menu).addClass('gv-menu-content-first');\n    var table     = $('table', contentEl);\n\n    $('.gv-focus, .gv-highlight, .gv-menu-loading', menu).remove();\n    $('.gv-title', menu).html(features.length + ' features');\n\n    $.each(features.sort(function (a, b) { return a.start - b.start; }), function (i, feature) {\n      var location = feature.chr + ':' + feature.start + (feature.end === feature.start ? '' : '-' + feature.end);\n      var title    = feature.menuLabel || feature.name || (Array.isArray(feature.label) ? feature.label.join(' ') : feature.label) || (feature.id + '');\n\n      $('<a href=\"#\">').html(title.match(location) ? title : (location + ' ' + title)).on('click', function (e) {\n        browser.makeFeatureMenu(feature, e, track);\n        return false;\n      }).appendTo($('<td>').appendTo($('<tr>').appendTo(table)));\n    });\n\n    $('<div class=\"gv-menu-scroll-wrapper\">').append(table).appendTo(contentEl)\n\n    menu.appendTo(this.superContainer || this.container).show();\n\n    if (event) {\n      menu.css({ left: 0, top: 0 }).position({ of: event, my: 'left top', collision: 'flipfit' });\n    }\n\n    this.menus = this.menus.add(menu);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(menu));\n    }\n\n    return menu;\n  },\n\n  makeFeatureMenu: function (feature, e, track) {\n    var browser   = this;\n    var container = this.superContainer || this.container;\n    var menu, content, loading, getMenu, isDeferred, i, j,  el, chr, start, end, linkData, key, columns, colspan;\n\n    function focus() {\n      var data    = $(this).data();\n      var length  = data.end - data.start + 1;\n      var context = Math.max(Math.round(length / 4), 25);\n\n      browser.moveTo(data.chr, data.start - context, data.end + context, true);\n\n      return false;\n    }\n\n    function highlight() {\n      browser.addHighlight($(this).data());\n      return false;\n    }\n\n    if (!feature.menuEl) {\n      menu       = browser.menuTemplate.clone(true).data({ browser: browser, feature: feature });\n      content    = $('.gv-menu-content', menu).remove();\n      loading    = $('.gv-menu-loading', menu);\n      getMenu    = track ? track.controller.populateMenu(feature) : feature;\n      isDeferred = typeof getMenu === 'object' && typeof getMenu.promise === 'function';\n\n      if (isDeferred) {\n        loading.show();\n      }\n\n      $.when(getMenu).done(function (properties) {\n        if (!Array.isArray(properties)) {\n          properties = [ properties ];\n        }\n\n        for (i = 0; i < properties.length; i++) {\n          table   = '';\n          el      = content.clone().addClass(i ? '' : 'gv-menu-content-first').appendTo(menu);\n          chr     = typeof properties[i].chr !== 'undefined' ? properties[i].chr : feature.chr;\n          start   = parseInt(typeof properties[i].start !== 'undefined' ? properties[i].start : feature.start, 10);\n          end     = parseInt(typeof properties[i].end   !== 'undefined' ? properties[i].end   : feature.end,   10);\n          columns = Math.max.apply(Math, $.map(properties[i], function (v) { return Array.isArray(v) ? v.length : 1; }));\n\n          $('.gv-title', el)[properties[i].title ? 'html' : 'remove'](properties[i].title);\n\n          if (track && start && end && !browser.isStatic) {\n            linkData = { chr: chr, start: start, end: Math.max(end, start), label: feature.label || (properties[i].title || '').replace(/<[^>]+>/g, ''), color: feature.color };\n\n            $('.gv-focus',     el).data(linkData).on('click', focus);\n            $('.gv-highlight', el).data(linkData).on('click', highlight);\n          } else {\n            $('.gv-focus, .gv-highlight', el).remove();\n          }\n\n          for (key in properties[i]) {\n            if (/^start|end$/.test(key) && properties[i][key] === false) {\n              continue;\n            }\n\n            if (key !== 'title') {\n              colspan = properties[i][key] === '' ? ' colspan=\"' + (columns + 1) + '\"' : '';\n              table  += '<tr><td' + colspan + '>' + key + '</td>';\n\n              if (!colspan) {\n                if (Array.isArray(properties[i][key])) {\n                  for (j = 0; j < properties[i][key].length; j++) {\n                    table += '<td>' + properties[i][key][j] + '</td>';\n                  }\n                } else if (columns === 1) {\n                  table += '<td>' + properties[i][key] + '</td>';\n                } else {\n                  table += '<td colspan=\"' + columns + '\">' + properties[i][key] + '</td>';\n                }\n              }\n\n              table += '</tr>';\n            }\n          }\n\n          $('table', el)[table ? 'html' : 'remove'](table);\n        }\n\n        if (isDeferred) {\n          loading.hide();\n        }\n      });\n\n      if (track) {\n        menu.addClass(track.id).data('track', track);\n      }\n\n      feature.menuEl = menu.appendTo(container);\n    } else {\n      feature.menuEl.appendTo(container); // Move the menu to the end of the container again, so that it will always be on top of other menus\n    }\n\n    browser.menus = browser.menus.add(feature.menuEl);\n\n    if (track) {\n      track.prop('menus', track.prop('menus').add(feature.menuEl));\n    }\n\n    feature.menuEl.show(); // Must show before positioning, else position will be wrong\n\n    if (e) {\n      feature.menuEl.css({ left: 0, top: 0 }).position({ of: e, my: 'left top', collision: 'flipfit' });\n    }\n\n    return feature.menuEl;\n  },\n\n  closeMenus: function (obj) {\n    obj = obj || this;\n\n    obj.menus.filter(':visible').children('.gv-close').trigger('click');\n    obj.menus = $();\n  },\n\n  hideMessages: function () {\n    if (this.autoHideMessages) {\n      this.wrapper.find('.gv-message-container').addClass('gv-collapsed');\n    }\n  },\n\n  getSelectorPosition: function () {\n    var left  = this.selector.position().left;\n    var width = this.selector.outerWidth(true);\n    var start = Math.round(left / this.scale) + this.start;\n    var end   = Math.round((left + width) / this.scale) + this.start - 1;\n        end   = end <= start ? start : end;\n\n    return { start: start, end: end, left: left, width: width };\n  },\n\n  addHighlight: function (highlight) {\n    this.addHighlights([ highlight ]);\n  },\n\n  addHighlights: function (highlights) {\n    if (!this.tracksById.highlights) {\n      this.addTrack(Genoverse.Track.HighlightRegion);\n    }\n\n    this.tracksById.highlights.addHighlights(highlights);\n  },\n\n  on: function (events, obj, fn, once) {\n    var browser  = this;\n    var eventMap = {};\n    var i, j, f, fnString, event;\n\n    function makeEventMap(types, handler) {\n      types = types.split(' ');\n\n      for (var j = 0; j < types.length; j++) {\n        eventMap[types[j]] = (eventMap[types[j]] || []).concat(handler);\n      }\n    }\n\n    function makeFnString(func) {\n      return func.toString();\n    }\n\n    function compare(func) {\n      f = func.toString();\n\n      for (j = 0; j < fnString.length; j++) {\n        if (f === fnString[j]) {\n          return true;\n        }\n      }\n    }\n\n    if (typeof events === 'object') {\n      for (i in events) {\n        makeEventMap(i, events[i]);\n      }\n\n      obj = obj || this;\n    } else {\n      if (typeof fn === 'undefined') {\n        fn  = obj;\n        obj = this;\n      }\n\n      makeEventMap(events, fn);\n    }\n\n    var type = obj instanceof Genoverse.Track || obj === 'tracks' ? 'tracks' : 'browser';\n\n    for (i in eventMap) {\n      event = i + (once ? '.once' : '');\n\n      browser.events[type][event] = browser.events[type][event] || [];\n      fnString = $.map(eventMap[i], makeFnString);\n\n      if (!$.grep(browser.events[type][event], compare).length) {\n        browser.events[type][event].push.apply(browser.events[type][event], eventMap[i]);\n      }\n    }\n  },\n\n  once: function (events, obj, fn) {\n    this.on(events, obj, fn, true);\n  },\n\n  destroy: function () {\n    this.onTracks('destructor');\n    (this.superContainer || this.container).empty();\n\n    if (this.zoomInHighlight) {\n      this.zoomInHighlight.add(this.zoomOutHighlight).remove();\n    }\n\n    $(window).add(document).off(this.eventNamespace);\n\n    for (var key in this) {\n      delete this[key];\n    }\n  }\n}, {\n  id      : 0,\n  ready   : $.Deferred(),\n  origin  : (($('script[src]').filter(function () { return /\\/(?:Genoverse|genoverse\\.min.*)\\.js$/.test(this.src); }).attr('src') || '').match(/(.*)js\\/\\w+/) || [])[1] || '',\n  Genomes : {},\n  Plugins : {},\n\n  wrapFunctions: function (obj) {\n    for (var key in obj) {\n      if (typeof obj[key] === 'function' && typeof obj[key].ancestor !== 'function' && !key.match(/^(base|extend|constructor|on|once|prop|loadPlugins|loadGenome)$/)) {\n        Genoverse.functionWrap(key, obj);\n      }\n    }\n  },\n\n  /**\n   * functionWrap - wraps event handlers and adds debugging functionality\n   **/\n  functionWrap: function (key, obj) {\n    obj.functions = obj.functions || {};\n\n    if (obj.functions[key] || /^(before|after)/.test(key)) {\n      return;\n    }\n\n    var func      = key.substring(0, 1).toUpperCase() + key.substring(1);\n    var isBrowser = obj instanceof Genoverse;\n    var mainObj   = isBrowser || obj instanceof Genoverse.Track ? obj : obj.track;\n    var events    = isBrowser ? obj.events.browser : obj.browser.events.tracks;\n    var debug;\n\n    if (mainObj.debug) {\n      debug = [ isBrowser ? 'Genoverse' : mainObj.id || mainObj.name || 'Track' ];\n\n      if (!isBrowser && obj !== mainObj) {\n        debug.push(obj instanceof Genoverse.Track.Controller ? 'Controller' : obj instanceof Genoverse.Track.Model ? 'Model' : 'View');\n      }\n\n      debug = debug.concat(key).join('.');\n    }\n\n    obj.functions[key] = obj[key];\n\n    obj[key] = function () {\n      var args          = [].slice.call(arguments);\n      var currentConfig = (this._currentConfig || (this.track ? this.track._currentConfig : {}) || {}).func;\n      var rtn;\n\n      // Debugging functionality\n      // Enabled by \"debug\": true || 'time' || { functionName: true, ...} option\n      if (mainObj.debug === true) { // if \"debug\": true, simply log function call\n        console.log(debug);\n      } else if (mainObj.debug === 'time' || (typeof mainObj.debug === 'object' && mainObj.debug[key])) { // if debug: 'time' || { functionName: true, ...}, log function time\n        console.time('time: ' + debug);\n      }\n\n      function trigger(when) {\n        var once  = events[when + func + '.once'] || [];\n        var funcs = (events[when + func] || []).concat(once, typeof mainObj[when + func] === 'function' ? mainObj[when + func] : []);\n\n        if (once.length) {\n          delete events[when + func + '.once'];\n        }\n\n        for (var i = 0; i < funcs.length; i++) {\n          funcs[i].apply(this, args);\n        }\n      }\n\n      trigger.call(this, 'before');\n\n      if (currentConfig && currentConfig[key]) {\n         // override to add a value for this.base\n        rtn = function () {\n          this.base = this.functions[key] || function () {};\n          return currentConfig[key].apply(this, arguments);\n        }.apply(this, args);\n      } else {\n        rtn = this.functions[key].apply(this, args);\n      }\n\n      trigger.call(this, 'after');\n\n      if (mainObj.debug === 'time' || (typeof mainObj.debug === 'object' && mainObj.debug[key])) {\n        console.timeEnd('time: ' + debug);\n      }\n\n      return rtn;\n    };\n  },\n\n  getAllTrackTypes: function (namespace, n) {\n    namespace = namespace || Genoverse.Track;\n\n    if (n) {\n      namespace = namespace[n];\n    }\n\n    if (!namespace) {\n      return [];\n    }\n\n    var trackTypes = {};\n\n    $.each(namespace, function (type, func) {\n      if (typeof func === 'function' && !Base[type] && !/^(Controller|Model|View)$/.test(type)) {\n        $.each(Genoverse.getAllTrackTypes(namespace, type), function (subtype, fn) {\n          if (typeof fn === 'function') {\n            trackTypes[type + '.' + subtype] = fn;\n          }\n        });\n\n        trackTypes[type] = func;\n      }\n    });\n\n    return trackTypes;\n  },\n\n  getTrackNamespace: function (track) {\n    var trackTypes = Genoverse.getAllTrackTypes();\n    var namespaces = $.map(trackTypes, function (constructor, name) { return track === constructor || track.prototype instanceof constructor ? name : null }); // Find all namespaces which this track could be\n    var j          = namespaces.length;\n    var i;\n\n    // Find the most specific namespace for this track - the one which isn't a parent of any other namespaces this track could be\n    while (namespaces.length > 1) {\n      for (i = 0; i < namespaces.length - 1; i++) {\n        if (trackTypes[namespaces[i]].prototype instanceof trackTypes[namespaces[i + 1]]) {\n          namespaces.splice(i + 1, 1);\n          break;\n        } else if (trackTypes[namespaces[i + 1]].prototype instanceof trackTypes[namespaces[i]]) {\n          namespaces.splice(i, 1);\n          break;\n        }\n      }\n\n      if (j-- < 0) {\n        break; // Stop infinite loop if something went really wrong\n      }\n    }\n\n    return namespaces[0];\n  }\n});\n\n$(function () {\n  if ($('link[href^=\"' + Genoverse.origin + 'css/genoverse.css\"]').length) {\n    Genoverse.ready.resolve();\n  } else {\n    $('<link href=\"' + Genoverse.origin + 'css/genoverse.css\" rel=\"stylesheet\">').appendTo('body').on('load', Genoverse.ready.resolve);\n  }\n});\n\nwindow.Genoverse = Genoverse;\n\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = Genoverse;\n}\n","Genoverse.Track = Base.extend({\n  height     : 12,        // The height of the gv-track-container div\n  margin     : 2,         // The spacing between this track and the next\n  resizable  : true,      // Is the track resizable - can be true, false or 'auto'. Auto means the track will automatically resize to show all features, but the user cannot resize it themselves.\n  border     : true,      // Does the track have a bottom border\n  unsortable : false,     // Is the track unsortable by the user\n  fixedOrder : false,     // Is the track unsortable by the user or automatically - use for tracks which always need to go at the top/bottom\n  invert     : false,     // If true, features are drawn from the bottom of the track, rather than from the top. This is actually achieved by performing a CSS transform on the gv-image-container div\n  legend     : false,     // Does the track have a legend - can be true, false, or a Genoverse.Track.Legend extension/child class.\n  children   : undefined, // Does the track have any child tracks - can be one or an array of Genoverse.Track extension/child classes.\n  name       : undefined, // The name of the track, which appears in its label\n  autoHeight : undefined, // Does the track automatically resize so that all the features are visible\n  hideEmpty  : undefined, // If the track automatically resizes, should it be hidden when there are no features, or should an empty track still be shown\n\n  constructor: function (config) {\n    if (this.stranded || config.stranded) {\n      this.controller = this.controller || Genoverse.Track.Controller.Stranded;\n      this.model      = this.model      || Genoverse.Track.Model.Stranded;\n    }\n\n    this.models = {};\n    this.views  = {};\n\n    this.setInterface();\n    this.extend(config);\n    this.setDefaults();\n    this.setEvents();\n\n    Genoverse.wrapFunctions(this);\n\n    this.setLengthMap();\n    this.setMVC();\n\n    if (this.browser.scale) {\n      this.controller.setScale();\n      this.controller.makeFirstImage();\n    }\n\n    if (this.children) {\n      this.addChildTracks();\n    }\n\n    if (this.legend) {\n      this.addLegend();\n    }\n  },\n\n  setEvents: $.noop,\n\n  setDefaults: function () {\n    this.config            = this.config         || {};\n    this.configSettings    = this.configSettings || {};\n    this.defaultConfig     = this.defaultConfig  || {};\n    this.controls          = this.controls       || [];\n    this.defaultHeight     = this.height;\n    this.defaultAutoHeight = this.autoHeight;\n    this.autoHeight        = typeof this.autoHeight !== 'undefined' ? this.autoHeight : this.browser.trackAutoHeight;\n    this.hideEmpty         = typeof this.hideEmpty  !== 'undefined' ? this.hideEmpty  : this.browser.hideEmptyTracks;\n    this.height           += this.margin;\n    this.initialHeight     = this.height;\n\n    if (this.resizable === 'auto') {\n      this.autoHeight = true;\n    }\n\n    this.setDefaultConfig();\n  },\n\n  setDefaultConfig: function () {\n    for (var i in this.defaultConfig) {\n      if (typeof this.config[i] === 'undefined') {\n        this.config[i] = this.defaultConfig[i];\n      }\n    }\n\n    this._setCurrentConfig();\n  },\n\n  setInterface: function () {\n    var mvc = [ 'Controller', 'Model', 'View', 'controller', 'model', 'view' ];\n    var prop;\n\n    this._interface = {};\n\n    for (var i = 0; i < 3; i++) {\n      for (prop in Genoverse.Track[mvc[i]].prototype) {\n        if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(prop)) {\n          this._interface[prop] = mvc[i + 3];\n        }\n      }\n    }\n  },\n\n  setMVC: function () {\n    if (this.model && typeof this.model.abort === 'function') { // TODO: don't abort unless model is changed?\n      this.model.abort();\n    }\n\n    this._defaults = this._defaults || {};\n\n    var settings           = $.extend(true, {}, this.constructor.prototype, this.getSettingsForLength()[1]); // model, view, options\n    var controllerSettings = { prop: {}, func: {} };\n    var trackSettings      = {};\n    var i;\n\n    settings.controller = settings.controller || this.controller || Genoverse.Track.Controller;\n\n    for (i in settings) {\n      if (!/^(constructor|init|reset|setDefaults|base|extend|lengthMap)$/.test(i) && isNaN(i)) {\n        if (this._interface[i] === 'controller') {\n          controllerSettings[typeof settings[i] === 'function' ? 'func' : 'prop'][i] = settings[i];\n        }\n        // If we allow trackSettings to overwrite the MVC properties, we will potentially lose of information about instantiated objects that the track needs to perform future switching correctly.\n        else if (!Genoverse.Track.prototype.hasOwnProperty(i) && !/^(controller|models|views|config|disabled)$/.test(i)) {\n          if (typeof this._defaults[i] === 'undefined') {\n            this._defaults[i] = this[i];\n          }\n\n          trackSettings[i] = settings[i];\n        }\n      }\n    }\n\n    for (i in this._defaults) {\n      if (typeof trackSettings[i] === 'undefined') {\n        trackSettings[i] = this._defaults[i];\n      }\n    }\n\n    // If there are configSettings for the track, ensure that any properties in _currentConfig are set for the model/view/controller/track as appropriate.\n    // Functions in _currentConfig are accessed via Genoverse.functionWrap, so nothing needs to be done with them here.\n    if (!$.isEmptyObject(this._currentConfig)) {\n      var changed = {};\n      var type;\n\n      for (i in this._currentConfig.prop) {\n        type = this._interface[i];\n\n        if (/model|view/.test(type)) {\n          if (trackSettings[type][i] !== this._currentConfig.prop[i]) {\n            trackSettings[type][i] = this._currentConfig.prop[i];\n            changed[type] = true;\n          }\n        } else if (type === 'controller') {\n          controllerSettings.prop[i] = this._currentConfig.prop[i];\n        } else {\n          trackSettings[i] = this._currentConfig.prop[i];\n        }\n      }\n\n      for (type in changed) {\n        trackSettings[type].setDefaults(true);\n      }\n    }\n\n    /*\n     * Abandon all hope! If you've tracked a bug to this line of code, be afraid.\n     * It will almost certainly be due to the wonderful way the javascript objects work.\n     *\n     * Consider the following:\n     *\n     * var Obj = function () {};\n     *\n     * Obj.prototype = {\n     *   scalar : 1,\n     *   array  : [ 1, 2, 3 ],\n     *   hash   : { a: 1, b : 2 }\n     * };\n     *\n     * var x = new Obj();\n     *\n     * x.scalar   = 10;\n     * x.array[0] = 10;\n     * x.hash.a   = 10;\n     *\n     * var y = new Obj();\n     *\n     * y is now { scalar: 1, array: [ 10, 2, 3 ], hash: { a: 10, b : 2 } }, since memory locations of objects in prototypes are shared.\n     *\n     * This has been the cause of numerous Genoverse bugs in the past, due to property sharing between different tracks, models, views, and controllers.\n     */\n    this.extend(trackSettings);\n\n    this.model.setChrProps(); // make sure the data stores for the current chromsome are being used\n\n    if (!this.controller || typeof this.controller === 'function') {\n      this.controller = this.newMVC(settings.controller, controllerSettings.func, $.extend(controllerSettings.prop, { model: this.model, view: this.view }));\n    } else {\n      controllerSettings.prop.threshold = controllerSettings.prop.threshold || this.controller.constructor.prototype.threshold;\n      $.extend(this.controller, controllerSettings.prop, { model: this.model, view: this.view });\n    }\n  },\n\n  newMVC: function (object, functions, properties) {\n    return new (object.extend(\n      $.extend(true, {}, object.prototype, functions, {\n        prop: $.proxy(this.prop, this)\n      })\n    ))(\n      $.extend(properties, {\n        browser : this.browser,\n        width   : this.width,\n        track   : this\n      })\n    );\n  },\n\n  setLengthMap: function () {\n    var mv        = [ 'model', 'view' ];\n    var lengthMap = [];\n    var models    = {};\n    var views     = {};\n    var settings, value, deepCopy, prevLengthMap, mvSettings, type, prevType, i, j;\n\n    function compare(a, b) {\n      var checked = { browser: true, width: true, track: true }; // Properties set in newMVC should be ignored, as they will be missing if comparing an object with a prototype\n\n      for (var key in a) {\n        if (checked[key]) {\n          continue;\n        }\n\n        checked[key] = true;\n\n        if (typeof a[key] !== typeof b[key]) {\n          return false;\n        } else if (typeof a[key] === 'function' && typeof b[key] === 'function') {\n          if (a[key].toString() !== b[key].toString()) {\n            return false;\n          }\n        } else if (typeof a[key] === 'object' && !(a[key] instanceof $) && !compare(a[key], b[key])) {\n          return false;\n        } else if (a[key] !== b[key]) {\n          return false;\n        }\n      }\n\n      for (key in b) {\n        if (!checked[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    // Find all scale-map like keys\n    for (var key in this) {\n      if (!isNaN(key)) {\n        key   = parseInt(key, 10);\n        value = this[key];\n\n        lengthMap.push([ key, value === false ? { threshold: key, resizable: 'auto', featureHeight: 0, model: Genoverse.Track.Model, view: Genoverse.Track.View } : $.extend(true, {}, value) ]);\n      }\n    }\n\n    // Force at least one lengthMap entry to exist, containing the base model and view. lengthMap entries above -1 without a model or view will inherit from -1.\n    lengthMap.push([ -1, { view: this.view || Genoverse.Track.View, model: this.model || Genoverse.Track.Model } ]);\n\n    lengthMap = lengthMap.sort(function (a, b) { return b[0] - a[0]; });\n\n    for (i = 0; i < lengthMap.length; i++) {\n      if (lengthMap[i][1].model && lengthMap[i][1].view) {\n        continue;\n      }\n\n      deepCopy = {};\n\n      if (lengthMap[i][0] !== -1) {\n        for (j in lengthMap[i][1]) {\n          if (this._interface[j]) {\n            deepCopy[this._interface[j]] = true;\n          }\n\n          if (deepCopy.model && deepCopy.view) {\n            break;\n          }\n        }\n      }\n\n      // Ensure that every lengthMap entry has a model and view property, copying them from entries with smaller lengths if needed.\n      for (j = i + 1; j < lengthMap.length; j++) {\n        if (!lengthMap[i][1].model && lengthMap[j][1].model) {\n          lengthMap[i][1].model = deepCopy.model ? Genoverse.Track.Model.extend($.extend(true, {}, lengthMap[j][1].model.prototype)) : lengthMap[j][1].model;\n        }\n\n        if (!lengthMap[i][1].view && lengthMap[j][1].view) {\n          lengthMap[i][1].view = deepCopy.view ? Genoverse.Track.View.extend($.extend(true, {}, lengthMap[j][1].view.prototype)) : lengthMap[j][1].view;\n        }\n\n        if (lengthMap[i][1].model && lengthMap[i][1].view) {\n          break;\n        }\n      }\n    }\n\n    // Now every lengthMap entry has a model and a view class, create instances of those classes.\n    for (i = 0; i < lengthMap.length; i++) {\n      prevLengthMap = lengthMap[i - 1] ? lengthMap[i - 1][1] : {};\n      settings      = $.extend(true, {}, this.constructor.prototype, lengthMap[i][1]);\n      mvSettings    = { model: { prop: {}, func: {} }, view: { prop: {}, func: {} } };\n\n      // Work out which settings belong to models or views\n      for (j in settings) {\n        if (j !== 'constructor' && mvSettings[this._interface[j]]) {\n          mvSettings[this._interface[j]][typeof settings[j] === 'function' ? 'func' : 'prop'][j] = settings[j];\n        }\n      }\n\n      // Create models and views, if settings.model or settings.view is a class rather than an instance\n      for (j = 0; j < mv.length; j++) {\n        type = mv[j];\n\n        if (typeof settings[type] === 'function') {\n          prevType = this[mv[j] + 's'];\n\n          // If the previous lengthMap contains an instance of the class in settings, it can be reused.\n          // This allows sharing of models and views between lengthMap entries if they are the same, stopping the need to fetch identical data or draw identical images more than once\n          if (prevLengthMap[type] instanceof settings[type]) {\n            settings[type] = prevLengthMap[type];\n          } else {\n            // Make an instance of the model/view, based on the settings[type] class but with a prototype that contains the functions in mvSettings[type].func\n            settings[type] = this.newMVC(settings[type], mvSettings[type].func, mvSettings[type].prop);\n\n            // If the track already has this.models/this.views and the prototype of the new model/view is the same as the value of this.models/this.views for the same length key, reuse that value.\n            // This can happen if the track has configSettings and the user changes config but that only affects one of the model and view.\n            // Again, reusing the old value stops the need to fetch identical data or draw identical images more than once.\n            if (prevType[lengthMap[i][0]] && compare(prevType[lengthMap[i][0]].constructor.prototype, $.extend({}, settings[type].constructor.prototype, mvSettings[type].prop))) {\n              settings[type] = prevType[lengthMap[i][0]];\n            }\n          }\n        }\n      }\n\n      models[lengthMap[i][0]] = lengthMap[i][1].model = settings.model;\n      views[lengthMap[i][0]]  = lengthMap[i][1].view  = settings.view;\n    }\n\n    this.lengthMap = lengthMap;\n    this.models    = models;\n    this.views     = views;\n  },\n\n  getSettingsForLength: function () {\n    var length = this.browser.length || (this.browser.end - this.browser.start + 1);\n\n    for (var i = 0; i < this.lengthMap.length; i++) {\n      if (length > this.lengthMap[i][0] || length === 1 && this.lengthMap[i][0] === 1) {\n        return this.lengthMap[i];\n      }\n    }\n\n    return [];\n  },\n\n  prop: function (key, value) {\n    var mvc = [ 'controller', 'model', 'view' ];\n    var obj;\n\n    if (this._interface[key]) {\n      obj = this[this._interface[key]];\n    } else {\n      for (var i = 0; i < 3; i++) {\n        if (this[mvc[i]] && typeof this[mvc[i]][key] !== 'undefined') {\n          obj = this[mvc[i]];\n          break;\n        }\n      }\n\n      obj = obj || this;\n    }\n\n\n    if (typeof value !== 'undefined') {\n      if (value === null) {\n        delete obj[key];\n      } else {\n        obj[key] = value;\n      }\n    }\n\n    return obj ? obj[key] : undefined;\n  },\n\n  setHeight: function (height, forceShow) {\n    if (this.disabled || (forceShow !== true && height < this.prop('featureHeight')) || (this.prop('threshold') && !this.prop('thresholdMessage') && this.browser.length > this.prop('threshold'))) {\n      height = 0;\n    } else {\n      height = Math.max(height, this.prop('minLabelHeight'));\n    }\n\n    this.height = height;\n\n    return height;\n  },\n\n  resetHeight: function () {\n    if (this.resizable === true) {\n      var resizer = this.prop('resizer');\n\n      this.autoHeight = !!([ this.defaultAutoHeight, this.browser.trackAutoHeight ].sort(function (a, b) {\n        return (typeof a !== 'undefined' && a !== null ? 0 : 1) - (typeof b !== 'undefined' && b !== null ?  0 : 1);\n      })[0]);\n\n      this.controller.resize(this.autoHeight ? this.prop('fullVisibleHeight') : this.defaultHeight + this.margin + (resizer ? resizer.height() : 0));\n      this.initialHeight = this.height;\n    }\n  },\n\n  setConfig: function (config) {\n    if (typeof config === 'string' && arguments.length === 2) {\n      var _config = {};\n      _config[config] = arguments[1];\n      config = _config;\n    }\n\n    var configChanged = false;\n    var conf;\n\n    for (var type in config) {\n      conf = config[type];\n\n      if (typeof this.configSettings[type] === 'undefined' || typeof this.configSettings[type][conf] === 'undefined' || this.config[type] === conf) {\n        continue;\n      }\n\n      this.config[type] = conf;\n\n      configChanged = true;\n    }\n\n    if (configChanged) {\n      var features = this.prop('featuresById');\n\n      for (var i in features) {\n        delete features[i].menuEl;\n      }\n\n      this._setCurrentConfig();\n\n      if (!this.disabled) {\n        this.reset.apply(this, configChanged ? [ 'config', config ] : []);\n      }\n\n      (this.prop('childTracks') || []).forEach(function (track) {\n        track.setConfig(config);\n      });\n\n      this.browser.saveConfig();\n    }\n  },\n\n  _setCurrentConfig: function () {\n    var settings       = [];\n    var featureFilters = [];\n    var conf;\n\n    this._currentConfig = { prop: {}, func: {} };\n\n    for (i in this.configSettings) {\n      conf = this.getConfig(i);\n\n      if (conf) {\n        settings.push(conf);\n\n        if (conf.featureFilter) {\n          featureFilters.push(conf.featureFilter);\n        }\n      }\n    }\n\n    if (settings.length) {\n      settings = $.extend.apply($, [ true, {} ].concat(settings, { featureFilters: featureFilters }));\n      delete settings.featureFilter;\n    }\n\n    for (i in settings) {\n      this._currentConfig[typeof settings[i] === 'function' && !/^(before|after)/.test(i) ? 'func' : 'prop'][i] = settings[i];\n    }\n  },\n\n  getConfig: function (type) {\n    return this.configSettings[type][this.config[type]];\n  },\n\n  addChildTracks: function () {\n    if (!this.children) {\n      return;\n    }\n\n    var track    = this;\n    var browser  = this.browser;\n    var children = (Array.isArray(this.children) ? this.children : [ this.children ]).filter(function (child) { return child.prototype instanceof Genoverse.Track; });\n    var config   = {\n      parentTrack : this,\n      controls    : 'off',\n      threshold   : this.prop('threshold')\n    };\n\n    setTimeout(function () {\n      track.childTracks = children.map(function (child) {\n        if (child.prototype instanceof Genoverse.Track.Legend || child === Genoverse.Track.Legend) {\n          return track.addLegend(child.extend(config), true);\n        } else {\n          return browser.addTrack(child.extend(config));\n        }\n      });\n\n      track.controller.setLabelHeight();\n    }, 1);\n  },\n\n  addLegend: function (constructor, now) {\n    if (!(constructor || this.legend)) {\n      return;\n    }\n\n    constructor = constructor || (this.legend.prototype instanceof Genoverse.Track.Legend ? this.legend : Genoverse.Track.Legend);\n\n    var track       = this;\n    var legendType  = constructor.prototype.shared === true ? Genoverse.getTrackNamespace(constructor) : constructor.prototype.shared || this.id;\n    var config      = {\n      id   : legendType + 'Legend',\n      name : constructor.prototype.name || (this.name + ' Legend'),\n      type : legendType\n    };\n\n    this.legendType = legendType;\n\n    function makeLegendTrack() {\n      return track.legendTrack = track.browser.legends[config.id] || track.browser.addTrack(constructor.extend(config));\n    }\n\n    if (now === true) {\n      return makeLegendTrack();\n    } else {\n      setTimeout(makeLegendTrack, 1);\n    }\n  },\n\n  changeChr: function () {\n    for (var i in this.models) {\n      this.models[i].setChrProps();\n    }\n  },\n\n  updateName: function (name) {\n    this.controller.setName(name); // For ease of use in external code\n  },\n\n  enable: function () {\n    if (this.disabled === true) {\n      this.disabled = false;\n      this.controller.resize(this.initialHeight);\n      this.reset();\n    }\n  },\n\n  disable: function () {\n    if (!this.disabled) {\n      this.disabled = true;\n      this.controller.resize(0);\n    }\n  },\n\n  reset: function () {\n    this.setLengthMap();\n\n    for (var i in this.models) {\n      if (this.models[i].url !== false) {\n        this.models[i].init(true);\n      }\n    }\n\n    for (i in this.views) {\n      this.views[i].init();\n    }\n\n    this.controller.reset.apply(this.controller, arguments);\n  },\n\n  remove: function () {\n    this.browser.removeTrack(this);\n  },\n\n  destructor: function () {\n    this.controller.destroy();\n\n    var objs = [ this.view, this.model, this.controller, this ];\n\n    for (var obj in objs) {\n      for (var key in obj) {\n        delete obj[key];\n      }\n    }\n  }\n});\n","Genoverse.Track.Controller = Base.extend({\n  scrollBuffer   : 1.2,      // Number of widths, if left or right closer to the edges of viewpoint than the buffer, start making more images\n  threshold      : Infinity, // Length above which the track is not drawn\n  clickTolerance : 0,        // pixels of tolerance added to a click position when finding features for popup menus, when scale < 1\n  messages       : undefined,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function () {\n    this.setDefaults();\n    this.addDomElements();\n    this.addUserEventHandlers();\n\n    this.deferreds = []; // tracks deferreds so they can be stopped if the track is destroyed\n  },\n\n  setDefaults: function () {\n    this.imgRange    = {};\n    this.scrollRange = {};\n    this.messages    = this.messages || {\n      error     : 'ERROR: ',\n      threshold : 'Data for this track is not displayed in regions greater than ',\n      resize    : 'Some features are currently hidden, <a class=\"gv-resize\">resize to see all</a>'\n    };\n  },\n\n  reset: function () {\n    this.abort();\n    this.setDefaults();\n    this.resetImages();\n    this.browser.closeMenus(this);\n\n    if (arguments[0] !== 'resizing') {\n      this.setScale();\n      this.makeFirstImage();\n    }\n  },\n\n  resetImages: function () {\n    this.scrollContainer.empty();\n    this.resetImageRanges();\n  },\n\n  resetImageRanges: function () {\n    this.left        = 0;\n    this.scrollStart = [ 'ss', this.browser.chr, this.browser.start, this.browser.end ].join('-');\n\n    this.imgRange[this.scrollStart]    = this.imgRange[this.scrollStart]    || { left: this.width * -2, right: this.width * 2 };\n    this.scrollRange[this.scrollStart] = this.scrollRange[this.scrollStart] || { start: this.browser.start - this.browser.length, end: this.browser.end + this.browser.length };\n  },\n\n  setName: function (name) {\n    this.track.name = name;\n    this.labelName  = this.labelName || $('<span class=\"gv-name\">').appendTo(this.label);\n\n    this.labelName.attr('title', name).html(name);\n\n    this.minLabelHeight = Math.max(this.labelName.outerHeight(true), this.labelName.outerHeight());\n\n    this.setLabelHeight(true);\n  },\n\n  addDomElements: function () {\n    var name = this.track.name || '';\n\n    this.menus            = $();\n    this.container        = $('<div class=\"gv-track-container\">').appendTo(this.browser.wrapper);\n    this.scrollContainer  = $('<div class=\"gv-scroll-container\">').appendTo(this.container);\n    this.imgContainer     = $('<div class=\"gv-image-container\">').width(this.width).addClass(this.prop('invert') ? 'gv-invert' : '');\n    this.messageContainer = $('<div class=\"gv-message-container\"><div class=\"gv-messages\"></div><i class=\"gv-control gv-collapse fa fa-angle-double-left\"></i><i class=\"gv-control gv-expand fa fa-angle-double-right\"></i></div>').appendTo(this.container);\n    this.label            = $('<li>').appendTo(this.browser.labelContainer).height(this.prop('height')).data('track', this.track);\n    this.context          = $('<canvas>')[0].getContext('2d');\n\n    if (this.prop('border')) {\n      $('<div class=\"gv-track-border\">').appendTo(this.container);\n    }\n\n    if (this.prop('unsortable')) {\n      this.label.addClass('gv-unsortable');\n    } else {\n      $('<div class=\"gv-handle\">').appendTo(this.label);\n    }\n\n    if (this.prop('children')) {\n      this.superContainer = $('<div class=\"gv-track-container gv-track-super-container\">').insertAfter(this.container);\n      this.container.appendTo(this.superContainer);\n    } else if (this.prop('parentTrack')) {\n      this.superContainer = this.prop('parentTrack').prop('superContainer');\n\n      this.container.appendTo(this.superContainer);\n      this.label.remove();\n\n      this.label = this.prop('parentTrack').prop('label');\n    }\n\n    this.setName(name);\n\n    this.container.height(this.prop('disabled') ? 0 : Math.max(this.prop('height'), this.minLabelHeight));\n  },\n\n  addUserEventHandlers: function () {\n    var controller = this;\n    var browser    = this.browser;\n\n    this.container.on('mouseup', '.gv-image-container', function (e) {\n      if ((e.which && e.which !== 1) || (typeof browser.dragStart === 'number' && browser.start !== browser.dragStart) || (browser.dragAction === 'select' && browser.selector.outerWidth(true) > 2)) {\n        return; // Only show menus on left click when not dragging and not selecting\n      }\n\n      controller.click(e);\n    });\n\n    this.messageContainer.children().on('click', function () {\n      var collapsed = controller.messageContainer.children('.gv-messages').is(':visible') ? ' gv-collapsed' : '';\n      var code      = controller.messageContainer.find('.gv-msg').data('code');\n\n      controller.messageContainer.attr('class', 'gv-message-container' + collapsed);\n      controller.checkHeight();\n\n      if (code !== 'error') {\n        document.cookie = [ 'gv_msg', code, controller.prop('id') ].join('_') + '=1; expires=' + (collapsed ? 'Tue, 19 Jan 2038' : 'Thu, 01 Jan 1970') + ' 00:00:00 GMT; path=/';\n      }\n    });\n  },\n\n  click: function (e) {\n    var target = $(e.target);\n    var x      = e.pageX - this.container.parent().offset().left + this.browser.scaledStart;\n    var y      = e.pageY - target.offset().top;\n\n    if (this.imgContainer.hasClass('gv-invert')) {\n      y = target.height() - y;\n    }\n\n    return this.browser.makeMenu(this.getClickedFeatures(x, y, target), e, this.track);\n  },\n\n  getClickedFeatures: function (x, y, target) {\n    var bounds    = { x: x, y: y, w: 1, h: 1 };\n    var scale     = this.scale;\n    var tolerance = scale < 1 ? this.clickTolerance : 0;\n\n    if (tolerance) {\n      bounds.x -= tolerance / 2;\n      bounds.w += tolerance;\n    }\n\n    var features = this[target && target.hasClass('gv-labels') ? 'labelPositions' : 'featurePositions'].search(bounds);\n\n    if (tolerance) {\n      return features.sort(function (a, b) { return Math.abs(a.position[scale].start - x) - Math.abs(b.position[scale].start - x); });\n    } else {\n      return this.model.sortFeatures(features);\n    }\n  },\n\n  // FIXME: messages are now hidden/shown instead of removed/added. This will cause a problem if a new message arrives with the same code as one that already exists.\n  showMessage: function (code, additionalText) {\n    var messages = this.messageContainer.children('.gv-messages');\n\n    if (!messages.children('.gv-' + code).show().length) {\n      var msg = $('<div class=\"gv-msg gv-' + code + '\">' + this.messages[code] + (additionalText || '') + '</div>').data('code', code).prependTo(messages);\n\n      if (code === 'resize') {\n        msg.children('a.gv-resize').on('click', $.proxy(function () {\n          this.resize(this.fullVisibleHeight);\n        }, this));\n      }\n\n      this.messageContainer[document.cookie.match([ 'gv_msg', code, this.prop('id') ].join('_') + '=1') ? 'addClass' : 'removeClass']('gv-collapsed');\n    }\n\n    var height = this.messageContainer.show().outerHeight(true);\n\n    if (height > this.prop('height')) {\n      this.resize(height, undefined, false);\n    }\n\n    messages = null;\n  },\n\n  hideMessage: function (code) {\n    var messages = this.messageContainer.find('.gv-msg');\n\n    if (code) {\n      messages = messages.filter('.gv-' + code).hide();\n\n      if (messages.length && !messages.siblings().filter(function () { return this.style.display !== 'none'; }).length) {\n        this.messageContainer.hide();\n      }\n    } else {\n      messages.hide();\n      this.messageContainer.hide();\n    }\n\n    messages = null;\n  },\n\n  showError: function (error) {\n    this.showMessage('error', error);\n  },\n\n  checkHeight: function () {\n    if (this.browser.length > this.threshold) {\n      if (this.thresholdMessage) {\n        this.showMessage('threshold', this.thresholdMessage);\n        this.fullVisibleHeight = Math.max(this.messageContainer.outerHeight(true), this.minLabelHeight);\n      } else {\n        this.fullVisibleHeight = 0;\n      }\n    } else if (this.thresholdMessage) {\n      this.hideMessage('threshold');\n    }\n\n    if (!this.prop('resizable')) {\n      return;\n    }\n\n    var autoHeight;\n\n    if (this.browser.length > this.threshold) {\n      autoHeight = this.prop('autoHeight');\n      this.prop('autoHeight', true);\n    } else {\n      this.fullVisibleHeight = this.visibleFeatureHeight() || (this.messageContainer.is(':visible') ? this.messageContainer.outerHeight(true) : this.prop('hideEmpty') ? 0 : this.minLabelHeight);\n    }\n\n    this.autoResize();\n\n    if (typeof autoHeight !== 'undefined') {\n      this.prop('autoHeight', autoHeight);\n    }\n  },\n\n  visibleFeatureHeight: function () {\n    var bounds    = { x: this.browser.scaledStart, w: this.width, y: 0, h: 9e99 };\n    var scale     = this.scale;\n    var features  = this.featurePositions.search(bounds);\n    var minHeight = this.prop('hideEmpty') ? 0 : this.minLabelHeight;\n    var height    = Math.max.apply(Math, $.map(features, function (feature) { return feature.position[scale].bottom; }).concat(minHeight));\n\n    if (this.prop('labels') === 'separate') {\n      this.labelTop = height;\n      height += Math.max.apply(Math, $.map(this.labelPositions.search(bounds).concat(this.prop('repeatLabels') ? features : []), function (feature) { return feature.position[scale].label.bottom; }).concat(minHeight));\n    }\n\n    return height;\n  },\n\n  autoResize: function () {\n    var autoHeight = this.prop('autoHeight');\n\n    if (autoHeight || this.prop('labels') === 'separate') {\n      this.resize(autoHeight ? this.fullVisibleHeight : this.prop('height'), this.labelTop, false);\n    } else {\n      this.toggleExpander(false);\n    }\n  },\n\n  resize: function (height, arg, saveConfig) {\n    height = this.track.setHeight(height, arg);\n\n    if (typeof arg === 'number') {\n      this.imgContainers.children('.gv-labels').css('top', arg);\n    }\n\n    this.container.height(height)[height ? 'show' : 'hide']();\n    this.setLabelHeight();\n    this.toggleExpander();\n\n    if (saveConfig !== false) {\n      this.browser.saveConfig();\n    }\n  },\n\n  toggleExpander: function (saveConfig) {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var featureMargin = this.prop('featureMargin');\n    var height        = this.prop('height');\n\n    // Note: fullVisibleHeight - featureMargin.top - featureMargin.bottom is not actually the correct value to test against, but it's the easiest best guess to obtain.\n    // fullVisibleHeight is the maximum bottom position of the track's features in the region, which includes margin at the bottom of each feature and label\n    // Therefore fullVisibleHeight includes this margin for the bottom-most feature.\n    // The correct value (for a track using the default positionFeatures code) is:\n    // fullVisibleHeight - ([there are labels in this region] ? (labels === 'separate' ? 0 : featureMargin.bottom + 1) + 2 : featureMargin.bottom)\n    if (this.fullVisibleHeight - featureMargin.top - featureMargin.bottom > height && !this.prop('disabled')) {\n      this.showMessage('resize');\n\n      var controller = this;\n      var h          = this.messageContainer.outerHeight(true);\n\n      if (h > height) {\n        this.resize(h, undefined, saveConfig);\n      }\n\n      this.expander = (this.expander || $('<div class=\"gv-expander gv-static\">').width(this.width).appendTo(this.container).on('click', function () {\n        controller.resize(controller.fullVisibleHeight);\n      }))[this.prop('height') === 0 ? 'hide' : 'show']();\n    } else if (this.expander) {\n      this.hideMessage('resize');\n      this.expander.hide();\n    }\n  },\n\n  setLabelHeight: function (enforceMinHeight) {\n    var parent = this.prop('parentTrack');\n\n    if (parent) {\n      return parent.controller.setLabelHeight();\n    }\n\n    var tracks = [ this ].concat(this.prop('childTracks') || []);\n    var height = tracks.reduce(function (h, track) { return h + (track.prop('disabled') ? 0 : track.prop('height')); }, 0);\n\n    this.label.height(this.prop('disabled') ? 0 : enforceMinHeight && this.minLabelHeight ? Math.max(height, this.minLabelHeight) : height);\n\n    if (tracks.length > 1) {\n      var top = tracks[0].prop('height');\n\n      tracks.slice(1).forEach(function (track) {\n        var h = track.prop('height');\n\n        track.prop('labelName').css('top', top)[h ? 'removeClass' : 'addClass']('gv-hide');\n        top += h;\n      });\n    }\n  },\n\n  setWidth: function (width) {\n    var track = this.track;\n\n    $.each([ this, track, track.model, track.view ], function () {\n      this.width = width;\n    });\n\n    this.imgContainer.add(this.expander).width(width);\n  },\n\n  setScale: function () {\n    var controller = this;\n\n    this.scale = this.browser.scale;\n\n    this.track.setMVC();\n    this.resetImageRanges();\n\n    var labels = this.prop('labels');\n\n    if (labels && labels !== 'overlay') {\n      this.model.setLabelBuffer(this.browser.labelBuffer);\n    }\n\n    if (this.threshold !== Infinity && this.prop('resizable') !== 'auto') {\n      this.thresholdMessage = this.view.formatLabel(this.threshold);\n    }\n\n    $.each(this.view.setScaleSettings(this.scale), function (k, v) { controller[k] = v; });\n\n    this.hideMessage();\n  },\n\n  move: function (delta) {\n    this.left += delta;\n    this.scrollContainer.css('left', this.left);\n\n    var scrollStart = this.scrollStart;\n\n    if (this.imgRange[scrollStart] && this.imgRange[scrollStart].left + this.left > -this.scrollBuffer * this.width) {\n      var end = this.scrollRange[scrollStart].start - 1;\n\n      this.makeImage({\n        scale : this.scale,\n        chr   : this.browser.chr,\n        start : end - this.browser.length + 1,\n        end   : end,\n        left  : this.imgRange[scrollStart].left,\n        cls   : scrollStart\n      });\n\n      (this.imgRange[scrollStart]    || {}).left  -= this.width;\n      (this.scrollRange[scrollStart] || {}).start -= this.browser.length;\n    }\n\n    if (this.imgRange[scrollStart] && this.imgRange[scrollStart].right + this.left < this.scrollBuffer * this.width) {\n      var start = this.scrollRange[scrollStart].end + 1;\n\n      this.makeImage({\n        scale : this.scale,\n        chr   : this.browser.chr,\n        start : start,\n        end   : start + this.browser.length - 1,\n        left  : this.imgRange[scrollStart].right,\n        cls   : scrollStart\n      });\n\n      (this.imgRange[scrollStart]    || {}).right += this.width;\n      (this.scrollRange[scrollStart] || {}).end   += this.browser.length;\n    }\n  },\n\n  moveTo: function (chr, start, end, delta) {\n    var scrollRange = this.scrollRange[this.scrollStart];\n    var scrollStart = [ 'ss', chr, start, end ].join('-');\n\n    if (this.scrollRange[scrollStart] || start > scrollRange.end || end < scrollRange.start) {\n      this.resetImageRanges();\n      this.makeFirstImage(scrollStart);\n    } else {\n      this.move(typeof delta === 'number' ? delta : (start - this.browser.start) * this.scale);\n      this.checkHeight();\n    }\n  },\n\n  makeImage: function (params) {\n    params.scaledStart   = params.scaledStart   || params.start * params.scale;\n    params.width         = params.width         || this.width;\n    params.height        = params.height        || this.prop('height');\n    params.featureHeight = params.featureHeight || 0;\n    params.labelHeight   = params.labelHeight   || 0;\n\n    var deferred;\n    var controller = this;\n    var tooLarge   = this.browser.length > this.threshold;\n    var div        = this.imgContainer.clone().addClass((params.cls + ' gv-loading').replace('.', '_')).css({ left: params.left, display: params.cls === this.scrollStart ? 'block' : 'none' });\n    var bgImage    = params.background ? $('<img class=\"gv-bg\">').hide().addClass(params.background).data(params).prependTo(div) : false;\n    var image      = $('<img class=\"gv-data\">').hide().data(params).appendTo(div).on('load', function () {\n      $(this).fadeIn('fast').parent().removeClass('gv-loading');\n      $(this).siblings('.gv-bg').show();\n    });\n\n    params.container = div;\n\n    this.imgContainers.push(div[0]);\n    this.scrollContainer.append(this.imgContainers);\n\n    if (!tooLarge && !this.model.checkDataRange(params.chr, params.start, params.end)) {\n      var buffer = this.prop('dataBuffer');\n\n      params.start -= buffer.start;\n      params.end   += buffer.end;\n      deferred      = this.model.getData(params.chr, params.start, params.end);\n    }\n\n    if (!deferred) {\n      deferred = $.Deferred();\n      setTimeout($.proxy(deferred.resolve, this), 1); // This defer makes scrolling A LOT smoother, pushing render call to the end of the exec queue\n    }\n\n    this.deferreds.push(deferred);\n\n    return deferred.done(function () {\n      var features = tooLarge ? [] : controller.model.findFeatures(params.chr, params.start, params.end);\n      controller.render(features, image);\n\n      if (bgImage) {\n        controller.renderBackground(features, bgImage);\n      }\n    }).fail(function (e) {\n      controller.showError(e);\n    });\n  },\n\n  makeFirstImage: function (moveTo) {\n    var deferred = $.Deferred();\n\n    if (this.scrollContainer.children().hide().filter('.' + (moveTo || this.scrollStart)).show().length) {\n      this.scrollContainer.css('left', 0);\n      this.checkHeight();\n\n      return deferred.resolve();\n    }\n\n    var controller = this;\n    var chr        = this.browser.chr;\n    var start      = this.browser.start;\n    var end        = this.browser.end;\n    var length     = this.browser.length;\n    var scale      = this.scale;\n    var cls        = this.scrollStart;\n    var images     = [{ chr: chr, start: start, end: end, scale: scale, cls: cls, left: 0 }];\n    var left       = 0;\n    var width      = this.width;\n\n    if (!this.browser.isStatic) {\n      if (start > 1) {\n        images.push({ chr: chr, start: start - length, end: start - 1, scale: scale, cls: cls, left: -this.width });\n        left   = -this.width;\n        width += this.width;\n      }\n\n      if (end < this.browser.getChromosomeSize(chr)) {\n        images.push({ chr: chr, start: end + 1, end: end + length, scale: scale, cls: cls, left: this.width });\n        width += this.width;\n      }\n    }\n\n    var loading = this.imgContainer.clone().addClass('gv-loading').css({ left: left, width: width }).prependTo(this.scrollContainer.css('left', 0));\n\n    function makeImages() {\n      $.when.apply($, images.map(function (image) {\n        return controller.makeImage(image);\n      })).done(deferred.resolve);\n\n      loading.remove();\n    }\n\n    if (length > this.threshold || this.model.checkDataRange(chr, start, end)) {\n      makeImages();\n    } else {\n      var buffer = this.prop('dataBuffer');\n\n      this.model.getData(chr, start - buffer.start - length, end + buffer.end + length).done(makeImages).fail(function (e) {\n        controller.showError(e);\n      });\n    }\n\n    return deferred;\n  },\n\n  render: function (features, img) {\n    var params         = img.data();\n        features       = this.view.positionFeatures(this.view.scaleFeatures(features, params.scale), params); // positionFeatures alters params.featureHeight, so this must happen before the canvases are created\n    var featureCanvas  = $('<canvas>').attr({ width: params.width, height: params.featureHeight || 1 });\n    var labelCanvas    = this.prop('labels') === 'separate' && params.labelHeight ? featureCanvas.clone().attr('height', params.labelHeight) : featureCanvas;\n    var featureContext = featureCanvas[0].getContext('2d');\n    var labelContext   = labelCanvas[0].getContext('2d');\n\n    featureContext.font = labelContext.font = this.prop('font');\n\n    switch (this.prop('labels')) {\n      case false     : break;\n      case 'overlay' : labelContext.textAlign = 'center'; labelContext.textBaseline = 'middle'; break;\n      default        : labelContext.textAlign = 'left';   labelContext.textBaseline = 'top';    break;\n    }\n\n    this.view.draw(features, featureContext, labelContext, params.scale);\n\n    img.attr('src', featureCanvas[0].toDataURL());\n\n    if (labelContext !== featureContext) {\n      img.clone(true).attr({ 'class': 'gv-labels', src: labelCanvas[0].toDataURL() }).insertAfter(img);\n    }\n\n    this.checkHeight();\n\n    featureCanvas = labelCanvas = img = null;\n  },\n\n  renderBackground: function (features, img, height) {\n    var canvas = $('<canvas>').attr({ width: this.width, height: height || 1 })[0];\n    this.view.drawBackground(features, canvas.getContext('2d'), img.data());\n    img.attr('src', canvas.toDataURL());\n    canvas = img = null;\n  },\n\n  populateMenu: function (feature) {\n    var f    = $.extend(true, {}, feature);\n    var menu = {\n      title    : f.label ? f.label[0] : f.id,\n      Location : f.chr + ':' + f.start + '-' + f.end\n    };\n\n    delete f.chr;\n    delete f.start;\n    delete f.end;\n    delete f.sort;\n\n    for (var i in f) {\n      if (typeof f[i] === 'object' || menu.title === f[i]) {\n        delete f[i];\n      }\n    }\n\n    return $.extend(menu, f);\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.deferreds.length; i++) {\n      if (this.deferreds[i].state() === 'pending') {\n        this.deferreds[i].reject();\n      }\n    }\n\n    this.deferreds = [];\n  },\n\n  destroy: function () {\n    this.abort();\n    this.container.add(this.label).add(this.menus).remove();\n  }\n});\n","Genoverse.Track.Model = Base.extend({\n  dataType         : 'json',\n  allData          : false,\n  dataBuffer       : undefined, // e.g. { start: 0, end: 0 } - basepairs to extend data region for, when getting data from the origin\n  xhrFields        : undefined,\n  url              : undefined,\n  urlParams        : undefined, // hash of URL params\n  data             : undefined, // if defined, will be used instead of fetching data from a source\n  dataRequestLimit : undefined, // if defined, multiple requests will be made by getData if the region size exceeds its value\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  init: function (reset) {\n    this.setDefaults(reset);\n\n    if (reset) {\n      for (var i in this.featuresById) {\n        delete this.featuresById[i].position;\n      }\n    }\n\n    if (!reset || this.data) {\n      delete this.dataRangesByChr;\n      delete this.featuresByChr;\n      this.featuresById = {};\n      this.setChrProps();\n    }\n\n    this.dataLoading = []; // tracks incomplete requests for data\n  },\n\n  setDefaults: function (reset) {\n    this.dataBuffer = this.dataBuffer || { start: 0, end: 0 }; // basepairs to extend data region for, when getting data from the origin\n    this.urlParams  = this.urlParams  || {};                   // hash of URL params\n    this.xhrFields  = this.xhrFields  || {};\n\n    this.dataBufferStart = this.dataBuffer.start; // Remember original dataBuffer.start, since dataBuffer.start is updated based on browser scale, in setLabelBuffer\n\n    if (!this._url) {\n      this._url = this.url; // Remember original url\n    }\n\n    if (reset && !this.url && this._url) {\n      this.url = this._url;\n    }\n  },\n\n  setChrProps: function () {\n    var chr = this.browser.chr;\n\n    this.dataRangesByChr = this.dataRangesByChr || {};\n    this.featuresByChr   = this.featuresByChr   || {};\n\n    this.dataRangesByChr[chr] = this.dataRangesByChr[chr] || new RTree();\n    this.featuresByChr[chr]   = this.featuresByChr[chr]   || new RTree();\n  },\n\n  features   : function (chr) { return this.featuresByChr[chr];   },\n  dataRanges : function (chr) { return this.dataRangesByChr[chr]; },\n\n  parseURL: function (chr, start, end, url) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.getChromosomeSize(chr);\n    }\n\n    return (url || this.url).replace(/__ASSEMBLY__/, this.browser.assembly).replace(/__CHR__/, chr).replace(/__START__/, start).replace(/__END__/, end);\n  },\n\n  setLabelBuffer: function (buffer) {\n    this.dataBuffer.start = Math.max(this.dataBufferStart, buffer);\n  },\n\n  getData: function (chr, start, end, done) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.getChromosomeSize(chr), end);\n\n    var deferred = $.Deferred();\n\n    if (typeof this.data !== 'undefined') {\n      this.receiveData(typeof this.data.sort === 'function' ? this.data.sort(function (a, b) { return a.start - b.start; }) : this.data, chr, start, end);\n      return deferred.resolveWith(this);\n    }\n\n    var model  = this;\n    var bins   = [];\n    var length = end - start + 1;\n\n    if (!this.url) {\n      return deferred.resolveWith(this);\n    }\n\n    if (this.dataRequestLimit && length > this.dataRequestLimit) {\n      var i = Math.ceil(length / this.dataRequestLimit);\n\n      while (i--) {\n        bins.push([ start, i ? start += this.dataRequestLimit - 1 : end ]);\n        start++;\n      }\n    } else {\n      bins.push([ start, end ]);\n    }\n\n    $.when.apply($, $.map(bins, function (bin) {\n      var request = $.ajax({\n        url       : model.parseURL(chr, bin[0], bin[1]),\n        data      : model.urlParams,\n        dataType  : model.dataType,\n        context   : model,\n        xhrFields : model.xhrFields,\n        success   : function (data) { this.receiveData(data, chr, bin[0], bin[1]); },\n        error     : function (xhr, statusText) { this.track.controller.showError(statusText + ' while getting the data, see console for more details', arguments); },\n        complete  : function (xhr) { this.dataLoading = $.grep(this.dataLoading, function (t) { return xhr !== t; }); }\n      });\n\n      request.coords = [ chr, bin[0], bin[1] ]; // store actual chr, start and end on the request, in case they are needed\n\n      if (typeof done === 'function') {\n        request.done(done);\n      }\n\n      model.dataLoading.push(request);\n\n      return request;\n    })).done(function () { deferred.resolveWith(model); });\n\n    return deferred;\n  },\n\n  receiveData: function (data, chr, start, end) {\n    start = Math.max(start, 1);\n    end   = Math.min(end, this.browser.getChromosomeSize(chr));\n\n    this.setDataRange(chr, start, end);\n    this.parseData(data, chr, start, end);\n\n    if (this.allData) {\n      this.url = false;\n    }\n  },\n\n  /**\n  * parseData(data, chr, start, end) - parse raw data from the data source (e.g. online web service)\n  * extract features and insert it into the internal features storage (RTree)\n  *\n  * >> data  - raw data from the data source (e.g. ajax response)\n  * >> chr   - chromosome of the data\n  * >> start - start location of the data\n  * >> end   - end   location of the data\n  * << nothing\n  *\n  * every feature extracted this routine must construct a hash with at least 3 values:\n  *  {\n  *    id    : [unique feature id, string],\n  *    start : [chromosomal start position, integer],\n  *    end   : [chromosomal end position, integer],\n  *    [other optional key/value pairs]\n  *  }\n  *\n  * and call this.insertFeature(feature)\n  */\n  parseData: function (data, chr, start, end) {\n    var feature;\n\n    // Example of parseData function when data is an array of hashes like { start: ..., end: ... }\n    for (var i = 0; i < data.length; i++) {\n      feature = data[i];\n\n      feature.chr  = feature.chr || chr;\n      feature.sort = start + i;\n\n      this.insertFeature(feature);\n    }\n  },\n\n  updateData: function (data) {\n    this.data = data;\n    this.track.reset();\n  },\n\n  setDataRange: function (chr, start, end) {\n    if (this.allData) {\n      start = 1;\n      end   = this.browser.getChromosomeSize(chr);\n    }\n\n    this.dataRanges(chr).insert({ x: start, w: end - start + 1, y: 0, h: 1 }, [ start, end ]);\n  },\n\n  checkDataRange: function (chr, start, end) {\n    start = Math.max(1, start);\n    end   = Math.min(this.browser.getChromosomeSize(chr), end);\n\n    var ranges = this.dataRanges(chr).search({ x: start, w: end - start + 1, y: 0, h: 1 }).sort(function (a, b) { return a[0] - b[0]; });\n\n    if (!ranges.length) {\n      return false;\n    }\n\n    var s = ranges.length === 1 ? ranges[0][0] : 9e99;\n    var e = ranges.length === 1 ? ranges[0][1] : -9e99;\n\n    for (var i = 0; i < ranges.length - 1; i++) {\n      // s0 <= s1 && ((e0 >= e1) || (e0 + 1 >= s1))\n      if (ranges[i][0] <= ranges[i + 1][0] && ((ranges[i][1] >= ranges[i + 1][1]) || (ranges[i][1] + 1 >= ranges[i + 1][0]))) {\n        s = Math.min(s, ranges[i][0]);\n        e = Math.max(e, ranges[i][1], ranges[i + 1][1]);\n      } else {\n        return false;\n      }\n    }\n\n    return start >= s && end <= e;\n  },\n\n  insertFeature: function (feature) {\n    if (!feature.chr) {\n      return;\n    }\n\n    // Make sure we have a unique ID, this method is not efficient, so better supply your own id\n    if (!feature.id) {\n      feature.id = feature.ID || this.hashCode(JSON.stringify($.extend({}, feature, { sort: '' }))); // sort is dependant on the browser's region, so will change on zoom\n    }\n\n    var features = this.features(feature.chr);\n\n    if (features && !this.featuresById[feature.id]) {\n      if (feature.subFeatures) {\n        feature.subFeatures.sort(function (a, b) { return a.start - b.start; });\n\n        for (var i = 0; i < feature.subFeatures.length; i++) {\n          feature.subFeatures[i].start = Math.min(Math.max(feature.subFeatures[i].start, feature.start), feature.end);\n          feature.subFeatures[i].end   = Math.max(Math.min(feature.subFeatures[i].end,   feature.end),   feature.start);\n        }\n\n        // Add \"fake\" sub-features at the start and end of the feature - this will allow joins to be drawn when there are no sub-features in the current region.\n        feature.subFeatures.unshift({ start: feature.start, end: feature.start, fake: true });\n        feature.subFeatures.push   ({ start: feature.end,   end: feature.end,   fake: true });\n      }\n\n      features.insert({ x: feature.start, y: 0, w: feature.end - feature.start + 1, h: 1 }, feature);\n      this.featuresById[feature.id] = feature;\n    }\n  },\n\n  findFeatures: function (chr, start, end) {\n    var features = this.features(chr).search({ x: start - this.dataBuffer.start, y: 0, w: end - start + this.dataBuffer.start + this.dataBuffer.end + 1, h: 1 });\n    var filters  = this.prop('featureFilters') || [];\n\n    for (var i = 0; i < filters.length; i++) {\n      features = $.grep(features, $.proxy(filters[i], this));\n    }\n\n    return this.sortFeatures(features);\n  },\n\n  sortFeatures: function (features) {\n    return features.sort(function (a, b) { return a.sort - b.sort; });\n  },\n\n  abort: function () {\n    for (var i = 0; i < this.dataLoading.length; i++) {\n      this.dataLoading[i].abort();\n    }\n\n    this.dataLoading = [];\n  },\n\n  hashCode: function (string) {\n    var hash = 0;\n    var c;\n\n    if (!string.length) {\n      return hash;\n    }\n\n    for (var i = 0; i < string.length; i++) {\n      c    = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + c;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return '' + hash;\n  }\n});\n","Genoverse.Track.View = Base.extend({\n  fontHeight       : 10,\n  fontFamily       : 'sans-serif',\n  fontWeight       : 'normal',\n  fontColor        : undefined, // label color defaults to this, or feature color, or track.color (below), in that order of precedence\n  color            : '#000000',\n  minScaledWidth   : 0.5,\n  widthCorrection  : 1, // Pixels to add to the end of a feature when scale > 1 - ensures that 1bp features are always at least 1px wide\n  labels           : true,\n  repeatLabels     : false,\n  bump             : false,\n  alwaysReposition : false,\n  depth            : undefined,\n  featureHeight    : undefined, // defaults to track height\n  featureMargin    : undefined, // e.g. { top: 3, right: 1, bottom: 1, left: 0 }\n\n  subFeatureJoinStyle     : false, // Can be 'line', 'peak', 'curve'\n  subFeatureJoinLineWidth : 0.5,\n\n  constructor: function (properties) {\n    $.extend(this, properties);\n    Genoverse.wrapFunctions(this);\n    this.init();\n  },\n\n  // difference between init and constructor: init gets called on reset, if reset is implemented\n  init: function () {\n    this.setDefaults();\n    this.scaleSettings = {};\n  },\n\n  setDefaults: function () {\n    this.featureMargin = this.featureMargin || { top: 3, right: 1, bottom: 1, left: 0 };\n\n    var margin = [ 'top', 'right', 'bottom', 'left' ];\n\n    for (var i = 0; i < margin.length; i++) {\n      if (typeof this.featureMargin[margin[i]] !== 'number') {\n        this.featureMargin[margin[i]] = 0;\n      }\n    }\n\n    this.context       = $('<canvas>')[0].getContext('2d');\n    this.featureHeight = typeof this.featureHeight !== 'undefined' ? this.featureHeight : this.prop('defaultHeight');\n    this.font          = this.fontWeight + ' ' + this.fontHeight + 'px ' + this.fontFamily;\n    this.labelUnits    = [ 'bp', 'kb', 'Mb', 'Gb', 'Tb' ];\n\n    this.context.font = this.font;\n\n    if (this.labels && this.labels !== 'overlay' && (this.depth || this.bump === 'labels')) {\n      this.labels = 'separate';\n    }\n  },\n\n  setScaleSettings: function (scale) {\n    var chr = this.browser.chr;\n\n    if (!this.scaleSettings[chr]) {\n      this.scaleSettings[chr] = {};\n    }\n\n    if (!this.scaleSettings[chr][scale]) {\n      var featurePositions = new RTree();\n\n      this.scaleSettings[chr][scale] = {\n        imgContainers    : $(),\n        featurePositions : featurePositions,\n        labelPositions   : this.labels === 'separate' ? new RTree() : featurePositions\n      };\n    }\n\n    return this.scaleSettings[chr][scale];\n  },\n\n  scaleFeatures: function (features, scale) {\n    var add = Math.max(scale, this.widthCorrection);\n    var feature, j;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (!feature.position) {\n        feature.position = {};\n      }\n\n      if (!feature.position[scale]) {\n        feature.position[scale] = {\n          start  : feature.start * scale,\n          width  : Math.max((feature.end - feature.start) * scale + add, this.minScaledWidth),\n          height : feature.height || this.featureHeight\n        };\n      }\n\n      if (feature.subFeatures) {\n        for (j = 0; j < feature.subFeatures.length; j++) {\n          if (typeof feature.subFeatures[j].height === 'undefined') {\n            feature.subFeatures[j].height = feature.position[scale].height;\n          }\n        }\n\n        this.scaleFeatures(feature.subFeatures, scale);\n      }\n    }\n\n    return features;\n  },\n\n  positionFeatures: function (features, params) {\n    params.margin = this.prop('margin');\n\n    for (var i = 0; i < features.length; i++) {\n      this.positionFeature(features[i], params);\n    }\n\n    params.width         = Math.ceil(params.width);\n    params.height        = Math.ceil(params.height);\n    params.featureHeight = Math.max(Math.ceil(params.featureHeight), this.prop('resizable') ? Math.max(this.prop('height'), this.prop('minLabelHeight')) : 0);\n    params.labelHeight   = Math.ceil(params.labelHeight);\n\n    return features;\n  },\n\n  positionFeature: function (feature, params) {\n    var scale         = params.scale;\n    var scaleSettings = this.scaleSettings[feature.chr][scale];\n\n    if (!scaleSettings) {\n      return;\n    }\n\n    var subFeatures = feature.subFeatures || [];\n    var i;\n\n    feature.position[scale].X = feature.position[scale].start - params.scaledStart; // FIXME: always have to reposition for X, in case a feature appears in 2 images. Pass scaledStart around instead?\n\n    for (i = 0; i < subFeatures.length; i++) {\n      subFeatures[i].position[scale].x = subFeatures[i].position[scale].start - params.scaledStart;\n\n      if (this.subFeatureJoinStyle) {\n        subFeatures[i].position[scale].join   = subFeatures[i].position[scale].join || {};\n        subFeatures[i].position[scale].join.x = subFeatures[i].position[scale].start + subFeatures[i].position[scale].width - params.scaledStart;\n      }\n    }\n\n    if (this.alwaysReposition || !feature.position[scale].positioned) {\n      feature.position[scale].H = feature.position[scale].height + this.featureMargin.bottom;\n      feature.position[scale].W = feature.position[scale].width  + (feature.marginRight || this.featureMargin.right);\n      feature.position[scale].Y = (\n        typeof feature.position[scale].y === 'number' ? feature.position[scale].y :\n        typeof feature.y                 === 'number' ? feature.y * feature.position[scale].H : 0\n      ) + (feature.marginTop || this.featureMargin.top);\n\n      if (feature.label) {\n        if (typeof feature.label === 'string') {\n          feature.label = feature.label.split('\\n');\n        }\n\n        var context = this.context;\n\n        feature.labelHeight = feature.labelHeight || (this.fontHeight + 2) * feature.label.length;\n        feature.labelWidth  = feature.labelWidth  || Math.max.apply(Math, $.map(feature.label, function (l) { return Math.ceil(context.measureText(l).width); })) + 1;\n\n        if (this.labels === true) {\n          feature.position[scale].H += feature.labelHeight;\n          feature.position[scale].W  = Math.max(feature.labelWidth, feature.position[scale].W);\n        } else if (this.labels === 'separate' && !feature.position[scale].label) {\n          feature.position[scale].label = {\n            x: feature.position[scale].start,\n            y: feature.position[scale].Y,\n            w: feature.labelWidth,\n            h: feature.labelHeight\n          };\n        }\n      }\n\n      var bounds = {\n        x: feature.position[scale].start,\n        y: feature.position[scale].Y,\n        w: feature.position[scale].W,\n        h: feature.position[scale].H + (feature.marginTop || this.featureMargin.top)\n      };\n\n      feature.position[scale].bounds = bounds;\n\n      if (this.bump === true) {\n        this.bumpFeature(bounds, feature, scale, scaleSettings.featurePositions);\n      }\n\n      scaleSettings.featurePositions.insert(bounds, feature);\n\n      feature.position[scale].bottom     = feature.position[scale].Y + bounds.h + params.margin;\n      feature.position[scale].positioned = true;\n    }\n\n    var join = this.subFeatureJoinStyle && subFeatures.length ? {\n      height : Math.max.apply(Math, subFeatures.map(function (c) { return c.fake ? 0 : c.position[scale].height; })) / 2 * (feature.strand > 0 ? -1 : 1),\n      y      : feature.position[scale].Y + feature.position[scale].height / 2\n    } : false;\n\n    for (i = 0; i < subFeatures.length; i++) {\n      subFeatures[i].position[scale].y = feature.position[scale].Y + (feature.position[scale].height - subFeatures[i].position[scale].height) / 2;\n\n      if (join && subFeatures[i + 1]) {\n        $.extend(subFeatures[i].position[scale].join, { width: subFeatures[i + 1].position[scale].x - subFeatures[i].position[scale].join.x }, join);\n      }\n    }\n\n    if (this.labels === 'separate' && feature.position[scale].label) {\n      if (this.alwaysReposition || !feature.position[scale].label.positioned) {\n        this.bumpFeature(feature.position[scale].label, feature, scale, scaleSettings.labelPositions);\n\n        feature.position[scale].label.bottom     = feature.position[scale].label.y + feature.position[scale].label.h + params.margin;\n        feature.position[scale].label.positioned = true;\n\n        scaleSettings.labelPositions.insert(feature.position[scale].label, feature);\n      }\n\n      params.labelHeight = Math.max(params.labelHeight, feature.position[scale].label.bottom);\n    }\n\n    params.featureHeight = Math.max(params.featureHeight, feature.position[scale].bottom);\n    params.height        = Math.max(params.height, params.featureHeight + params.labelHeight);\n  },\n\n  // FIXME: should label bumping bounds be distinct from feature bumping bounds when label is smaller than feature?\n  bumpFeature: function (bounds, feature, scale, tree) {\n    var depth         = 0;\n    var scaleSettings = this.scaleSettings[feature.chr][scale];\n    var labels        = tree === scaleSettings.labelPositions && tree !== scaleSettings.featurePositions;\n    var bump, clash;\n\n    do {\n      if (this.depth && ++depth >= this.depth) {\n        if (!labels && $.grep(scaleSettings.featurePositions.search(bounds), function (f) { return f.position[scale].visible !== false; }).length) {\n          feature.position[scale].visible = false;\n        }\n\n        break;\n      }\n\n      bump  = false;\n      clash = tree.search(bounds)[0];\n\n      if (clash && clash.id !== feature.id) {\n        bounds.y = clash.position[scale][labels ? 'label' : 'bounds'].y + clash.position[scale][labels ? 'label' : 'bounds'].h;\n        bump     = true;\n      }\n    } while (bump);\n\n    if (!labels) {\n      feature.position[scale].Y = bounds.y;\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var feature, f;\n\n    for (var i = 0; i < features.length; i++) {\n      feature = features[i];\n\n      if (feature.position[scale].visible !== false) {\n        // TODO: extend with feature.position[scale], rationalize keys\n        f = $.extend({}, feature, {\n          x             : feature.position[scale].X,\n          y             : feature.position[scale].Y,\n          width         : feature.position[scale].width,\n          height        : feature.position[scale].height,\n          labelPosition : feature.position[scale].label\n        });\n\n        this.drawFeature(f, featureContext, labelContext, scale);\n\n        if (f.legend !== feature.legend) {\n          feature.legend      = f.legend;\n          feature.legendColor = f.color;\n        }\n      }\n    }\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    if (feature.color !== false && !feature.color) {\n      this.setFeatureColor(feature);\n    }\n\n    if (feature.subFeatures) {\n      this.drawSubFeatures(feature, featureContext, labelContext, scale);\n    } else {\n      if (feature.x < 0 || feature.x + feature.width > this.width) {\n        this.truncateForDrawing(feature);\n      }\n\n      if (feature.color !== false) {\n        featureContext.fillStyle = feature.color;\n        featureContext.fillRect(feature.x, feature.y, feature.width, feature.height);\n      }\n\n      if (feature.clear === true) {\n        featureContext.clearRect(feature.x, feature.y, feature.width, feature.height);\n      }\n\n      if (feature.borderColor) {\n        featureContext.strokeStyle = feature.borderColor;\n        featureContext.strokeRect(feature.x, Math.floor(feature.y) + 0.5, feature.width, feature.height);\n      }\n    }\n\n    if (this.labels && feature.label) {\n      this.drawLabel(feature, labelContext, scale);\n    }\n\n    if (feature.decorations) {\n      this.decorateFeature(feature, featureContext, scale);\n    }\n  },\n\n  drawSubFeatures: function (feature, featureContext, labelContext, scale) {\n    var subFeatures = $.extend(true, [], feature.subFeatures);\n    var joinColor   = feature.joinColor || feature.color;\n\n    for (var i = 0; i < subFeatures.length; i++) {\n      if (!subFeatures[i].fake) {\n        this.drawFeature($.extend(true, {}, feature, { subFeatures: false, label: false }, subFeatures[i].position[scale], subFeatures[i]), featureContext, labelContext, scale);\n      }\n\n      if (subFeatures[i].position[scale].join && subFeatures[i].position[scale].join.width > 0) {\n        this.drawSubFeatureJoin($.extend({ color: joinColor }, subFeatures[i].position[scale].join), featureContext);\n      }\n    }\n  },\n\n  drawLabel: function (feature, context, scale) {\n    var original = feature.untruncated;\n    var width    = (original || feature).width;\n\n    if (this.labels === 'overlay' && feature.labelWidth >= Math.floor(width)) {\n      return;\n    }\n\n    if (feature.labelPosition) {\n      context.labelPositions = context.labelPositions || new RTree();\n    }\n\n    if (typeof feature.label === 'string') {\n      feature.label = [ feature.label ];\n    }\n\n    var x       = (original || feature).x;\n    var n       = this.repeatLabels ? Math.ceil((width - Math.max(scale, 1) - (this.labels === 'overlay' ? feature.labelWidth : 0)) / this.width) || 1 : 1;\n    var spacing = width / n;\n    var label, start, j, y, currentY, h;\n\n    if (this.repeatLabels && (scale > 1 || this.labels !== 'overlay')) { // Ensure there's always a label in each image\n      spacing = this.browser.length * scale;\n      n = Math.ceil(width / spacing);\n    }\n\n    if (!feature.labelColor) {\n      this.setLabelColor(feature);\n    }\n\n    context.fillStyle = feature.labelColor;\n\n    if (this.labels === 'overlay') {\n      label = [ feature.label.join(' ') ];\n      y     = feature.y + (feature.height + 1) / 2;\n      h     = 0;\n    } else {\n      label = feature.label;\n      y     = feature.labelPosition ? feature.labelPosition.y : feature.y + feature.height + this.featureMargin.bottom;\n      h     = this.fontHeight + 2;\n    }\n\n    var i      = context.textAlign === 'center' ? 0.5 : 0;\n    var offset = feature.labelWidth * i;\n\n    if (n > 1) {\n      i += Math.max(Math.floor(-(feature.labelWidth + x) / spacing), 0);\n    }\n\n    for (; i < n; i++) {\n      start = x + (i * spacing);\n\n      if (start + feature.labelWidth >= 0) {\n        if ((start - offset > this.width) || (i >= 1 && start + feature.labelWidth > feature.position[scale].X + feature.position[scale].width)) {\n          break;\n        }\n\n        for (j = 0; j < label.length; j++) {\n          currentY = y + (j * h);\n\n          if (context.labelPositions && context.labelPositions.search({ x: start, y: currentY, w: feature.labelWidth, h: h }).length) {\n            feature.position[scale].label.visible = false;\n            continue;\n          }\n\n          context.fillText(label[j], start, currentY);\n\n          if (context.labelPositions) {\n            context.labelPositions.insert({ x: start, y: currentY, w: feature.labelWidth, h: h }, label[j]);\n          }\n        }\n      }\n    }\n  },\n\n  setFeatureColor: function (feature) {\n    feature.color = this.color;\n  },\n\n  setLabelColor: function (feature) {\n    feature.labelColor = this.fontColor || feature.color || this.color;\n  },\n\n  // Method to lighten a color by an amount, adapted from http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n  shadeColor: function (color, percent) {\n    var f = parseInt(color.slice(1), 16);\n    var R = f >> 16;\n    var G = f >> 8 & 0x00FF;\n    var B = f & 0x0000FF;\n\n    return '#' + (\n      0x1000000 +\n      (Math.round((255 - R) * percent) + R) * 0x10000 +\n      (Math.round((255 - G) * percent) + G) * 0x100 +\n      (Math.round((255 - B) * percent) + B)\n    ).toString(16).slice(1);\n  },\n\n  // truncate features - make the features start at 1px outside the canvas to ensure no lines are drawn at the borders incorrectly\n  truncateForDrawing: function (feature) {\n    var start = Math.min(Math.max(feature.x, -1), this.width + 1);\n    var width = feature.x - start + feature.width;\n\n    if (width + start > this.width) {\n      width = this.width - start + 1;\n    }\n\n    feature.untruncated = { x: feature.x, width: feature.width };\n    feature.x           = start;\n    feature.width       = Math.max(width, 0);\n  },\n\n  drawSubFeatureJoin: function (join, context) {\n    var coords = this.truncateSubFeatureJoinForDrawing(join);\n\n    if (!coords) {\n      return;\n    }\n\n    var lineWidth = context.lineWidth;\n\n    context.strokeStyle = join.color;\n    context.lineWidth   = this.subFeatureJoinLineWidth;\n\n    context.beginPath();\n    context.moveTo(coords.x1, coords.y1);\n\n    switch (this.subFeatureJoinStyle) {\n      case 'line':\n        context.lineTo(coords.x3, coords.y1);\n        break;\n      case 'peak':\n        context.lineTo(coords.x2, coords.y2);\n        context.lineTo(coords.x3, coords.y3);\n        break;\n      case 'curve':\n        context.quadraticCurveTo(coords.x2, coords.y2, coords.x3, coords.y3);\n        break;\n      default: break;\n    }\n\n    context.stroke();\n\n    context.lineWidth = lineWidth;\n  },\n\n  truncateSubFeatureJoinForDrawing: function (coords) {\n    var y1 = coords.y; // y coord of the ends of the line (half way down the exon box)\n    var y3 = y1;\n\n    if (this.subFeatureJoinStyle === 'line') {\n      this.truncateForDrawing(coords);\n      y1 += 0.5; // Sharpen line\n    }\n\n    var x1 = coords.x;                // x coord of the right edge of the first exon\n    var x3 = coords.x + coords.width; // x coord of the left edge of the second exon\n\n    // Skip if completely outside the image's region\n    if (x3 < 0 || x1 > this.width) {\n      return false;\n    }\n\n    var x2, y2, xMid, yScale;\n\n    // Truncate the coordinates of the line being drawn, so it is inside the image's region\n    if (this.subFeatureJoinStyle === 'peak') {\n      xMid   = (x1 + x3) / 2;\n      x2     = xMid;                     // x coord of the peak of the peak/curve\n      y2     = coords.y + coords.height; // y coord of the peak of the peak/curve (level with the top (forward strand) or bottom (reverse strand) of the exon box)\n      yScale = (y2 - y1) / (xMid - x1);  // Scale factor for recalculating coords if points lie outside the image region\n\n      if (xMid < 0) {\n        y2 = coords.y + (yScale * x3);\n        x2 = 0;\n      } else if (xMid > this.width) {\n        y2 = coords.y + (yScale * (this.width - coords.x));\n        x2 = this.width;\n      }\n\n      if (x1 < 0) {\n        y1 = xMid < 0 ? y2 : coords.y - (yScale * coords.x);\n        x1 = 0;\n      }\n\n      if (x3 > this.width) {\n        y3 = xMid > this.width ? y2 : y2 - (yScale * (this.width - x2));\n        x3 = this.width;\n      }\n    } else if (this.subFeatureJoinStyle === 'curve') {\n      // TODO: try truncating when style is curve\n      x2 = coords.x + coords.width / 2;\n      y2 = coords.y + coords.height;\n    }\n\n    return {\n      x1: x1, y1: y1,\n      x2: x2, y2: y2,\n      x3: x3, y3: y3\n    };\n  },\n\n  formatLabel: function (label) {\n    var power = Math.floor((label.toString().length - 1) / 3);\n    var unit  = this.labelUnits[power];\n\n    label /= Math.pow(10, power * 3);\n\n    return Math.floor(label) + (unit === 'bp' ? '' : '.' + (label.toString().split('.')[1] || '').concat('00').substring(0, 2)) + ' ' + unit;\n  },\n\n  drawBackground  : $.noop,\n  decorateFeature : $.noop // decoration for the features\n});\n","Genoverse.Track.Controller.Static = Genoverse.Track.Controller.extend({\n  addDomElements: function () {\n    this.base();\n\n    this.image = $('<img>').appendTo(this.imgContainer);\n\n    this.container.toggleClass('gv-track-container gv-track-container-static').prepend(this.imgContainer);\n    this.scrollContainer.add(this.messageContainer).remove();\n  },\n\n  reset: function () {\n    delete this.stringified;\n    this.base.apply(this, arguments);\n  },\n\n  setWidth: function (width) {\n    this.base(width);\n    this.image.width = this.width;\n  },\n\n  makeFirstImage: function () {\n    this.base.apply(this, arguments);\n    this.container.css('left', 0);\n    this.imgContainer.show();\n  },\n\n  makeImage: function (params) {\n    if (this.prop('disabled')) {\n      return $.Deferred().resolve();\n    }\n\n    var features = this.view.positionFeatures(this.model.findFeatures(params.chr, params.start, params.end), params);\n\n    if (features) {\n      var string = JSON.stringify(features);\n\n      if (this.stringified !== string) {\n        var height = this.prop('height');\n\n        params.width         = this.width;\n        params.featureHeight = height;\n\n        this.render(features, this.image.data(params));\n        this.imgContainer.children(':last').show();\n        this.resize(height, undefined, false);\n\n        this.stringified = string;\n      }\n    }\n\n    return $.Deferred().resolve();\n  }\n});\n\nGenoverse.Track.Model.Static = Genoverse.Track.Model.extend({\n  url            : false,\n  checkDataRange : function () { return true; }\n});\n\nGenoverse.Track.View.Static = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 1, bottom: 0, left: 1 },\n\n  positionFeature : $.noop,\n  scaleFeatures   : function (features) { return features; },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    for (var i = 0; i < features.length; i++) {\n      this.drawFeature(features[i], featureContext, labelContext, scale);\n    }\n  }\n});\n\nGenoverse.Track.Static = Genoverse.Track.extend({\n  controls   : 'off',\n  resizable  : false,\n  controller : Genoverse.Track.Controller.Static,\n  model      : Genoverse.Track.Model.Static,\n  view       : Genoverse.Track.View.Static\n});\n","Genoverse.Track.Controller.Stranded = Genoverse.Track.Controller.extend({\n  constructor: function (properties) {\n    this.base(properties);\n\n    if (typeof this._makeImage === 'function') {\n      return;\n    }\n\n    var strand        = this.prop('strand');\n    var featureStrand = this.prop('featureStrand');\n\n    if (strand === -1) {\n      this._makeImage = this.track.makeReverseImage ? $.proxy(this.track.makeReverseImage, this) : this.makeImage;\n      this.makeImage  = $.noop;\n    } else {\n      strand = this.prop('strand', 1);\n\n      this._makeImage = this.makeImage;\n      this.makeImage  = this.makeForwardImage;\n\n      var track = this.track;\n\n      setTimeout(function () {\n        track.reverseTrack = track.browser.addTrack(track.constructor.extend({\n          id           : track.id ? track.id + 'Reverse' : undefined,\n          strand       : -1,\n          url          : false,\n          order        : typeof track.orderReverse === 'number' ? track.orderReverse : track.order,\n          forwardTrack : track\n        }));\n\n        $.each(track.controller._deferredReverseTrackImages, function (i, args) { track.controller._makeReverseTrackImage.apply(track.controller, args); });\n        delete track.controller._deferredReverseTrackImages;\n      }, 1);\n    }\n\n    if (!featureStrand) {\n      this.prop('featureStrand', strand);\n    }\n  },\n\n  makeForwardImage: function (params) {\n    this._makeReverseTrackImage(params, this._makeImage(params));\n  },\n\n  _makeReverseTrackImage: function (params, deferred) {\n    var reverseTrack = this.prop('reverseTrack');\n\n    if (!reverseTrack) {\n      this._deferredReverseTrackImages = (this._deferredReverseTrackImages || []).concat([[ params, deferred ]]);\n      return;\n    }\n\n    if (deferred && typeof deferred.done === 'function') {\n      deferred.done(function () {\n        reverseTrack.controller._makeImage(params, deferred);\n      });\n    } else {\n      reverseTrack.controller._makeImage(params, deferred);\n    }\n  },\n\n  destroy: function () {\n    if (this.removing) {\n      return;\n    }\n\n    this.removing = true;\n\n    this.browser.removeTrack(this.prop('forwardTrack') || this.prop('reverseTrack'));\n    this.base();\n  }\n});","Genoverse.Track.Model.Stranded = Genoverse.Track.Model.extend({\n  init: function (reset) {\n    this.base(reset);\n\n    if (!reset) {\n      var otherTrack = this.prop('forwardTrack');\n\n      if (otherTrack) {\n        this.featuresByChr = otherTrack.prop('featuresByChr');\n        this.features      = otherTrack.prop('features');\n        this.featuresById  = otherTrack.prop('featuresById');\n      }\n    }\n  },\n\n  parseURL: function () {\n    if (!this.urlParams.strand) {\n      this.urlParams.strand = this.prop('featureStrand');\n    }\n\n    return this.base.apply(this, arguments);\n  },\n\n  findFeatures: function () {\n    var strand = this.track.featureStrand;\n    return $.grep(this.base.apply(this, arguments), function (feature) { return feature.strand === strand; });\n  }\n});\n","// These are abstract classes, implemented by Graph.Bar and Graph.Line. They will not work properly on their own.\n\nGenoverse.Track.Controller.Graph = Genoverse.Track.Controller.extend({\n  setYRange: function (min, max) {\n    if (this.browser.dragging) {\n      return;\n    }\n\n    if (this.prop('showZeroY')) {\n      this.prop('range', [ Math.min(min, 0), Math.max(max, 0) ]);\n    } else {\n      this.prop('range', [ min, max ]);\n    }\n\n    this.track.reset();\n  },\n\n  yMinMaxFromFeatures: function (features) {\n    var min =  Infinity;\n    var max = -Infinity;\n    var i, j;\n\n    if (this.prop('type') === 'Line') {\n      for (i = 0; i < features.length; i++) {\n        for (j = 0; j < features[i].coords.length; j++) {\n          if (!isNaN(features[i].coords[j][1])) {\n            min = Math.min(min, features[i].coords[j][1]);\n            max = Math.max(max, features[i].coords[j][1]);\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < features.length; i++) {\n        if (!isNaN(features[i].height)) {\n          min = Math.min(min, features[i].height);\n          max = Math.max(max, features[i].height);\n        }\n      }\n    }\n\n    min = min ===  Infinity ? 0 : min;\n    max = max === -Infinity ? 0 : max;\n\n    return { min: min, max: max };\n  },\n\n  afterSetName: function () {\n    this.minLabelHeight = Math.max(this.minLabelHeight, this.prop('fontHeight') * 2 + this.prop('margin') + this.prop('marginTop')); // Minimum height that can contain axis labels for range[0] and range[1]\n  },\n\n  visibleFeatureHeight: function () {\n    if (this.prop('rescaleable') === 'auto') {\n      var yScale = this.track.getYScale();\n      var y      = this.yMinMaxFromFeatures(this.model.findFeatures(this.browser.chr, this.browser.start, this.browser.end));\n\n      return Math.ceil(Math.max(yScale * (y.max - y.min), this.prop('hideEmpty') ? 0 : this.minLabelHeight));\n    }\n\n    return this.prop('height');\n  },\n\n  resize: function () {\n    var prevHeight = this.prop('height');\n    var rtn        = this.base.apply(this, arguments);\n    var height     = this.prop('height');\n\n    if (prevHeight !== height) {\n      if (this.prop('rescaleable') === true) {\n        var prevRange     = this.prop('range');\n        var maxDP         = Math.max.apply(null, prevRange.map(function (r) { return (r.toString().split('.')[1] || '').length; }));\n        var prevRangeSize = prevRange[1] - prevRange[0];\n        var rangeChange   = Math.ceil((prevRangeSize * (height / prevHeight) - prevRangeSize) / 2);\n\n        this.setYRange(\n          parseFloat((prevRange[0] - rangeChange).toFixed(maxDP), 10),\n          parseFloat((prevRange[1] + rangeChange).toFixed(maxDP), 10)\n        );\n      } else {\n        this.track.reset();\n      }\n    }\n\n    (this.prop('expander') || $()).hide();\n    (this.prop('resizer')  || $()).removeClass('gv-resizer-expander');\n\n    return rtn;\n  },\n\n  autoResize: function () {\n    if (this.prop('rescaleable') === 'auto') {\n      var visibleFeatures = this.model.findFeatures(this.browser.chr, this.browser.start, this.browser.end);\n\n      if (visibleFeatures.length) {\n        var range = this.prop('range');\n        var y     = this.yMinMaxFromFeatures(visibleFeatures);\n\n        if (y.min || y.max) {\n          var maxDP = Math.max.apply(null, range.map(function (r) { return (r.toString().split('.')[1] || '').length; }));\n          var round = Math.pow(10, maxDP);\n          var minY  = parseFloat((Math.floor(y.min * round) / round).toFixed(maxDP), 10);\n          var maxY  = parseFloat((Math.ceil (y.max * round) / round).toFixed(maxDP), 10);\n\n          if (this.prop('showZeroY')) {\n            minY = Math.min(minY, 0);\n            maxY = Math.max(maxY, 0);\n          }\n\n          if (minY === maxY) {\n            maxY++;\n          }\n\n          if (minY !== range[0] || maxY !== range[1]) {\n            return this.setYRange(minY, maxY);\n          }\n        }\n      }\n    } else {\n      return this.base.apply(this, arguments);\n    }\n  },\n\n  makeFirstImage: function () {\n    var controller = this;\n\n    return this.base.apply(this, arguments).done(function () {\n      controller.prop('yAxisPlaceholder').hide();\n      controller.prop('offsetContainer')\n        .prepend(controller.prop('guidelinesCanvas'))\n        .before(controller.prop('yAxisCanvas').removeClass('gv-loading'));\n    });\n  },\n\n  typeWrapper        : function (func, args) { return (Genoverse.Track.Controller.Graph[this.prop('type')][func] || Genoverse.Track.Controller.prototype[func]).apply(this, args); },\n  click              : function () { return this.typeWrapper('click',              arguments); },\n  getClickedFeatures : function () { return this.typeWrapper('getClickedFeatures', arguments); },\n  populateMenu       : function () { return this.typeWrapper('populateMenu',       arguments); }\n});\n\nGenoverse.Track.Model.Graph = Genoverse.Track.Model.extend({\n  dataBuffer     : { start: 1, end: 1 },\n  setLabelBuffer : $.noop,\n  sortFeatures   : function (features) { return features.sort(function (a, b) { return a.start - b.start; }); }\n});\n\nGenoverse.Track.View.Graph = Genoverse.Track.View.extend({\n  featureMargin: {},\n\n  featureDataSets: function (features) {\n    var datasets = this.prop('datasets').concat({ name: '_default' });\n    var setNames = {};\n    var sets     = {};\n\n    for (var i = 0; i < datasets.length; i++) {\n      setNames[datasets[i].name] = true;\n    }\n\n    for (i = 0; i < features.length; i++) {\n      set = setNames[features[i].dataset] ? features[i].dataset : '_default';\n\n      sets[set] = sets[set] || [];\n      sets[set].push(features[i]);\n    }\n\n    return { list: datasets, features: sets };\n  }\n});\n\nGenoverse.Track.Graph = Genoverse.Track.extend({\n  controller   : Genoverse.Track.Controller.Graph,\n  margin       : 10,        // Same as fontHeight - needed to allow axis labels for range[0] and range[1] to be drawn without being cut off by the edge of the image\n  invert       : true,\n  yAxisLabels  : undefined, // An array of numerical labels for the y-axis. Should not be configured manually if the track is resizable.\n  yRange       : undefined, // An array of [ minY, maxY ] for the graph\n  showZeroY    : true,      // If true, 0 will always be included in auto-generated yRanges. If yRange is defined in configuration, this setting will be ignored.\n  globalAlpha  : 1,\n  axesSettings : { axisColor: 'black', axisLabelColor: 'black', scaleLineColor: '#E5E5E5' },\n  datasets     : [],\n  legend       : true,\n  labels       : false,\n\n  /*\n   * resizable and rescaleableY combine to define what happens when the track \"resizes\", as follows:\n   * resizable | rescaleableY | Effect\n   * --------- | ------------ | ------\n   * true      | true         | Users can change the track height, and doing so changes the y-axis range (y-axis range will change proportionally to track height change)\n   * true      | 'auto'       | Users can change the track height, and doing so does not change the y-axis range. However, the y-axis range will automatically change so that no peaks are cut off.\n   * true      | false        | Users can change the track height, and doing so does not change the y-axis range (peak heights will change proportionally to track height change)\n   * false     | true         | Like true/true\n   * false     | 'auto'       | Track height cannot be changed, but the y-axis range will automatically change so that no peaks are cut off\n   * false     | false        | Neither track height nor y-axis range can be changed, either by users or automatically\n   * 'auto'    | true         | Like false/'auto'\n   * 'auto'    | 'auto'       | Like false/'auto'\n   * 'auto'    | false        | Like false/'auto' (it is not possible to change a track's height such that no peaks are cut off without being able to change the y-axis range)\n   */\n  resizable    : true,\n  rescaleableY : 'auto',\n\n  setDefaults: function () {\n    this.range       = this.yRange || [ 0, this.height ];\n    this.rescaleable = this.rescaleableY;\n\n    if ($.isPlainObject(this.margin)) {\n      if (this.invert) {\n        this.marginTop = this.margin.bottom;\n        this.margin    = this.margin.top;\n      } else {\n        this.marginTop = this.margin.top;\n        this.margin    = this.margin.bottom;\n      }\n    }\n\n    this.marginTop = typeof this.marginTop === 'number' ? this.marginTop : this.margin;\n\n    if (this.resizable === false) {\n      this.resizable = this.rescaleable;\n    } else if (this.resizable === 'auto') {\n      this.rescaleable = 'auto';\n    }\n\n    this.base.apply(this, arguments);\n\n    if (this.legend && !this.datasets.length) {\n      this.legend = false;\n    }\n\n    this.height        += this.marginTop;\n    this.initialHeight += this.marginTop;\n  },\n\n  setHeight: function (height) {\n    return this.base(height, true); // always force show\n  },\n\n  setMVC: function () {\n    var hadController = this.controller instanceof Genoverse.Track.Controller;\n    var rtn           = this.base.apply(this, arguments);\n\n    if (!hadController) {\n      var scrollContainer = this.prop('scrollContainer');\n\n      this.yAxisPlaceholder = $('<div class=\"gv-image-container gv-loading\">');\n      this.yAxisCanvas      = $('<canvas class=\"gv-image-container gv-barchart-axis\">' ).attr('width', this.width);\n      this.guidelinesCanvas = $('<canvas class=\"gv-image-container gv-barchart-guide\">').attr('width', this.width);\n\n      if (this.disabled) {\n        this.yAxisCanvas.add(this.guidelinesCanvas).attr('height', 0);\n      }\n\n      this.offsetContainer = $('<div class=\"gv-scroll-container-offset\">')\n        .width(this.width)\n        .insertAfter(scrollContainer)\n        .append(scrollContainer)\n        .before(this.yAxisPlaceholder);\n\n      this.drawAxes();\n    }\n\n    return rtn;\n  },\n\n  afterSetMVC: function () {\n    // Never show the control to switch between auto-height and manual resizing, since its behaviour is not the same here as for standard tracks, due to interactions between resizable and rescaleableY.\n    (this.prop('heightToggler') || $()).addClass('gv-hidden');\n    (this.prop('resizer')       || $()).off('click');\n  },\n\n  reset: function () {\n    this.drawAxes();\n    return this.base.apply(this, arguments);\n  },\n\n  enable: function () {\n    var wasDisabled = this.disabled;\n    var rtn         = this.base.apply(this, arguments);\n\n    if (wasDisabled) {\n      this.drawAxes();\n    }\n\n    return rtn;\n  },\n\n  getYScale: function () {\n    var range  = this.prop('range');\n    var yScale = (this.prop('height') - this.prop('margin') - this.prop('marginTop')) / (range[1] - range[0]);\n\n    return yScale;\n  },\n\n  drawAxes: function () {\n    if (this.prop('disabled')) {\n      return;\n    }\n\n    var width        = this.width;\n    var height       = this.prop('height');\n    var invert       = this.prop('invert');\n    var margin       = this.prop('margin');\n    var marginTop    = this.prop('marginTop');\n    var fontHeight   = this.prop('fontHeight');\n    var range        = this.prop('range');\n    var axesSettings = this.prop('axesSettings');\n    var yAxisLabels  = this.prop('yAxisLabels');\n    var yScale       = this.getYScale();\n    var axisContext  = this.prop('yAxisCanvas'     ).attr('height', height)[0].getContext('2d');\n    var linesContext = this.prop('guidelinesCanvas').attr('height', height)[0].getContext('2d');\n    var y, n, i, interval, maxDP;\n\n    if (!yAxisLabels) {\n      n           = Math.floor((height - margin - marginTop) / (fontHeight * 2)); // number of labels that can be shown\n      interval    = (range[1] - range[0]) / n;                                    // label incrementor\n      yAxisLabels = [];\n\n      if (interval !== Math.round(interval)) { // floats\n        // Strenuously ensure that interval does not contain a floating point error.\n        // Assumes that values in range do not contain floating point errors.\n        maxDP = Math.max.apply(null, range.map(function (r) { return (r.toString().split('.')[1] || '').length; })) + 1;\n      }\n\n      for (i = 0; i <= n; i++) {\n        yAxisLabels.push((range[0] + interval * i)[maxDP ? 'toFixed' : 'toString'](maxDP));\n      }\n    }\n\n    var axisWidth = Math.max.apply(null, yAxisLabels.map(function (label) { return axisContext.measureText(label).width; })) + 10;\n\n    this.prop('offsetContainer').css('marginLeft',  axisWidth).width(width - axisWidth);\n    this.prop('scrollContainer').css('marginLeft', -axisWidth);\n\n    this.prop('yAxisPlaceholder').width(axisWidth).show();\n\n    axisContext.fillStyle = axesSettings.axisColor;\n    axisContext.fillRect(axisWidth - 1, invert ? margin : marginTop, 1, height - margin - marginTop); // Vertical line\n\n    linesContext.fillStyle  = axesSettings.scaleLineColor;\n    axisContext.fillStyle    = axesSettings.axisLabelColor;\n    axisContext.textBaseline = 'middle';\n    axisContext.textAlign    = 'right';\n\n    for (i = 0; i < yAxisLabels.length; i++) {\n      y = marginTop + (parseFloat(yAxisLabels[i], 10) - range[0]) * yScale;\n      y = invert ? height - y : y;\n\n      linesContext.fillRect(0, y, width, 1);                  // Horizontal line, indicating the y-position of a numerical value\n      axisContext.fillRect(axisWidth - 4, y, 4, 1);           // Horizontal line, indicating the y-position of a numerical value\n      axisContext.fillText(yAxisLabels[i], axisWidth - 6, y); // The numerical value for the horizontal line\n    }\n\n    // Draw a horizontal line at y = 0\n    y = (-range[0] * yScale) + marginTop;\n    linesContext.fillStyle = axesSettings.axisColor;\n    linesContext.fillRect(0, invert ? height - y : y, width, 1);\n  }\n});\n","Genoverse.Track.Controller.Graph.Line = {\n  click: function () {\n    if (this.prop('showPopups')) {\n      this.prop('menus').hide(); // Hide first, because closeMenus causes fadeOut to happen, which doens't look great in this scenario\n      this.browser.closeMenus(this);\n      return Genoverse.Track.Controller.prototype.click.apply(this, arguments);\n    }\n  },\n\n  getClickedFeatures: function (x) {\n    var bounds    = { x: x, y: 0, w: 1, h: 9e99 };\n    var tolerance = this.scale > 1 ? 0 : 1 / this.scale;\n    var xMid      = bounds.x / this.scale;\n    var xRange    = tolerance ? [ Math.floor(xMid - tolerance), Math.ceil(xMid + tolerance) ] : [ Math.floor(xMid), Math.floor(xMid) ];\n    var features  = {};\n\n    this.featurePositions.search(bounds).forEach(function (f) {\n      if (!features[f.dataset]) {\n        features[f.dataset] = f;\n      }\n    });\n\n    return [\n      this.model.sortFeatures(Object.keys(features).map(function (k) {\n        return $.extend(true, {}, features[k], { clickedCoords: features[k].coords.filter(function (c) { return c[0] >= xRange[0] && c[0] <= xRange[1]; }) });\n      }))\n    ];\n  },\n\n  populateMenu: function (features) {\n    if (!features.length || !features[0].clickedCoords.length) {\n      return [];\n    }\n\n    var start = features[0].clickedCoords[0][0];\n    var end   = features[0].clickedCoords[features[0].clickedCoords.length - 1][0];\n    var avg   = start !== end;\n    var menu  = { title: features[0].chr + ':' + (start === end ? start : start + '-' + end) };\n    var m, values, i;\n\n    function getValues(coords) {\n      var values = coords.map(function (c) { return c[1]; }).sort(function (a, b) { return a - b; });\n\n      return {\n        avg: values.reduce(function (n, v) { return n + v; }, 0) / values.length,\n        min: values[0],\n        max: values[values.length - 1]\n      };\n    }\n\n    if (avg) {\n      if (features.length === 1) {\n        values = getValues(features[0].clickedCoords);\n\n        menu['Average value'] = values.avg;\n        menu['Min value']     = values.min;\n        menu['Max value']     = values.max;\n      } else {\n        menu = [ menu ];\n\n        for (i = 0; i < features.length; i++) {\n          values    = getValues(features[i].clickedCoords);\n          m         = { title: features[i].dataset };\n          m.Average = values.avg;\n          m.Min     = values.min;\n          m.Max     = values.max;\n\n          menu.push(m);\n        }\n      }\n    } else {\n      if (features.length === 1) {\n        menu.Value = features[0].clickedCoords[0][1];\n      } else {\n        for (i = 0; i < features.length; i++) {\n          menu[features[i].dataset] = features[i].clickedCoords[0][1];\n        }\n      }\n    }\n\n    return menu;\n  }\n};\n\nGenoverse.Track.Model.Graph.Line = Genoverse.Track.Model.Graph.extend({\n  parseData: function (data, chr, start, end) {\n    var features = [];\n    var feature, x;\n\n    function getX(f) {\n      return typeof f.x !== 'undefined' ? f.x : f.start + (f.start === f.end ? 0 : (f.end - f.start + 1) / 2);\n    }\n\n    data.sort(function (a, b) { return (a.start - b.start) || (a.x - b.x); });\n\n    for (i = 0; i < data.length; i++) {\n      if (typeof data[i].y !== 'undefined' && !data[i].coords) {\n        x = getX(data[i]);\n\n        if (feature && feature.coords[feature.coords.length - 1][0] === x - 1) {\n          feature.coords.push([ x, data[i].y ]);\n          feature.end = x;\n        } else {\n          if (feature) {\n            features.push(feature);\n          }\n\n          feature = $.extend({ coords: [[ x, data[i].y ]], start: x, end: x }, data[i]);\n        }\n      } else {\n        if (feature) {\n          features.push(feature);\n          feature = undefined;\n        }\n\n        features.push(data[i]);\n      }\n    }\n\n    if (feature) {\n      features.push(feature);\n    }\n\n    return this.base(features, chr, start, end);\n  },\n\n  insertFeature: function (feature) {\n    var datasets = this.prop('datasets');\n\n    if (feature.coords) {\n      feature.coords = feature.coords.map(function (c, i) { return c.length > 1 ? c : [ feature.start + i, c ]; }).filter(function (c) { return c[0] >= feature.start && c[0] <= feature.end; });\n    } else if (feature.y) {\n      feature.coords = [[ feature.start + (feature.start === feature.end ? 0 : (feature.end - feature.start + 1) / 2), feature.y ]];\n    } else {\n      feature.coords = [];\n    }\n\n    if (datasets.length) {\n      feature.legend = feature.dataset;\n      feature.color  = (datasets.filter(function (s) { return s.name === feature.dataset; })[0] || { color: this.color }).color;\n    }\n\n    feature.id = feature.id || [ feature.chr, feature.start, feature.end, feature.dataset || '' ].join(':');\n\n    return this.base.apply(this, arguments);\n  }\n});\n\nGenoverse.Track.View.Graph.Line = Genoverse.Track.View.Graph.extend({\n  featureHeight: 1,\n\n  positionFeatures: function (features, params) {\n    var scale  = params.scale;\n    var yScale = this.track.getYScale();\n    var margin = this.prop('marginTop');\n    var zeroY  = margin - this.prop('range')[0] * yScale;\n    var add    = (scale > 1 ? scale / 2 : 0) - params.scaledStart;\n\n    function setCoords(c) {\n      return [ c[0] * scale + add, c[1] * yScale + zeroY ];\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      features[i].coordPositions = features[i].coords.map(setCoords);\n    }\n\n    params.featureHeight = this.prop('height');\n\n    return this.base(features, params);\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    if (!features.length) {\n      return;\n    }\n\n    var datasets     = this.featureDataSets(features);\n    var height       = this.prop('height');\n    var marginTop    = this.prop('marginTop');\n    var marginBottom = this.prop('margin');\n    var baseline     = Math.min(Math.max(marginTop, marginTop - this.prop('range')[0] * this.track.getYScale()), height - marginTop);\n    var binSize      = scale < 1 ? Math.floor(1 / scale) : 0;\n    var set, conf, feature, coords, binnedFeatures, lastBinSize, j, k, binStart, bin, l;\n\n    var defaults = {\n      color       : this.color,\n      fill        : this.prop('fill'),\n      lineWidth   : this.prop('lineWidth'),\n      globalAlpha : this.prop('globalAlpha')\n    };\n\n    for (var i = 0; i < datasets.list.length; i++) {\n      set  = datasets.list[i].name;\n      conf = $.extend({}, defaults, datasets.list[i]);\n\n      for (j = 0; j < (datasets.features[set] || []).length; j++) {\n        feature = datasets.features[set][j];\n        coords  = feature.coordPositions;\n\n        if (coords.length) {\n          if (binSize) {\n            binnedFeatures = [];\n            k              = 0;\n\n            while (k < coords.length) {\n              binStart = feature.coords[k][0];\n              bin      = [];\n\n              while (coords[k] && feature.coords[k][0] - binStart < binSize) {\n                bin.push(coords[k++]);\n              }\n\n              l      = bin.length;\n              bin    = bin.reduce(function (arr, b) { arr[0] += b[0]; arr[1] += b[1]; return arr; }, [ 0, 0 ]);\n              bin[0] = Math.round(bin[0] / l);\n\n              if (binnedFeatures.length && bin[0] === binnedFeatures[binnedFeatures.length - 1][0]) {\n                binnedFeatures[binnedFeatures.length - 1][1] = (binnedFeatures[binnedFeatures.length - 1][1] * lastBinSize + bin[1]) / (lastBinSize + l);\n              } else {\n                binnedFeatures.push([ bin[0], bin[1] / l ]);\n              }\n\n              lastBinSize = l;\n            }\n\n            coords = binnedFeatures;\n          }\n\n          featureContext.fillStyle = featureContext.strokeStyle = conf.color;\n          featureContext.lineWidth = conf.lineWidth;\n\n          if (conf.fill) {\n            featureContext.globalAlpha = conf.globalAlpha;\n          }\n\n          featureContext.beginPath();\n\n          if (conf.fill) {\n            featureContext.moveTo(coords[0][0], baseline);\n            featureContext.lineTo.apply(featureContext, coords[0]);\n          } else {\n            featureContext.moveTo.apply(featureContext, coords[0]);\n          }\n\n          for (k = 1; k < coords.length; k++) {\n            featureContext.lineTo.apply(featureContext, coords[k]);\n          }\n\n          featureContext.stroke();\n\n          if (conf.fill) {\n            featureContext.lineTo(coords[coords.length - 1][0], baseline);\n            featureContext.closePath();\n            featureContext.fill();\n            featureContext.globalAlpha = 1;\n          }\n        }\n      }\n    }\n\n    // Don't allow features to be drawn in the margins\n    featureContext.clearRect(0, 0,                     this.width, marginTop - 1);\n    featureContext.clearRect(0, height - marginBottom, this.width, marginBottom);\n  }\n});\n\nGenoverse.Track.Graph.Line = Genoverse.Track.Graph.extend({\n  type       : 'Line',\n  showPopups : true, // If true, clicking on the track will show popups. If false, popups will not appear.\n  fill       : false,\n  lineWidth  : 1,\n  model      : Genoverse.Track.Model.Graph.Line,\n  view       : Genoverse.Track.View.Graph.Line\n});","Genoverse.Track.Controller.Graph.Bar = {\n  getClickedFeatures: function (x, y) {\n    var yZero     = this.prop('marginTop') - (this.prop('range')[0] * this.track.getYScale());\n    var scale     = this.scale;\n    var tolerance = scale > 1 ? 0 : 1;\n\n    // Bars with negative values are stored in featurePositions with h < 0.\n    // While this works to a certain degree (fillRect allows negative height, drawing upwards from y), it makes them hard to search for in the RTree - to find such a feature you need to search with y = -h and h = y - h + 1\n    // It is therefore easier to search featuresByChr (i.e. the genomic positions) for a feature overlapping the x of the click, and then filter those results for y position manually.\n    var features = this.prop('featuresByChr')[this.browser.chr].search({\n      x: (x - (tolerance / 2)) / scale,\n      y: 0,\n      w: (1 + tolerance) / scale,\n      h: 1\n    });\n\n    if (features.length) {\n      if (\n        (y <  yZero && features.filter(function (f) { return f.position[scale].bounds.y + f.position[scale].bounds.h <= y && f.position[scale].bounds.y >= y; }).length === 0) ||\n        (y >= yZero && this.featurePositions.search({ x: x, y: y, w: 1, h: 1 }).length === 0)\n      ) {\n        features = [];\n      }\n    }\n\n    return features.length ? [ this.model.sortFeatures(features) ] : [];\n  },\n\n  populateMenu: function (features) {\n    if (!features.length) {\n      return [];\n    }\n\n    var start = features[0].start;\n    var end   = features[features.length - 1].end;\n    var avg   = features[0].start !== features[features.length - 1].start;\n    var menu  = { title: features[0].chr + ':' + (start === end ? start : start + '-' + end) };\n    var values, i;\n\n    function getValues(_features) {\n      var values = _features.map(function (f) { return f.height; }).sort(function (a, b) { return a - b; });\n\n      return {\n        avg: values.reduce(function (n, v) { return n + v; }, 0) / values.length,\n        min: values[0],\n        max: values[values.length - 1]\n      };\n    }\n\n    if (avg) {\n      if (features.length === 1) {\n        values = getValues(features);\n\n        menu['Average value'] = values.avg;\n        menu['Min value']     = values.min;\n        menu['Max value']     = values.max;\n      } else {\n        menu = [ menu ];\n\n        var datasets = this.prop('datasets');\n        var featuresByDataset;\n\n        if (datasets.length) {\n          featuresByDataset = datasets.reduce(function (hash, d) { hash[d.name] = []; return hash; }, {});\n\n          for (i = 0; i < features.length; i++) {\n            featuresByDataset[features[i].dataset].push(features[i]);\n          }\n        } else {\n          datasets          = [{ name: '' }];\n          featuresByDataset = { '': features };\n        }\n\n        for (i = 0; i < datasets.length; i++) {\n          values = getValues(featuresByDataset[datasets[i].name]);\n\n          menu.push($.extend({\n            Average : values.avg,\n            Min     : values.min,\n            Max     : values.max\n          }, datasets[i].name ? { title: datasets[i].name } : {}));\n        }\n      }\n    } else {\n      if (features.length === 1) {\n        menu.Value = features[0].height;\n      } else {\n        for (i = 0; i < features.length; i++) {\n          menu[features[i].dataset] = features[i].height;\n        }\n      }\n    }\n\n    return menu;\n  }\n};\n\nGenoverse.Track.Model.Graph.Bar = Genoverse.Track.Model.Graph.extend({\n  insertFeature: function (feature) {\n    var datasets = this.prop('datasets');\n\n    if (datasets.length) {\n      feature.legend = feature.dataset;\n      feature.color  = (datasets.filter(function (s) { return s.name === feature.dataset; })[0] || { color: this.color }).color;\n    }\n\n    feature.id = feature.id || [ feature.chr, feature.start, feature.end, feature.dataset || '' ].join(':');\n\n    return this.base.apply(this, arguments);\n  }\n});\n\nGenoverse.Track.View.Graph.Bar = Genoverse.Track.View.Graph.extend({\n  scaleFeatures: function (features, scale) {\n    var yScale = this.track.getYScale();\n    var zeroY  = this.prop('marginTop') - this.prop('range')[0] * yScale;\n\n    features = this.base(features, scale);\n\n    for (var i = 0; i < features.length; i++) {\n      features[i].position[scale].height = features[i].height * yScale;\n      features[i].position[scale].y      = zeroY;\n    }\n\n    return features;\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var datasets     = this.featureDataSets(features);\n    var marginBottom = this.prop('margin');\n    var binSize      = scale < 1 ? Math.ceil(1 / scale) : 0;\n    var conf, set, setFeatures, j, binnedFeatures, binStart, bin, f;\n\n    var defaults = {\n      color       : this.color,\n      globalAlpha : this.prop('globalAlpha')\n    };\n\n    for (var i = 0; i < datasets.list.length; i++) {\n      conf        = $.extend({}, defaults, datasets.list[i]);\n      set         = datasets.list[i].name;\n      setFeatures = $.extend(true, [], datasets.features[set] || []);\n\n      if (!setFeatures.length) {\n        continue;\n      }\n\n      if (binSize) {\n        binnedFeatures = [];\n        j              = 0;\n\n        while (j < setFeatures.length) {\n          binStart = setFeatures[j].start;\n          bin      = [];\n\n          while (setFeatures[j] && setFeatures[j].start - binStart < binSize) {\n            bin.push(setFeatures[j++]);\n          }\n\n\n          f = $.extend(true, {}, bin[0], {\n            height : bin.reduce(function (a, b) { return a + b.height; }, 0) / bin.length,\n            end    : bin[bin.length - 1].end\n          });\n\n          [ 'H', 'W', 'height', 'width' ].forEach(function (attr) {\n            f.position[scale][attr] = bin.reduce(function (a, b) { return a + b.position[scale][attr]; }, 0) / bin.length;\n          });\n\n          binnedFeatures.push(f);\n        }\n\n        setFeatures = binnedFeatures;\n      }\n\n      for (j = 0; j < setFeatures.length; j++) {\n        setFeatures[j].color = conf.color;\n      }\n\n      featureContext.globalAlpha = conf.globalAlpha;\n\n      this.base(setFeatures, featureContext, labelContext, scale);\n    }\n\n    // Don't allow features to be drawn in the margins\n    featureContext.clearRect(0, 0,                                  this.width, this.prop('marginTop') - 1);\n    featureContext.clearRect(0, this.prop('height') - marginBottom, this.width, marginBottom);\n  }\n});\n\nGenoverse.Track.Graph.Bar = Genoverse.Track.Graph.extend({\n  type      : 'Bar',\n  model     : Genoverse.Track.Model.Graph.Bar,\n  view      : Genoverse.Track.View.Graph.Bar,\n  threshold : 500000,\n\n  10000: $.extend( // Switch to line graph at 10000bp region\n    Object.keys(Genoverse.Track.Graph.Line.prototype).reduce(function (hash, key) {\n      if (Genoverse.Track.Graph.Line.prototype.hasOwnProperty(key) && !Base.prototype[key]) {\n        hash[key] = Genoverse.Track.Graph.Line.prototype[key];\n      }\n\n      return hash;\n    }, {}), {\n    fill  : true,\n    model : Genoverse.Track.Model.Graph.Line.extend({\n      parseData: function (data, chr, start, end) {\n        var coords = [];\n        var j;\n\n        for (var i = 0; i < data.length; i++) {\n          for (j = data[i].start; j < data[i].end; j++) {\n            coords.push([ j, data[i].height ]);\n          }\n        }\n\n        return this.base([{ chr: chr, start: start, end: end, coords: coords }], chr, start, end);\n      }\n    })\n  }),\n  50000: $.extend( // Switch to sparser line graph at 50000bp region\n    Object.keys(Genoverse.Track.Graph.Line.prototype).reduce(function (hash, key) {\n      if (Genoverse.Track.Graph.Line.prototype.hasOwnProperty(key) && !Base.prototype[key]) {\n        hash[key] = Genoverse.Track.Graph.Line.prototype[key];\n      }\n\n      return hash;\n    }, {}), {\n    fill  : true,\n    model : Genoverse.Track.Model.Graph.Line.extend({\n      parseData: function (data, chr, start, end) {\n        return this.base([{ chr: chr, start: start, end: end, coords: data.map(function (d) { return [ d.start, d.height ]; }) }], chr, start, end);\n      }\n    })\n  })\n});","Genoverse.Track.Controller.Sequence = Genoverse.Track.Controller.extend({\n  getClickedFeatures: function (x, y) {\n    var feature = this.base(x, y)[0];\n\n    return feature ? this.makeSeqFeatureMenu(feature, Math.floor(x / this.scale)) : false;\n  },\n\n  makeSeqFeatureMenu: function (feature, pos) {\n    feature.featureMenus      = feature.featureMenus      || {};\n    feature.featureMenus[pos] = feature.featureMenus[pos] || {\n      title    : feature.sequence.charAt(pos - feature.start),\n      Location : feature.chr + ':' + pos\n    }\n\n    return feature.featureMenus[pos].title ? feature.featureMenus[pos] : undefined;\n  }\n});\n","// Abstract Sequence model\n// assumes that the data source responds with raw sequence text\n// see Fasta model for more specific example\nGenoverse.Track.Model.Sequence = Genoverse.Track.Model.extend({\n  threshold : 100000,\n  chunkSize : 1000,\n  buffer    : 0,\n  dataType  : 'text',\n\n  setChrProps: function () {\n    var chr = this.browser.chr;\n\n    this.base();\n\n    this.chunksByChr      = this.chunksByChr || {};\n    this.chunksByChr[chr] = this.chunksByChr[chr] || {};\n  },\n\n  getData: function (chr, start, end) {\n    start = start - start % this.chunkSize + 1;\n    end   = end + this.chunkSize - end % this.chunkSize;\n    return this.base(chr, start, end);\n  },\n\n  parseData: function (data, chr, start, end) {\n    data = data.replace(/\\n/g, '');\n\n    if (this.prop('lowerCase')) {\n      data = data.toLowerCase();\n    }\n\n    for (var i = 0; i < data.length; i += this.chunkSize) {\n      if (this.chunksByChr[chr][start + i]) {\n        continue;\n      }\n\n      var feature = {\n        id       : chr + ':' + start + i,\n        chr      : chr,\n        start    : start + i,\n        end      : start + i + this.chunkSize,\n        sequence : data.substr(i, this.chunkSize),\n        sort     : start + i\n      };\n\n      this.chunksByChr[chr][feature.start] = feature;\n      this.insertFeature(feature);\n    }\n  }\n});\n","Genoverse.Track.Model.Sequence.Fasta = Genoverse.Track.Model.Sequence.extend({\n  url  : 'http://genoverse.org/data/Homo_sapiens.GRCh37.72.dna.chromosome.1.fa', // Example url\n\n  // Following settings could be left undefined and will be detected automatically via .getStartByte()\n  startByte  : undefined, // Byte in the file where the sequence actually starts\n  lineLength : undefined, // Length of the sequence line in the file\n\n  // TODO: Check if URL provided\n\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n\n    $.when(this.getStartByte()).done(function () {\n      start = start - start % this.chunkSize + 1;\n      end   = end + this.chunkSize - end % this.chunkSize;\n\n      var startByte = start - 1 + Math.floor((start - 1) / this.lineLength) + this.startByte;\n      var endByte   = end   - 1 + Math.floor((end   - 1) / this.lineLength) + this.startByte;\n\n      $.ajax({\n        url       : this.parseURL(),\n        dataType  : this.dataType,\n        context   : this,\n        headers   : { 'Range' : 'bytes=' + startByte + '-' + endByte },\n        xhrFields : this.xhrFields,\n        success   : function (data) { this.receiveData(data, chr, start, end); },\n        error     : this.track.controller.showError\n      }).done(function () { deferred.resolveWith(this); }).fail(function () { deferred.rejectWith(this); });\n    }).fail(function () { deferred.rejectWith(this); });\n\n    return deferred;\n  },\n\n  getStartByte: function () {\n    if (this.startByteRequest) {\n      return this.startByteRequest;\n    }\n\n    if (this.startByte === undefined || this.lineLength === undefined) {\n      this.startByteRequest = $.ajax({\n        url       : this.parseURL(),\n        dataType  : 'text',\n        context   : this,\n        headers   : { 'Range': 'bytes=0-300' },\n        xhrFields : this.xhrFields,\n        success   : function (data) {\n          if (data.indexOf('>') === 0) {\n            this.startByte = data.indexOf('\\n') + 1;\n          } else {\n            this.startByte = 0;\n          }\n\n          this.lineLength = data.indexOf('\\n', this.startByte) - this.startByte;\n        }\n      });\n\n      return this.startByteRequest;\n    }\n  }\n});\n","Genoverse.Track.Model.Sequence.Ensembl = Genoverse.Track.Model.Sequence.extend({\n  url              : '//rest.ensembl.org/sequence/region/human/__CHR__:__START__-__END__?content-type=text/plain', // Example url\n  dataRequestLimit : 10000000 // As per e! REST API restrictions\n});\n","Genoverse.Track.View.Sequence = Genoverse.Track.View.extend({\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  colors        : { 'default': '#CCCCCC', A: '#73E973', T: '#DE4C61', G: '#FFFF77', C: '#688EC0' },\n  labelColors   : { 'default': '#000000', T: '#FFFFFF', C: '#FFFFFF' },\n  labels        : 'overlay',\n\n  setDefaults: function () {\n    this.base.apply(this, arguments);\n\n    var lowerCase = this.prop('lowerCase');\n\n    this.labelYOffset = typeof this.labelYOffset === 'number' ? this.labelYOffset : (this.featureHeight + 1) / 2;\n    this.widestLabel  = typeof this.widestLabel  === 'string' ? this.widestLabel : lowerCase ? 'g' : 'G';\n    this.labelWidth   = {};\n\n    this.labelWidth[this.widestLabel] = Math.ceil(this.context.measureText(this.widestLabel).width) + 1;\n\n    if (lowerCase) {\n      for (var key in this.colors) {\n        this.colors[key.toLowerCase()] = this.colors[key];\n      }\n\n      for (key in this.labelColors) {\n        this.labelColors[key.toLowerCase()] = this.labelColors[key];\n      }\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    featureContext.textBaseline = 'middle';\n    featureContext.textAlign    = 'left';\n\n    var width = Math.max(scale, this.minScaledWidth);\n\n    for (var i = 0; i < features.length; i++) {\n      this.drawSequence(features[i], featureContext, scale, width);\n    }\n  },\n\n  drawSequence: function (feature, context, scale, width) {\n    var drawLabels = this.labelWidth[this.widestLabel] < width - 1;\n    var start, bp;\n\n    for (var i = 0; i < feature.sequence.length; i++) {\n      start = feature.position[scale].X + i * scale;\n\n      if (start < -scale || start > context.canvas.width) {\n        continue;\n      }\n\n      bp = feature.sequence.charAt(i);\n\n      context.fillStyle = this.colors[bp] || this.colors['default'];\n      context.fillRect(start, feature.position[scale].Y, width, this.featureHeight);\n\n      if (!this.labelWidth[bp]) {\n        this.labelWidth[bp] = Math.ceil(context.measureText(bp).width) + 1;\n      }\n\n      if (drawLabels) {\n        context.fillStyle = this.labelColors[bp] || this.labelColors['default'];\n        context.fillText(bp, start + (width - this.labelWidth[bp]) / 2, feature.position[scale].Y + this.labelYOffset);\n      }\n    }\n  }\n});\n","Genoverse.Track.View.SequenceVariation = Genoverse.Track.View.Sequence.extend({\n  featureHeight : 15,\n  featureMargin : { top: 0, right: 0, bottom: 4, left: 0 },\n  bump          : true,\n  showLegend    : false,\n\n  positionFeature: function (feature, params) {\n    var position = feature.position[params.scale];\n\n    if (feature.alt_allele) {\n      if (!position.positioned) {\n        position.reference = { end: position.start + feature.ref_allele.length * params.scale };\n      }\n\n      position.reference.x = position.reference.end - params.scaledStart;\n    }\n\n    this.base(feature, params);\n  },\n\n  bumpFeature: function (bounds, feature) {\n    if (feature.alt_allele) {\n      this.base.apply(this, arguments);\n    }\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var drawing = { seq: [], snv: [] };\n\n    for (var i = 0; i < features.length; i++) {\n      drawing[features[i].alt_allele ? 'snv' : 'seq'].push(features[i]);\n    }\n\n    this.base(drawing.seq, featureContext, labelContext, scale);\n    this.highlightSNVs(drawing.snv, featureContext, scale);\n    this.base(drawing.snv, featureContext, labelContext, scale);\n    this.outlineSNVs(drawing.snv, featureContext, scale); // Redraw the outline for SNVs, since the feature will have been drawn on top of some of the outline created by highlightSNVs\n  },\n\n  highlightSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n\n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.reference.x, position.X + position.width ];\n\n      if (positionX[2] < 0 || positionX[0] > this.width) {\n        continue;\n      }\n\n      if (positionX[0] < 0 || positionX[2] > this.width) {\n        this.truncateForDrawing(positionX);\n      }\n\n      positionY = [ 0, position.Y - this.featureMargin.bottom / 2, position.Y, position.Y + this.featureHeight ];\n\n      if (!features[i].highlightColor) {\n        this.setHighlightColor(features[i]);\n      }\n\n      context.strokeStyle = context.fillStyle = features[i].highlightColor;\n      context.lineWidth   = 2;\n\n      context.beginPath();\n      context.moveTo(positionX[0], positionY[0]);\n      context.lineTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[2], positionY[2]);\n      context.lineTo(positionX[2], positionY[3]);\n      context.lineTo(positionX[0], positionY[3]);\n      context.closePath();\n      context.stroke();\n\n      context.lineWidth   = 1;\n      context.globalAlpha = 0.5;\n\n      context.fill();\n\n      context.globalAlpha = 1;\n    }\n  },\n\n  outlineSNVs: function (features, context, scale) {\n    var position, positionX, positionY;\n\n    for (var i = 0; i < features.length; i++) {\n      position  = features[i].position[scale];\n      positionX = [ position.X, position.X + position.width ];\n      positionY = [ position.Y, position.Y + this.featureHeight ];\n\n      context.strokeStyle = features[i].highlightColor;\n\n      context.lineWidth = 2;\n\n      context.beginPath();\n      context.moveTo(positionX[1], positionY[0]);\n      context.lineTo(positionX[1], positionY[1]);\n      context.lineTo(positionX[0], positionY[1]);\n      context.lineTo(positionX[0], positionY[0]);\n      context.stroke();\n\n      context.lineWidth = 1;\n    }\n  },\n\n  truncateForDrawing: function (positionX) {\n    for (var i in positionX) {\n      positionX[i] = Math.min(Math.max(positionX[i], -1), this.width + 1);\n    }\n  },\n\n  setHighlightColor: function (feature) {\n    feature.highlightColor = feature.alt_allele === '-' || feature.alt_allele.length < feature.ref_allele.length ? '#D31D00' : '#1DD300';\n  }\n});\n","Genoverse.Track.Model.SequenceVariation = Genoverse.Track.Model.extend({\n  seqModel: Genoverse.Track.Model.Sequence.Ensembl,\n\n  getSeqModel: function () {\n    var models = this.prop('models');\n    return models.seq = models.seq || this.track.newMVC(this.seqModel);\n  },\n\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n    var seqData  = this.getSeqModel().checkDataRange(chr, start, end);\n\n    this.base(chr, start, end).done(function () {\n      if (seqData) {\n        deferred.resolve();\n      } else {\n        this.getSeqModel().getData(chr, start, end).done(deferred.resolve);\n      }\n    });\n\n    return deferred;\n  },\n\n  insertFeature: function (feature) {\n    return this.base($.extend(feature, {\n      end      : feature.start + feature.alt_allele.length - 1,\n      length   : feature.alt_allele.length,\n      sequence : feature.alt_allele\n    }));\n  },\n\n  checkDataRange: function (chr, start, end) {\n    return this.base(chr, start, end) && this.getSeqModel().checkDataRange(chr, start, end);\n  },\n\n  findFeatures: function (chr, start, end) {\n    return this.getSeqModel().findFeatures(chr, start, end).concat(this.base(chr, start, end));\n  }\n});\n","// Abstract Gene model\n// see sub-models for more specific examples\nGenoverse.Track.Model.Gene = Genoverse.Track.Model.extend({\n\n});","// Ensembl REST API Gene model\nGenoverse.Track.Model.Gene.Ensembl = Genoverse.Track.Model.Gene.extend({\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=gene;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n\n  // The url above responds in json format, data is an array\n  // We assume that parents always preceed children in data array, gene -> transcript -> exon\n  // See rest.ensembl.org/documentation/info/feature_region for more details\n  parseData: function (data, chr) {\n    for (var i = 0; i < data.length; i++) {\n      var feature = data[i];\n\n      if (feature.feature_type === 'gene' && !this.featuresById[feature.id]) {\n        feature.chr         = feature.chr || chr;\n        feature.label       = parseInt(feature.strand, 10) === 1 ? (feature.external_name || feature.id) + ' >' : '< ' + (feature.external_name || feature.id);\n        feature.transcripts = [];\n\n        this.insertFeature(feature);\n      }\n    }\n  }\n});\n","Genoverse.Track.View.Gene = Genoverse.Track.View.extend({\n  featureHeight : 5,\n  labels        : true,\n  repeatLabels  : true,\n  bump          : true\n});\n","Genoverse.Track.View.Gene.Ensembl = Genoverse.Track.View.Gene.extend({\n  setFeatureColor: function (feature) {\n    var processed_transcript = {\n      'sense_intronic'           : 1,\n      'sense_overlapping'        : 1,\n      'processed_transcript'     : 1,\n      'nonsense_mediated_decay'  : 1,\n      'non_stop_decay'           : 1,\n      'antisense'                : 1,\n      'retained_intron'          : 1,\n      'tec'                      : 1,\n      'non_coding'               : 1,\n      'ambiguous_orf'            : 1,\n      'disrupted_domain'         : 1,\n      '3prime_overlapping_ncrna' : 1\n    };\n\n    feature.color = '#000000';\n\n    if (feature.logic_name.indexOf('ensembl_havana') === 0) {\n      feature.color  = '#CD9B1D';\n      feature.legend = 'Merged Ensembl/Havana';\n    } else if (processed_transcript[feature.biotype]) {\n      feature.color  = '#0000FF';\n      feature.legend = 'Processed transcript';\n    } else if (feature.biotype === 'protein_coding') {\n      feature.color  = '#A00000';\n      feature.legend = 'Protein coding';\n    } else if (feature.biotype.indexOf('pseudogene') > -1) {\n      feature.color  = '#666666';\n      feature.legend = 'Pseudogene';\n    } else if (/rna/i.test(feature.biotype)) {\n      feature.color  = '#8B668B';\n      feature.legend = 'RNA gene';\n    } else if (/^tr_.+_gene$/i.test(feature.biotype)) {\n      feature.color  = '#CD6600';\n      feature.legend = 'TR gene';\n    } else if (/^ig_.+_gene$/i.test(feature.biotype)) {\n      feature.color  = '#8B4500';\n      feature.legend = 'IG gene';\n    }\n\n    feature.labelColor = feature.color;\n  }\n});","// Abstract Transcript model\n// see sub-models for more specific examples\nGenoverse.Track.Model.Transcript = Genoverse.Track.Model.extend({\n\n});","// Ensembl REST API Transcript model\nGenoverse.Track.Model.Transcript.Ensembl = Genoverse.Track.Model.Transcript.extend({\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=transcript;feature=exon;feature=cds;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n\n  setDefaults: function () {\n    this.geneIds   = {};\n    this.seenGenes = 0;\n\n    this.base.apply(this, arguments);\n  },\n\n  // The url above responds in json format, data is an array\n  // See rest.ensembl.org/documentation/info/overlap_region for more details\n  parseData: function (data, chr) {\n    var model        = this;\n    var featuresById = this.featuresById;\n    var ids          = [];\n\n    data.filter(function (d) { return d.feature_type === 'transcript'; }).forEach(function (feature, i) {\n      if (!featuresById[feature.id]) {\n        model.geneIds[feature.Parent] = model.geneIds[feature.Parent] || ++model.seenGenes;\n\n        feature.chr         = feature.chr || chr;\n        feature.label       = parseInt(feature.strand, 10) === 1 ? (feature.external_name || feature.id) + ' >' : '< ' + (feature.external_name || feature.id);\n        feature.sort        = (model.geneIds[feature.Parent] * 1e10) + (feature.logic_name.indexOf('ensembl_havana') === 0 ? 0 : 2e9) + (feature.biotype === 'protein_coding' ? 0 : 1e9) + feature.start + i;\n        feature.cdsStart    = Infinity;\n        feature.cdsEnd      = -Infinity;\n        feature.exons       = {};\n        feature.subFeatures = [];\n\n        model.insertFeature(feature);\n      }\n\n      ids.push(feature.id);\n    });\n\n    data.filter(function (d) { return d.feature_type === 'cds' && featuresById[d.Parent]; }).forEach(function (cds) {\n      featuresById[cds.Parent].cdsStart = Math.min(featuresById[cds.Parent].cdsStart, cds.start);\n      featuresById[cds.Parent].cdsEnd   = Math.max(featuresById[cds.Parent].cdsEnd,   cds.end);\n    });\n\n    data.filter(function (d) { return d.feature_type === 'exon' && featuresById[d.Parent] && !featuresById[d.Parent].exons[d.id]; }).forEach(function (exon) {\n      if (exon.end < featuresById[exon.Parent].cdsStart || exon.start > featuresById[exon.Parent].cdsEnd) {\n        exon.utr = true;\n      } else if (exon.start < featuresById[exon.Parent].cdsStart) {\n        featuresById[exon.Parent].subFeatures.push($.extend({ utr: true }, exon, { end: featuresById[exon.Parent].cdsStart }));\n\n        exon.start = featuresById[exon.Parent].cdsStart;\n      } else if (exon.end > featuresById[exon.Parent].cdsEnd) {\n        featuresById[exon.Parent].subFeatures.push($.extend({ utr: true }, exon, { start: featuresById[exon.Parent].cdsEnd }));\n\n        exon.end = featuresById[exon.Parent].cdsEnd;\n      }\n\n      featuresById[exon.Parent].subFeatures.push(exon);\n      featuresById[exon.Parent].exons[exon.id] = exon;\n    });\n\n    ids.forEach(function (id) {\n      featuresById[id].subFeatures.sort(function (a, b) { return a.start - b.start; });\n    });\n  }\n});\n","Genoverse.Track.View.Transcript = Genoverse.Track.View.extend({\n  featureHeight       : 10,\n  utrHeight           : 7,\n  labels              : true,\n  repeatLabels        : true,\n  bump                : true,\n  subFeatureJoinStyle : 'curve',\n\n  scaleFeatures: function (features, scale) {\n    var subFeatures, j;\n\n    for (var i = 0; i < features.length; i++) {\n      subFeatures = features[i].subFeatures || [];\n\n      if (subFeatures.length) {\n        for (j = 0; j < subFeatures.length; j++) {\n          if (subFeatures[j].utr) {\n            subFeatures[j].height = this.utrHeight;\n          }\n        }\n\n        features[i].height = Math.max.apply(Math, subFeatures.map(function (c) { return c.fake ? 0 : c.height || 0; }).concat(this.featureHeight));\n      }\n    }\n\n    return this.base(features, scale);\n  }\n});","Genoverse.Track.View.Transcript.Ensembl = Genoverse.Track.View.Transcript.extend({\n  setFeatureColor: function (feature) {\n    Genoverse.Track.View.Gene.Ensembl.prototype.setFeatureColor(feature);\n\n    for (var i = 0; i < (feature.subFeatures || []).length; i++) {\n      if (feature.subFeatures[i].utr) {\n        feature.subFeatures[i].color       = false;\n        feature.subFeatures[i].borderColor = feature.color;\n      }\n    }\n  }\n});","Genoverse.Track.Model.File = Genoverse.Track.Model.extend({\n  dataType: 'text',\n\n  init: function () {\n    if (this.isLocal) {\n      this.url = false;\n    }\n\n    if (!(this.largeFile || this.indexFile)) {\n      this.allData = true;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  getData: function (chr) {\n    var model = this;\n\n    if (this.isLocal && this.dataFile) {\n      var reader   = new FileReader();\n      var deferred = $.Deferred();\n\n      reader.onload = function (e) {\n        deferred.done(function () {\n          this.receiveData(e.target.result, chr, 1, this.browser.getChromosomeSize(chr));\n        }).resolveWith(model);\n      };\n\n      reader.readAsText(this.dataFile);\n\n      return deferred;\n    } else {\n      return this.base.apply(this, arguments);\n    }\n  }\n});\n","Genoverse.Track.Model.File.BAM = Genoverse.Track.Model.File.extend({\n  getData: function (chr, start, end) {\n    var model    = this;\n    var deferred = $.Deferred();\n\n    if (!this.bamFile) {\n      if (this.url) {\n        this.bamFile = new dallianceLib.URLFetchable(this.url);\n        this.baiFile = new dallianceLib.URLFetchable(this.url + this.prop('indexExt'));\n      } else if (this.dataFile && this.indexFile) {\n        this.bamFile = new dallianceLib.BlobFetchable(this.dataFile);\n        this.baiFile = new dallianceLib.BlobFetchable(this.indexFile);\n      } else {\n        return deferred.rejectWith(model, [ 'BAM files must be accompanied by a .bai index file' ]);\n      }\n    }\n\n    dallianceLib.makeBam(this.bamFile, this.baiFile, null, function (bam, makeBamError) {\n      if (makeBamError) {\n        console.log(makeBamError);\n      } else {\n        bam.fetch(chr, start, end, function (features, fetchBamError) {\n          if (fetchBamError) {\n            console.log(fetchBamError);\n          } else {\n            model.receiveData(features, chr, start, end);\n            deferred.resolveWith(model);\n          }\n        });\n      }\n    });\n\n    return deferred;\n  },\n\n  insertFeature: function (feature) {\n    feature.id       = feature.chr + ':' + feature.readName + ':' + feature.pos;\n    feature.start    = feature.pos + 1;\n    feature.end      = feature.start + feature.seq.length;\n    feature.sequence = feature.seq;\n\n    return this.base(feature);\n  }\n});\n","Genoverse.Track.Model.File.BED = Genoverse.Track.Model.File.extend({\n  parseData: function (data, chr) {\n    var lines       = typeof data === 'string' ? data.split('\\n') : data;\n    var thinHeight  = this.prop('thinHeight');\n    var thickHeight = this.prop('thickHeight');\n    var fields, len, feature, subfeatures, subfeature, blockSizes, blockStarts, j, thinFeature, thinFeature1, thinFeature2, thickFeature;\n\n    function filterNumber(n) {\n      return !isNaN(n);\n    }\n\n    for (var i = 0; i < lines.length; i++) {\n      fields = lines[i].split('\\t').filter(function(f) { return f; });\n\n      if (fields.length < 3 || fields[0] == 'track' || fields[0] == 'browser') {\n        continue;\n      }\n\n      len = fields.length;\n\n      if (fields[0] == chr || fields[0].toLowerCase() == 'chr' + chr || fields[0].match('[^1-9]' + chr + '$')) {\n        feature = {\n          chr             : chr,\n          start           : parseInt(fields[1], 10),\n          end             : parseInt(fields[2], 10),\n          name            : fields[3],\n          color           : '#000000',\n          originalFeature : fields\n        };\n\n        if (len > 3) { feature.score  = parseFloat(fields[4], 10); }\n        if (len > 5) { feature.strand = fields[5];                 }\n\n        if (len > 7) {\n          feature.thickStart = fields[6];\n          feature.thickEnd   = fields[7];\n          feature.drawThick  = (feature.thickStart === feature.thickEnd) ? false : true;\n        }\n\n        if (fields[8]) {\n          feature.color = 'rgb(' + fields[8] + ')';\n        } else {\n          feature.color = this.scoreColor(isNaN(feature.score) ? 1000 : feature.score);\n        }\n\n        if (len == 12) { // subfeatures present\n          feature.blockCount = parseInt(fields[9],10);\n\n          subfeatures = [];\n          blockSizes  = fields[10].split(',').filter(filterNumber);\n          blockStarts = fields[11].split(',').filter(filterNumber);\n\n          for (j = 0; j < blockSizes.length; j++) {\n            subfeature = {\n              start  : feature.start + parseInt(blockStarts[j], 10),\n              height : thinHeight // if subfeature lies entirely left / right to [ thickStart, thickEnd ]\n            };\n\n            subfeature.end = subfeature.start + parseInt(blockSizes[j], 10);\n\n            if (feature.drawThick && subfeature.start <= feature.thickEnd && subfeature.end >= feature.thickStart) {\n              // some kind of an overlap for sure\n              if (subfeature.start > feature.thickStart && subfeature.end < feature.thickEnd) {\n                // subfeature within thickBlock, draw thick\n                subfeature.height = thickHeight;\n                subfeatures.push(subfeature);\n              } else if (subfeature.start < feature.thickStart && subfeature.end <= feature.thickEnd) {\n                // left overlap, split subfeature into 2 - thin | thick\n                thinFeature  = $.extend({}, subfeature, { end: feature.thickStart });\n                thickFeature = $.extend({}, subfeature, { start: feature.thickStart, height: thickHeight });\n\n                subfeatures = subfeatures.concat([thinFeature, thickFeature]);\n              } else if (subfeature.start >= feature.thickStart && subfeature.end > feature.thickEnd) {\n                // right overlap, split subfeature into 2 - thick | thin\n                thinFeature  = $.extend({}, subfeature, { start: feature.thickEnd });\n                thickFeature = $.extend({}, subfeature, { end: feature.thickEnd, height: thickHeight });\n\n                subfeatures = subfeatures.concat([ thickFeature, thinFeature ]);\n              }else{\n                // thickBlock lies within subfeature, split into 3 - thin | thick | thin\n                // the least possible case but lets be prepared for the outliers\n                thinFeature1 = $.extend({}, subfeature, { end: feature.thickStart });\n                thinFeature2 = $.extend({}, subfeature, { start: feature.thickEnd });\n                thickFeature = { start: feature.thickStart, end: feature.thickEnd, height: thickHeight };\n\n                subfeatures = subfeatures.concat([ thinFeature1, thickFeature, thinFeature2 ]);\n              }\n            } else {\n              // no thick block\n              subfeatures.push(subfeature);\n            }\n          }\n\n          if (subfeatures.length) {\n            feature.subFeatures = subfeatures;\n          }\n        }\n\n        this.insertFeature(feature);\n      }\n    }\n  },\n\n  // As per https://genome.ucsc.edu/FAQ/FAQformat.html#format1 specification\n  scoreColor: function (score) {\n    if (score <= 166) { return 'rgb(219,219,219)'; }\n    if (score <= 277) { return 'rgb(186,186,186)'; }\n    if (score <= 388) { return 'rgb(154,154,154)'; }\n    if (score <= 499) { return 'rgb(122,122,122)'; }\n    if (score <= 611) { return 'rgb(94,94,94)';    }\n    if (score <= 722) { return 'rgb(67,67,67)';    }\n    if (score <= 833) { return 'rgb(42,42,42)';    }\n    if (score <= 944) { return 'rgb(21,21,21)';    }\n    return '#000000';\n  }\n});\n","Genoverse.Track.Model.File.GFF = Genoverse.Track.Model.File.extend({\n  parseData: function (text, chr) {\n    var lines = text.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n\n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n\n      var seqId = fields[0].toLowerCase();\n\n      if (\n        seqId == chr                      ||\n        seqId == 'chr' + chr              ||\n        seqId.match('[^1-9]' + chr + '$') ||\n        seqId.match('^' + chr + '\\\\b')\n      ) {\n        this.insertFeature({\n          id     : fields.slice(0, 5).join('|'),\n          chr    : chr,\n          start  : parseInt(fields[3], 10),\n          end    : parseInt(fields[4], 10),\n          source : fields[1],\n          type   : fields[2],\n          score  : fields[5],\n          strand : fields[6] === '-' ? -1 : 1,\n          label  : fields[1] + ' ' + fields[2] + ' ' + fields[3] + '-' + fields[4]\n        });\n      }\n    }\n  }\n});\n\nGenoverse.Track.Model.File.GTF = Genoverse.Track.Model.File.GFF;\n","Genoverse.Track.Model.File.VCF = Genoverse.Track.Model.File.extend({\n  getData: function (chr, start, end) {\n    var deferred = $.Deferred();\n    var model    = this;\n\n    if (!this.prop('gz')) {\n      return this.base.apply(this, arguments);\n    }\n\n    if (!this.vcfFile) {\n      if (this.url) {\n        this.vcfFile = new dallianceLib.URLFetchable(this.url);\n        this.tbiFile = new dallianceLib.URLFetchable(this.url + this.prop('indexExt'));\n      } else if (this.dataFile && this.indexFile) {\n        this.vcfFile = new dallianceLib.BlobFetchable(this.dataFile);\n        this.tbiFile = new dallianceLib.BlobFetchable(this.indexFile);\n      } else {\n        return deferred.rejectWith(model, [ 'GZipped VCF files must be accompanied by a .tbi index file' ]);\n      }\n    }\n\n    this.makeVCF(this.vcfFile, this.tbiFile).then(function (vcf) {\n      model.cachedVCF = vcf;\n\n      vcf.getRecords(chr, start, end, function (records) {\n        model.receiveData(records, chr, start, end);\n        deferred.resolveWith(model);\n      });\n    });\n\n    return deferred;\n  },\n\n  makeVCF: function (vcfFile, tbiFile) {\n    var deferred = $.Deferred();\n\n    if (this.cachedVCF) {\n      deferred.resolve(this.cachedVCF);\n    } else {\n      var vcf = new VCFReader(vcfFile, tbiFile);\n\n      vcf.readTabix(function (tabix) {\n        vcf.tabix = tabix;\n        deferred.resolve(vcf);\n      });\n    }\n\n    return deferred;\n  },\n\n  parseData: function (text, chr) {\n    var lines   = text.split('\\n');\n    var maxQual = this.allData ? this.prop('maxQual') || 0 : false;\n\n    for (var i = 0; i < lines.length; i++) {\n      if (!lines[i].length || lines[i].indexOf('#') === 0) {\n        continue;\n      }\n\n      var fields = lines[i].split('\\t');\n\n      if (fields.length < 5) {\n        continue;\n      }\n\n      if (fields[0] == chr || fields[0] == 'chr' + chr) {\n        var id      = fields.slice(0, 3).join('|');\n        var start   = parseInt(fields[1], 10);\n        var alleles = fields[4].split(',');\n\n        alleles.unshift(fields[3]);\n\n        for (var j = 0; j < alleles.length; j++) {\n          var end = start + alleles[j].length - 1;\n\n          this.insertFeature({\n            id              : id + '|' + alleles[j],\n            sort            : j,\n            chr             : chr,\n            start           : start,\n            end             : end,\n            width           : end - start,\n            allele          : j === 0 ? 'REF' : 'ALT',\n            sequence        : alleles[j],\n            label           : alleles[j],\n            labelColor      : '#FFFFFF',\n            originalFeature : fields\n          });\n        }\n\n        if (maxQual !== false) {\n          maxQual = Math.max(maxQual, fields[5]);\n        }\n      }\n    }\n\n    if (maxQual) {\n      this.prop('maxQual', maxQual);\n    }\n  }\n});\n","Genoverse.Track.Model.File.WIG = Genoverse.Track.Model.Graph.Bar.extend({\n  dataType: 'text',\n\n  getData: function () {\n    if (!this.url) {\n      this.isLocal  = true;\n      this.dataFile = this.track.dataFile;\n\n      return Genoverse.Track.Model.File.prototype.getData.apply(this, arguments);\n    }\n\n    return this.base.apply(this, arguments);\n  },\n\n  parseData: function (text, chr, s, e) {\n    var lines    = text.split('\\n');\n    var features = [];\n    var fields, chrom, start, step, span, line, feature, i;\n\n    while (lines.length && (line = lines.shift())) {\n      if (line.indexOf('#') != -1 || line.indexOf('browser') != -1 || line.indexOf('track') != -1) {\n        continue;\n      } else {\n        break;\n      }\n    }\n\n    if (line) {\n      fields = line.split(/\\s+/);\n      chrom  = parseInt(fields[1].split('=')[1].replace('chr',''));\n\n      if (fields[0] == 'fixedStep') {\n        start = parseInt(fields[2].split('=')[1]);\n        step  = parseInt(fields[3].split('=')[1]);\n        span  = fields[4] ? parseInt(fields[4].split('=')[1]) : 1;\n\n        for (i = 0; i < lines.length; i++){\n          features.push({\n            chr    : chrom,\n            start  : start,\n            end    : start + span,\n            height : parseFloat(lines[i])\n          });\n\n          start += step;\n        }\n      } else if (fields[0] == 'variableStep') {\n        span = fields[2] ? parseInt(fields[2].split('=')[1]) : 1;\n\n        for (i = 0; i < lines.length; i++){\n          fields  = lines[i].split(/\\s+/);\n          feature = {\n            chr    : chrom,\n            start  : parseInt(fields[0], 10),\n            height : parseFloat(fields[1])\n          };\n\n          feature.end = feature.start + span;\n\n          features.push(feature);\n        }\n      }\n    }\n\n    return this.base.call(this, features, chr, s, e);\n  }\n});\n","Genoverse.Track.Chromosome = Genoverse.Track.extend({\n  id            : 'chromosome',\n  margin        : 1,\n  featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n  labels        : 'overlay',\n  url           : false,\n  allData       : true,\n  colors        : {\n    acen    : '#708090',\n    gneg    : '#FFFFFF',\n    gpos    : '#000000',\n    gpos100 : '#000000',\n    gpos25  : '#D9D9D9',\n    gpos33  : '#BFBFBF',\n    gpos50  : '#999999',\n    gpos66  : '#7F7F7F',\n    gpos75  : '#666666',\n    gvar    : '#E0E0E0',\n    stalk   : '#708090'\n  },\n  labelColors: {\n    gneg   : '#000000',\n    gvar   : '#000000',\n    gpos25 : '#000000',\n    gpos33 : '#000000'\n  },\n\n  getData: function (chr, start, end) {\n    this.receiveData($.extend(true, [], this.browser.genome[chr].bands), chr, start, end);\n    return $.Deferred().resolveWith(this);\n  },\n\n  insertFeature: function (feature) {\n    feature.label      = feature.type === 'acen' || feature.type === 'stalk' ? false : feature.id;\n    feature.menuTitle  = feature.id ? feature.chr + feature.id : feature.chr + ':' + feature.start + '-' + feature.end;\n    feature.color      = this.prop('colors')[feature.type]      || '#FFFFFF';\n    feature.labelColor = this.prop('labelColors')[feature.type] || '#FFFFFF';\n\n    if (feature.id) {\n      feature.id = feature.chr + feature.id;\n    }\n\n    this.base(feature);\n  },\n\n  drawFeature: function (feature, featureContext, labelContext, scale) {\n    featureContext.fillStyle   = feature.color;\n    featureContext.strokeStyle = '#000000';\n\n    if (feature.type === 'acen') {\n      featureContext.beginPath();\n\n      if (this.drawnAcen) {\n        featureContext.moveTo(feature.x + feature.width, 0.5);\n        featureContext.lineTo(feature.x, (feature.height + 0.5) / 2);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, (feature.height + 0.5) / 2);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n        this.drawnAcen = true;\n      }\n\n      featureContext.fill();\n      featureContext.stroke();\n    } else if (feature.type === 'stalk') {\n      for (var i = 0; i < 2; i++) {\n        featureContext.beginPath();\n\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.25 + 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n\n        featureContext[i ? 'moveTo' : 'lineTo'](feature.x + feature.width, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.75, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x + feature.width * 0.25, feature.height * 0.75 - 0.5);\n        featureContext.lineTo(feature.x, feature.height + 0.5);\n\n        featureContext[i ? 'stroke' : 'fill']();\n      }\n    } else {\n      this.base(feature, featureContext, labelContext, scale);\n\n      featureContext.beginPath();\n\n      var chrSize = this.browser.getChromosomeSize(feature.chr);\n\n      if (feature.start === 1 || feature.end === chrSize) {\n        if (feature.start === 1) {\n          var end = feature.x + feature.width - (feature.end === chrSize ? 5 : 0);\n\n          featureContext.clearRect(0, 0, 5, feature.height + 0.5);\n\n          featureContext.fillStyle = feature.color;\n          featureContext.moveTo(5,   0.5);\n          featureContext.lineTo(end, 0.5);\n          featureContext.moveTo(5,   feature.height + 0.5);\n          featureContext.lineTo(end, feature.height + 0.5);\n          featureContext.moveTo(5, 0.5);\n          featureContext.bezierCurveTo(-1, 0.5, -1, feature.height + 0.5, 5, feature.height + 0.5);\n          featureContext.fill();\n        }\n\n        if (feature.end === chrSize) {\n          featureContext.clearRect(feature.x + feature.width - 5, 0, 5, feature.height + 0.5);\n\n          if (feature.start !== 1) {\n            featureContext.fillStyle = feature.color;\n            featureContext.moveTo(feature.x, 0.5);\n            featureContext.lineTo(feature.x + feature.width - 5, 0.5);\n            featureContext.moveTo(feature.x, feature.height + 0.5);\n            featureContext.lineTo(feature.x + feature.width - 5, feature.height + 0.5);\n          }\n\n          featureContext.moveTo(feature.x + feature.width - 5, 0.5);\n          featureContext.bezierCurveTo(this.width + 1, 0.5, this.width + 1, feature.height + 0.5, feature.x + feature.width - 5, feature.height + 0.5);\n          featureContext.fill();\n        }\n      } else {\n        featureContext.moveTo(feature.x, 0.5);\n        featureContext.lineTo(feature.x + feature.width, 0.5);\n        featureContext.moveTo(feature.x, feature.height + 0.5);\n        featureContext.lineTo(feature.x + feature.width, feature.height + 0.5);\n      }\n\n      featureContext.stroke();\n    }\n  },\n\n  drawLabel: function (feature) {\n    if ((feature.start === 1 || feature.end === this.browser.getChromosomeSize(feature.chr)) && feature.labelWidth >= Math.floor(feature.width - 5)) {\n      return;\n    }\n\n    this.base.apply(this, arguments);\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title    : feature.menuTitle,\n      Position : feature.chr + ':' + feature.start + '-' + feature.end\n    };\n  }\n});\n","Genoverse.Track.dbSNP = Genoverse.Track.extend({\n  id               : 'dbSNP',\n  name             : 'dbSNP',\n  info             : 'All sequence variants from the database of Single Nucleotide Polymorphisms (dbSNP)',\n  url              : '//rest.ensembl.org/overlap/region/human/__CHR__:__START__-__END__?feature=variation;content-type=application/json',\n  dataRequestLimit : 5000000, // As per e! REST API restrictions\n  threshold        : 1e5,\n  labels           : false,\n  legend           : true,\n  autoHeight       : true,\n  colorMap         : {\n    transcript_ablation                : '#ff0000',\n    splice_acceptor_variant            : '#FF581A',\n    splice_donor_variant               : '#FF581A',\n    stop_gained                        : '#ff0000',\n    frameshift_variant                 : '#9400D3',\n    stop_lost                          : '#ff0000',\n    start_lost                         : '#ffd700',\n    transcript_amplification           : '#ff69b4',\n    inframe_insertion                  : '#ff69b4',\n    inframe_deletion                   : '#ff69b4',\n    missense_variant                   : '#ffd700',\n    protein_altering_variant           : '#FF0080',\n    splice_region_variant              : '#ff7f50',\n    incomplete_terminal_codon_variant  : '#ff00ff',\n    stop_retained_variant              : '#76ee00',\n    synonymous_variant                 : '#76ee00',\n    coding_sequence_variant            : '#458b00',\n    mature_miRNA_variant               : '#458b00',\n    '5_prime_UTR_variant'              : '#7ac5cd',\n    '3_prime_UTR_variant'              : '#7ac5cd',\n    non_coding_transcript_exon_variant : '#32cd32',\n    intron_variant                     : '#02599c',\n    NMD_transcript_variant             : '#ff4500',\n    non_coding_transcript_variant      : '#32cd32',\n    upstream_gene_variant              : '#a2b5cd',\n    downstream_gene_variant            : '#a2b5cd',\n    TFBS_ablation                      : '#a52a2a',\n    TFBS_amplification                 : '#a52a2a',\n    TF_binding_site_variant            : '#a52a2a',\n    regulatory_region_ablation         : '#a52a2a',\n    regulatory_region_amplification    : '#a52a2a',\n    feature_elongation                 : '#7f7f7f',\n    regulatory_region_variant          : '#a52a2a',\n    feature_truncation                 : '#7f7f7f',\n    intergenic_variant                 : '#636363'\n  },\n\n  insertFeature: function (feature) {\n    feature.color  = this.prop('colorMap')[feature.consequence_type];\n    feature.legend = feature.consequence_type;\n\n    if (feature.start > feature.end) {\n      feature.decorations = true;\n    }\n\n    this.base(feature);\n  },\n\n  decorateFeature: function (feature, context, scale) {\n    context.fillStyle = feature.color;\n    context.beginPath();\n    context.moveTo(feature.position[scale].X - 3, feature.position[scale].Y + this.featureHeight);\n    context.lineTo(feature.position[scale].X,     feature.position[scale].Y + this.featureHeight - 4);\n    context.lineTo(feature.position[scale].X + 3, feature.position[scale].Y + this.featureHeight);\n    context.fill();\n\n    if (scale > 1) {\n      context.fillRect(feature.position[scale].X - 0.5, feature.position[scale].Y, 1.5, feature.position[scale].height);\n    }\n  },\n\n  populateMenu: function (feature) {\n    var deferred = $.Deferred();\n    var menu     = [{\n      title       : '<a href=\"http://www.ensembl.org/Homo_sapiens/Variation/Summary?v=' + feature.id + '\" target=\"_blank\">' + feature.id + '</a>',\n      Location    : feature.chr + ':' + feature.start + '-' + feature.end,\n      Consequence : feature.consequence_type,\n      Alleles     : feature.alleles.join(', ')\n    }];\n\n    $.ajax({\n      url      : '//rest.ensembl.org/variation/human/' + feature.id + '?population_genotypes=1;content-type=application/json',\n      dataType : 'json',\n      success  : function (data) {\n        var populationGenotypes = $.grep(data.population_genotypes, function (pop) { return /1000GENOMES.+ALL/.test(pop.population); }); // Only considering 1000 Genomes: ALL population\n        var frequencies         = {};\n        var pop, i, j;\n\n        if (populationGenotypes.length) {\n          for (i = 0; i < populationGenotypes.length; i++) {\n            pop           = populationGenotypes[i];\n            pop.frequency = parseFloat(pop.frequency, 10);\n            pop.count     = parseInt(pop.count, 10);\n\n            frequencies[pop.population] = frequencies[pop.population] || [];\n            frequencies[pop.population].push(pop);\n          }\n\n          for (i in frequencies) {\n            frequencies[i].sort(function (a, b) { return a.count < b.count; });\n\n            pop = {\n              title    : i + ' population genotypes',\n              Genotype : [ 'Frequency', 'Count' ],\n              start    : false,\n              end      : false\n            };\n\n            for (j in frequencies[i]) {\n              pop[frequencies[i][j].genotype] = [ (frequencies[i][j].frequency * 100).toFixed(2) + '%', frequencies[i][j].count ];\n            }\n\n            menu.push(pop);\n          }\n\n          pop = {\n            start : false,\n            end   : false\n          };\n\n          pop['<a href=\"http://www.ensembl.org/Homo_sapiens/Variation/Population?v=' + feature.id + '\" target=\"_blank\">See all population genotypes</a>'] = '';\n\n          menu.push(pop);\n        }\n\n        deferred.resolve(menu);\n      }\n    });\n\n    return deferred;\n  },\n\n  // Different settings for different zoom level\n  5000: { // more than 5k\n    bump: false\n  },\n  1: { // > 1 base-pair, but less then 5k\n    bump: true\n  }\n\n});\n","Genoverse.Track.File = Genoverse.Track.extend({\n  setInterface: function () {\n    this.base();\n\n    this._interface.isLocal   = 'model';\n    this._interface.dataFile  = 'model';\n    this._interface.indexFile = 'model';\n    this._interface.largeFile = 'model';\n  }\n});\n","Genoverse.Track.File.BAM = Genoverse.Track.File.extend({\n  name      : 'BAM',\n  indexExt  : '.bai',\n  threshold : 100000,\n  largeFile : true,\n  model     : Genoverse.Track.Model.File.BAM,\n  view      : Genoverse.Track.View.Sequence.extend({\n    bump       : true,\n    autoHeight : true\n  }),\n\n  click: function () {\n    var menu = this.base.apply(this, arguments);\n\n    if (menu) {\n      menu.addClass('gv-wrap-values');\n    }\n\n    return menu;\n  },\n\n  populateMenu: function (feature) {\n    var f = $.extend({ title: feature.readName }, feature);\n\n    delete f.sequence;\n    delete f.id;\n\n    return this.base(f);\n  }\n});\n","Genoverse.Track.File.BED = Genoverse.Track.File.extend({\n  name                : 'BED',\n  model               : Genoverse.Track.Model.File.BED,\n  bump                : true,\n  featureHeight       : 10,\n  thickHeight         : 10,\n  thinHeight          : 7,\n  subFeatureJoinStyle : 'curve',\n\n  populateMenu: function (feature) {\n    var fields = [ false, false, false, 'name', 'score', 'strand', 'thickStart', 'thickEnd', 'itemRgb', 'blockCount', 'blockSizes', 'blockStarts' ]; // First three fields are chr, start, end which are covered by Location\n\n    return feature.originalFeature.reduce(function (menu, val, i) {\n      if (fields[i]) {\n        menu[fields[i]] = val;\n      }\n\n      return menu;\n    }, {\n      title    : '<a target=\"_blank\" href=\"https://genome.ucsc.edu/FAQ/FAQformat.html#format1\">BED feature details</a>',\n      Location : feature.chr + ':' + feature.start + '-' + feature.end\n    });\n  }\n});\n","Genoverse.Track.File.BIGBED = Genoverse.Track.File.BED.extend({\n  name  : 'bigbed',\n  model : Genoverse.Track.Model.File.BED.extend({\n    getData: function (chr, start, end) {\n      var model    = this;\n      var deferred = $.Deferred();\n\n      if (!this.bigbedFile) {\n        this.bigbedFile = this.bigbedFile || (this.url ? new dallianceLib.URLFetchable(this.url) : new dallianceLib.BlobFetchable(this.track.dataFile));\n      }\n\n      var d = $.Deferred().done(function () {\n        model.bwReader.getValues(chr, start, end, function (features, error) {\n          if (!error) {\n            features.sort(function (a, b) { return a.start - b.start; });\n\n            if (features.length) {\n              model.receiveData(features, chr, features[0].start, features[features.length - 1].end);\n            } else {\n              model.receiveData(features, chr, start, end);\n            }\n          }\n\n          deferred.resolveWith(model);\n        });\n      });\n\n      if (this.bwReader) {\n        d.resolve();\n      } else {\n        new BWReader(this.bigbedFile, function (bwReader) {\n          if (bwReader) {\n            model.bwReader = bwReader;\n            d.resolve();\n          } else {\n            model.receiveData([], chr, start, end);\n            return deferred.resolveWith(model);\n          }\n        });\n      }\n\n      return deferred;\n    }\n  })\n});\n\nGenoverse.Track.File.BB = Genoverse.Track.File.BIGBED;\n","Genoverse.Track.File.BIGWIG = Genoverse.Track.Graph.Bar.extend({\n  name   : 'bigwig',\n  height : 100,\n\n  setDefaults: function () {\n    this.bwReader = null; // Not part of model since it needs to be shared between bar and line graphs\n    this.base.apply(this, arguments);\n  },\n\n  getData: function (chr, start, end) {\n    var model    = this;\n    var deferred = $.Deferred();\n\n    if (!this.bigwigFile) {\n      this.bigwigFile = this.bigwigFile || (this.url ? new dallianceLib.URLFetchable(this.url) : new dallianceLib.BlobFetchable(this.track.dataFile));\n    }\n\n    var d = $.Deferred().done(function () {\n      model.prop('bwReader').getValues(chr, start, end, function (features, error) {\n        if (!error) {\n          features.sort(function (a, b) { return a.start - b.start; });\n\n          if (features.length) {\n            model.receiveData(features, chr, features[0].start, features[features.length - 1].end);\n          } else {\n            model.receiveData(features, chr, start, end);\n          }\n        }\n\n        deferred.resolveWith(model);\n      });\n    });\n\n    if (this.prop('bwReader')) {\n      d.resolve();\n    } else {\n      new BWReader(this.bigwigFile, function (bwReader) {\n        if (bwReader) {\n          model.prop('bwReader', bwReader);\n          d.resolve();\n        } else {\n          model.receiveData([], chr, start, end);\n          return deferred.resolveWith(model);\n        }\n      });\n    }\n\n    return deferred;\n  }\n});\n\nGenoverse.Track.File.BW = Genoverse.Track.File.BIGWIG;\n","Genoverse.Track.File.GFF = Genoverse.Track.File.extend({\n  name          : 'GFF',\n  model         : Genoverse.Track.Model.File.GFF,\n  bump          : true,\n  height        : 100,\n  featureHeight : 5\n});\n\nGenoverse.Track.File.GTF = Genoverse.Track.File.GFF;","Genoverse.Track.File.VCF = Genoverse.Track.File.extend({\n  name       : 'VCF',\n  indexExt   : '.tbi',\n  model      : Genoverse.Track.Model.File.VCF,\n  autoHeight : false,\n  maxQual    : undefined, // Set this to the maximum value of the QUAL field in the file in order to color features by QUAL. Only required for large (tabix indexed) files - small ones can calculate this value automatically\n\n  afterSetMVC: function () {\n    if (this.prop('gz')) {\n      this.prop('threshold', 1e5);\n    }\n  },\n\n  populateMenu: function (feature) {\n    return {\n      title  : '<a target=\"_blank\" href=\"http://www.1000genomes.org/node/101\">VCF feature details</a>',\n      CHROM  : feature.originalFeature[0],\n      POS    : feature.originalFeature[1],\n      ID     : feature.originalFeature[2],\n      REF    : feature.originalFeature[3],\n      ALT    : feature.originalFeature[4],\n      QUAL   : feature.originalFeature[5],\n      FILTER : feature.originalFeature[6],\n      INFO   : feature.originalFeature[7].split(';').join('<br />')\n    };\n  },\n\n  1: {\n    view: Genoverse.Track.View.Sequence.extend({\n      bump          : true,\n      labels        : false,\n      featureMargin : { top: 0, right: 0, bottom: 0, left: 0 },\n\n      draw: function (features, featureContext, labelContext, scale) {\n        this.base.apply(this, arguments);\n        this.highlightRef(features, featureContext, scale);\n      },\n\n      highlightRef: function (features, context, scale) {\n        context.strokeStyle = 'black';\n\n        for (var i = 0; i < features.length; i++) {\n          if (features[i].allele === 'REF') {\n            context.strokeRect(features[i].position[scale].X, features[i].position[scale].Y, features[i].position[scale].width, features[i].position[scale].height);\n          }\n        }\n      }\n    })\n  },\n\n  1000: {\n    view: Genoverse.Track.View.extend({\n      bump   : false,\n      labels : false,\n\n      drawFeature: function (feature) {\n        var maxQual = this.prop('maxQual');\n\n        if (maxQual && !feature.color) {\n          var heat  = Math.min(255, Math.floor(255 * (feature.originalFeature[5] || 0) / maxQual)) - 127;\n          var red   = heat > 0 ? 255 : 127 + heat;\n          var green = heat < 0 ? 255 : 127 - heat;\n\n          feature.color = 'rgb(' + red + ',' + green + ',0)';\n        }\n\n        this.base.apply(this, arguments);\n      }\n    })\n  }\n});\n","Genoverse.Track.File.WIG = Genoverse.Track.Graph.Bar.extend({\n  model  : Genoverse.Track.Model.File.WIG,\n  name   : 'wig',\n  height : 100\n});\n","Genoverse.Track.Gene = Genoverse.Track.extend({\n  id     : 'genes',\n  name   : 'Genes',\n  height : 200,\n  legend : true,\n\n  populateMenu: function (feature) {\n    var url  = 'http://www.ensembl.org/Homo_sapiens/' + (feature.feature_type === 'transcript' ? 'Transcript' : 'Gene') + '/Summary?' + (feature.feature_type === 'transcript' ? 't' : 'g') + '=' + feature.id;\n    var menu = {\n      title    : '<a target=\"_blank\" href=\"' + url + '\">' + (feature.external_name ? feature.external_name + ' (' + feature.id + ')' : feature.id) + '</a>',\n      Location : feature.chr + ':' + feature.start + '-' + feature.end,\n      Source   : feature.source,\n      Biotype  : feature.biotype\n    };\n\n    if (feature.feature_type === 'transcript') {\n      menu.Gene = '<a target=\"_blank\" href=\"http://www.ensembl.org/Homo_sapiens/Gene/Summary?g=' + feature.Parent + '\">' + feature.Parent + '</a>';\n    }\n\n    return menu;\n  },\n\n  // Different settings for different zoom level\n  2000000: { // This one applies when > 2M base-pairs per screen\n    labels : false\n  },\n  100000: { // more than 100K but less then 2M\n    labels : true,\n    model  : Genoverse.Track.Model.Gene.Ensembl,\n    view   : Genoverse.Track.View.Gene.Ensembl\n  },\n  1: { // > 1 base-pair, but less then 100K\n    labels : true,\n    model  : Genoverse.Track.Model.Transcript.Ensembl,\n    view   : Genoverse.Track.View.Transcript.Ensembl\n  }\n});\n","Genoverse.Track.HighlightRegion = Genoverse.Track.extend({\n  id               : 'highlights',\n  unsortable       : true,\n  fixedOrder       : true,\n  repeatLabels     : true,\n  resizable        : false,\n  border           : false,\n  alwaysReposition : true,\n  height           : 15,\n  featureHeight    : 2,\n  order            : -1,\n  orderReverse     : 9e99,\n  controls         : 'off',\n  colors           : [ '#777777', '#F08080', '#3CB371', '#6495ED', '#FFA500', '#9370DB' ],\n  labels           : 'separate',\n  depth            : 1,\n  featureMargin    : { top: 13, right: 0, bottom: 0, left: 0 },\n  margin           : 0,\n\n  constructor: function () {\n    this.colorIndex = 0;\n    return this.base.apply(this, arguments);\n  },\n\n  addHighlights: function (highlights) {\n    for (var i = 0; i < highlights.length; i++) {\n      this.model.insertFeature($.extend({ label: (highlights[i].start + '-' + highlights[i].end) }, highlights[i]));\n    }\n\n    this.reset();\n  },\n\n  removeHighlights: function (highlights) {\n    var featuresByChr = this.prop('featuresByChr');\n    var featuresById  = this.prop('featuresById');\n    var features, bounds, h;\n\n    highlights = highlights || $.map(featuresById, function (f) { return f; });\n\n    for (var i = 0; i < highlights.length; i++) {\n      if (highlights[i].removable === false) {\n        continue;\n      }\n\n      features = featuresByChr[highlights[i].chr];\n      bounds   = { x: highlights[i].start, y: 0, w: highlights[i].end - highlights[i].start + 1, h: 1 };\n\n      // RTree.remove only works if the second argument (the object to be removed) === the object found in the tree.\n      // Here, while highlight is effectively the same object as the one in the tree, it has been cloned, so the === check fails.\n      // To fix this, search for the feature to remove in the location of highlight.\n      h = $.grep(features.search(bounds), function (item) { return item.id === highlights[i].id; });\n\n      if (h.length) {\n        features.remove(bounds, h[0]);\n      }\n\n      delete featuresById[highlights[i].id];\n    }\n\n    if (this.prop('strand') === 1) {\n      this.prop('reverseTrack').removeHighlights(highlights);\n    }\n\n    this.reset();\n  },\n\n  controller: Genoverse.Track.Controller.Stranded.extend({\n    setDefaults: function () {\n      if (this.prop('strand') === -1) {\n        this.prop('labels', false);\n        this.prop('border', false);\n        this.prop('height', 2);\n        this.prop('featureMargin').top = 0;\n      }\n\n      this.base();\n    },\n\n    setName: function (name) {\n      if (this.prop('strand') === -1) {\n        this.base('');\n        this.minLabelHeight = 0;\n        this.label.height(0);\n      } else {\n        this.base(name);\n      }\n    },\n\n    makeImage: function (params) {\n      if (this.prop('strand') === 1) {\n        params.background = 'gv-full-height';\n      }\n\n      var rtn = this.base(params);\n      params.container.addClass(params.background);\n      return rtn;\n    },\n\n    render: function (features, img) {\n      this.base(features, img);\n      img.siblings('.gv-labels').css('top', this.prop('featureHeight') - this.prop('featureMargin').top);\n    },\n\n    renderBackground: function (f, img) {\n      this.base(f, img);\n      img.height(this.browser.wrapper.outerHeight(true));\n    },\n\n    populateMenu: function (features) {\n      var menu = [];\n      var location, m;\n\n      if (features.length > 1) {\n        menu.push({ title: 'Highlights' });\n      }\n\n      for (var i = 0; i < features.length; i++) {\n        location = features[i].start + '-' + features[i].end;\n        m        = {\n          title: features[i].label ? features[i].label[0] : location,\n          start: false\n        };\n\n        m[m.title === location ? 'title' : 'Location'] = features[i].chr + ':' + location;\n        m['<a class=\"gv-focus-highlight\" href=\"#\" data-chr=\"' + features[i].chr + '\" data-start=\"' + features[i].start + '\" data-end=\"' + features[i].end + '\">Focus here</a>'] = '';\n\n        if (features[i].removable !== false) {\n          m['<a class=\"gv-remove-highlight\"  href=\"#\" data-id=\"' + features[i].id + '\">Remove this highlight</a>'] = '';\n          m['<a class=\"gv-remove-highlights\" href=\"#\">Remove all highlights</a>'] = '';\n        }\n\n        menu.push(m);\n      }\n\n      return menu;\n    },\n\n    click: function () {\n      if (this.prop('strand') !== 1) {\n        return;\n      }\n\n      var menuEl = this.base.apply(this, arguments);\n\n      if (menuEl && !menuEl.data('highlightEvents')) {\n        var track = this.track;\n\n        menuEl.find('.gv-remove-highlight').on('click', function () {\n          var id = $(this).data('id');\n          track.removeHighlights($.grep(menuEl.data('feature'), function (f) { return f.id === id; }));\n          return false;\n        });\n\n        menuEl.find('.gv-remove-highlights').on('click', function () {\n          track.removeHighlights();\n          return false;\n        });\n\n        menuEl.find('.gv-focus-highlight').on('click', function () {\n          var data    = $(this).data();\n          var length  = data.end - data.start + 1;\n          var context = Math.max(Math.round(length / 4), 25);\n\n          track.browser.moveTo(data.chr, data.start - context, data.end + context, true);\n\n          return false;\n        });\n\n        menuEl.data('highlightEvents', true);\n      }\n    },\n\n    getClickedFeatures: function (x, y, target) {\n      var seen     = {};\n      var scale    = this.scale;\n      var features = $.grep(\n        // feature positions\n        this.featurePositions.search({ x: x, y: y, w: 1, h: 1 }).concat(\n          // plus label positions where the labels are visible\n          $.grep(this.labelPositions.search({ x: x, y: y, w: 1, h: 1 }), function (f) {\n            return f.position[scale].label.visible !== false;\n          })\n        ), function (f) {\n        // with duplicates removed\n        var rtn = !seen[f.id];\n        seen[f.id] = true;\n        return rtn;\n      });\n\n      return features.length ? [ this.model.sortFeatures(features) ] : false;\n    }\n  }),\n\n  model: Genoverse.Track.Model.Stranded.extend({\n    url: false,\n\n    insertFeature: function (feature) {\n      feature.id   = feature.chr + ':' + feature.start + '-' + feature.end;\n      feature.sort = feature.start;\n\n      if (!feature.color) {\n        var colors = this.prop('colors');\n        var i      = this.prop('colorIndex');\n\n        feature.color = colors[i++];\n\n        this.prop('colorIndex', colors[i] ? i : 0);\n      }\n\n      if (!this.featuresById[feature.id]) {\n        this.base(feature);\n      }\n    },\n\n    findFeatures: function () {\n      return Genoverse.Track.Model.prototype.findFeatures.apply(this, arguments);\n    }\n  }),\n\n  view: Genoverse.Track.View.extend({\n    positionFeatures: function (features, params) {\n      var rtn = this.base.apply(this, arguments);\n\n      // featureMargin.top gets used to define params.featureHeight, which is used to determine canvas height.\n      // Since featureMargin.top = 13 on forward strand, the canvas has a 13px space at the bottom, meaning there is a gap before the background starts.\n      // Reducing params.featureHeight here fixes that.\n      params.featureHeight = Math.max(params.featureHeight - this.featureMargin.top, 0);\n\n      return rtn;\n    },\n\n    draw: function (features, featureContext, labelContext, scale) {\n      if (this.prop('strand') === 1) {\n        featureContext.fillStyle = '#FFF';\n        featureContext.fillRect(0, 0, featureContext.canvas.width, featureContext.canvas.height);\n      }\n\n      this.base(features, featureContext, labelContext, scale);\n    },\n\n    drawBackground: function (features, context, params) {\n      if (this.prop('strand') === -1) {\n        return;\n      }\n\n      for (var i = 0; i < features.length; i++) {\n        context.fillStyle = features[i].color;\n\n        this.drawFeature($.extend(true, {}, features[i], {\n          x           : features[i].position[params.scale].X,\n          y           : 0,\n          width       : features[i].position[params.scale].width,\n          height      : context.canvas.height,\n          color       : this.shadeColor(context.fillStyle, 0.8),\n          border      : features[i].color,\n          label       : false,\n          decorations : true\n        }), context, false, params.scale);\n      }\n    },\n\n    decorateFeature: function (feature, context, scale) {\n      var x1   = feature.x + 0.5;\n      var x2   = x1 + feature.width;\n      var draw = false;\n\n      context.strokeStyle = feature.border;\n      context.lineWidth   = 2;\n      context.beginPath();\n\n      if (x1 >= 0 && x1 <= this.width) {\n        context.moveTo(x1, feature.y);\n        context.lineTo(x1, feature.y + feature.height);\n        draw = true;\n      }\n\n      if (x2 >= 0 && x2 <= this.width) {\n        context.moveTo(x2, feature.y);\n        context.lineTo(x2, feature.y + feature.height);\n        draw = true;\n      }\n\n      if (draw) {\n        context.stroke();\n      }\n\n      context.lineWidth = 1;\n    }\n  })\n});\n","Genoverse.Track.Controller.Legend = Genoverse.Track.Controller.Static.extend({\n  init: function () {\n    this.base();\n\n    this.container.addClass('gv-track-container-legend');\n\n    this.browser.legends[this.track.id] = this.track;\n\n    this.track.setTracks();\n  },\n\n  destroy: function () {\n    delete this.browser.legends[this.prop('id')];\n    this.base();\n  }\n});\n\nGenoverse.Track.Model.Legend = Genoverse.Track.Model.Static.extend({\n  findFeatures: function () {\n    var bounds   = { x: this.browser.scaledStart, y: 0, w: this.width };\n    var features = {};\n\n    $.each($.map(this.track.tracks, function (track) {\n      var featurePositions = track.prop('featurePositions');\n      bounds.h = track.prop('height');\n      return featurePositions ? featurePositions.search(bounds).concat(track.prop('labelPositions').search(bounds)) : [];\n    }), function () {\n      if (this.legend) {\n        features[this.legend] = this.legendColor || this.color;\n      }\n    });\n\n    return this.sortFeatures($.map(features, function (color, text) { return [[ text, color ]]; }));\n  },\n\n  sortFeatures: function (features) {\n    // sort legend alphabetically\n    return features.sort(function (a, b) {\n      var x = a[0].toLowerCase();\n      var y = b[0].toLowerCase();\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n});\n\nGenoverse.Track.View.Legend = Genoverse.Track.View.Static.extend({\n  textColor     : '#000000',\n  labels        : 'overlay',\n  featureHeight : 12,\n\n  positionFeatures: function (f, params) {\n    if (params.positioned) {\n      return f;\n    }\n\n    var cols     = 2;\n    var pad      = 5;\n    var w        = 20;\n    var x        = 0;\n    var y        = 0;\n    var xScale   = this.width / cols;\n    var yScale   = this.fontHeight + pad;\n    var features = [];\n    var xOffest  = params.xOffset || 0;\n    var xPos, yPos, labelWidth;\n\n    for (var i = 0; i < f.length; i++) {\n      xPos       = (x * xScale) + pad;\n      yPos       = (y * yScale) + pad;\n      labelWidth = this.context.measureText(f[i][0]).width;\n\n      features.push(\n        { x: xPos + xOffest,           y: yPos, width: w,              height: this.featureHeight, color: f[i][1] },\n        { x: xPos + xOffest + pad + w, y: yPos, width: labelWidth + 1, height: this.featureHeight, color: false, labelColor: this.textColor, labelWidth: labelWidth, label: f[i][0] }\n      );\n\n      if (++x === cols) {\n        x = 0;\n        y++;\n      }\n    }\n\n    params.height     = this.prop('height', f.length ? ((y + (x ? 1 : 0)) * yScale) + pad : 0);\n    params.width      = this.width;\n    params.positioned = true;\n\n    return this.base(features, params);\n  }\n});\n\nGenoverse.Track.Legend = Genoverse.Track.Static.extend({\n  unsortable  : true,\n  lockToTrack : true, // Always put the legend just below the last track that the legend is for\n  removable   : false,\n\n  controller : Genoverse.Track.Controller.Legend,\n  model      : Genoverse.Track.Model.Legend,\n  view       : Genoverse.Track.View.Legend,\n\n  setDefaults: function () {\n    this.order = typeof this.order !== 'undefined' ? this.order : 9e99;\n    this.id    = this.id   || 'legend';\n    this.type  = this.type || 'legend';\n    this.base();\n  },\n\n  setEvents: function () {\n    this.browser.on({\n      'afterAddTracks afterRemoveTracks': function (tracks) {\n        for (var i in this.legends) {\n          this.legends[i].setTracks();\n        }\n\n        this.sortTracks();\n      },\n      afterRemoveTracks: function (tracks) {\n        for (var i in tracks) {\n          if (tracks[i].legendTrack && tracks[i].legendTrack.tracks.length === 0) {\n            tracks[i].legendTrack.remove();\n          }\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].controller.makeImage({});\n        }\n      },\n      afterUpdateTrackOrder: function (e, ui) {\n        var track       = ui.item.data('track');\n        var legendTrack = this.legends[track.id] || track.legendTrack;\n\n        // If a legend track, or a track with a sortable legend has been reordered, its lockToTrack status is ignored from now on.\n        // This allows a legend to initially be locked to a track, but then to be reordered once the browser has been initialized\n        if (legendTrack && legendTrack.lockToTrack && legendTrack.unsortable === false) {\n          legendTrack.lockToTrack = false;\n        }\n\n        for (var i in this.legends) {\n          this.legends[i].updateOrder();\n        }\n\n        this.sortTracks();\n      }\n    });\n\n    this.browser.on({\n      afterPositionFeatures: function (features, params) {\n        var legend = this.prop('legendTrack');\n\n        if (legend) {\n          setTimeout(function () { legend.controller.makeImage(params); }, 1);\n        }\n      },\n      afterResize: function (height, userResize) {\n        var legend = this.prop('legendTrack');\n\n        if (legend && userResize === true) {\n          legend.controller.makeImage({});\n        }\n      },\n      afterCheckHeight: function () {\n        var legend = this.prop('legendTrack');\n\n        if (legend) {\n          legend.controller.makeImage({});\n        }\n      },\n      afterSetMVC: function () {\n        var legend = this.prop('legendTrack');\n\n        if (legend && legend.tracks.length) {\n          legend.disable();\n\n          if (this.legend !== false) {\n            legend.enable();\n          }\n        }\n      }\n    }, this);\n  },\n\n  setTracks: function () {\n    var legend = this;\n    var type   = this.type;\n\n    this.tracks = $.map(this.browser.tracks.filter(function (t) {\n      if (t.legendType === type) {\n        t.legendTrack = t.legendTrack || legend;\n        return true;\n      }\n    }), function (track) {\n      return [ track ].concat(track.prop('childTracks'), track.prop('parentTrack')).filter(function (t) { return t && t !== legend && !t.prop('disabled'); })\n    });\n\n    this.updateOrder();\n\n    if (typeof this.controller === 'object') {\n      this[this.tracks.length ? 'enable' : 'disable']();\n    } else {\n      this.disabled = !this.tracks.length;\n    }\n  },\n\n  updateOrder: function () {\n    if (this.lockToTrack) {\n      var tracks = this.tracks.filter(function (t) { return !t.prop('parentTrack'); });\n\n      if (tracks.length) {\n        this.order = tracks[tracks.length - 1].order + 0.1;\n      }\n    }\n  },\n\n  enable: function () {\n    this.base();\n    this.controller.makeImage({});\n  },\n\n  disable: function () {\n    delete this.controller.stringified;\n    this.base();\n  }\n});\n","Genoverse.Track.Scaleline = Genoverse.Track.Static.extend({\n  strand     : 1,\n  color      : '#000000',\n  height     : 12,\n  labels     : 'overlay',\n  unsortable : true,\n  fixedOrder : true,\n\n  resize: $.noop,\n\n  makeFirstImage: function () {\n    this.prop('scaleline', false);\n    this.base.apply(this, arguments);\n  },\n\n  render: function (f, img) {\n    this.base(f, img);\n    this.prop('drawnScale', img.data('scale'));\n  },\n\n  positionFeatures: function (features, params) {\n    var scaleline = this.prop('scaleline');\n\n    if (params.scale === this.drawnScale) {\n      return false;\n    } else if (scaleline) {\n      return scaleline;\n    }\n\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var text   = this.formatLabel(this.browser.length);\n    var text2  = strand === 1 ? 'Forward strand' : 'Reverse strand';\n    var width1 = this.context.measureText(text).width;\n    var width2 = this.context.measureText(text2).width;\n    var x1, x2;\n\n    if (strand === 1) {\n      x1 = 0;\n      x2 = this.width - width2 - 40;\n    } else {\n      x1 = 25;\n      x2 = 30;\n    }\n\n    scaleline = [\n      { x: x1,                             y: height / 2, width: this.width - 25, height: 1, decorations: true },\n      { x: (this.width - width1 - 10) / 2, y: 0,          width: width1 + 10,     height: height, clear: true, color: false, labelColor: this.color, labelWidth: width1, label: text  },\n      { x: x2,                             y: 0,          width: width2 + 10,     height: height, clear: true, color: false, labelColor: this.color, labelWidth: width2, label: text2 }\n    ];\n\n    return this.base(this.prop('scaleline', scaleline), params);\n  },\n\n  decorateFeature: function (feature, context) {\n    var strand = this.prop('strand');\n    var height = this.prop('height');\n    var x      = strand === 1 ? this.width - 25 : 25;\n\n    context.strokeStyle = this.color;\n\n    context.beginPath();\n    context.moveTo(x,                 height * 0.25);\n    context.lineTo(x + (strand * 20), height * 0.5);\n    context.lineTo(x,                 height * 0.75);\n    context.closePath();\n    context.stroke();\n    context.fill();\n  }\n});","Genoverse.Track.Scalebar = Genoverse.Track.extend({\n  unsortable     : true,\n  fixedOrder     : true,\n  order          : 0,\n  orderReverse   : 1e5,\n  featureStrand  : 1,\n  controls       : 'off',\n  height         : 20,\n  featureHeight  : 3,\n  featureMargin  : { top: 0, right: 0, bottom: 2, left: 0 },\n  margin         : 0,\n  minPixPerMajor : 100, // Least number of pixels per written number\n  color          : '#000000',\n  autoHeight     : false,\n  labels         : true,\n  bump           : false,\n  resizable      : false,\n  click          : $.noop,\n  colors         : {\n    majorGuideLine : '#CCCCCC',\n    minorGuideLine : '#E5E5E5'\n  },\n\n  setEvents: function () {\n    var browser = this.browser;\n\n    function resize() {\n      $('.gv-bg.gv-full-height', browser.container).height(function () {\n        return browser.wrapper.outerHeight(true) - $(this).parents('.gv-track-container').position().top;\n      });\n    }\n\n    browser.on('afterAddTracks', resize);\n    browser.on('afterResize', this, resize);\n  },\n\n  setScale: function () {\n    var max       = this.prop('width') / this.prop('minPixPerMajor');\n    var divisor   = 5;\n    var majorUnit = -1;\n    var fromDigit = ('' + this.browser.start).split(''); // Split into array of digits\n    var toDigit   = ('' + this.browser.end).split('');\n    var features  = {};\n    var divisions, i;\n\n    for (i = fromDigit.length; i < toDigit.length; i++) {\n      fromDigit.unshift('0');\n    }\n\n    for (i = toDigit.length; i < fromDigit.length; i++) {\n      toDigit.unshift('0');\n    }\n\n    // How many divisions would there be if we only kept i digits?\n    for (i = 0; i < fromDigit.length; i++) {\n      divisions = parseInt(toDigit.slice(0, fromDigit.length - i).join(''), 10) - parseInt(fromDigit.slice(0, fromDigit.length - i).join(''), 10);\n\n      if (divisions && divisions <= max) {\n        majorUnit = parseInt('1' + $.map(new Array(i), function () { return '0'; }).join(''), 10);\n        break;\n      }\n    }\n\n    if (majorUnit === -1) {\n      majorUnit = this.browser.length === 1 ? 1 : parseInt('1' + $.map(new Array(fromDigit.length), function () { return '0'; }).join(''), 10);\n      divisor   = 1;\n    } else {\n      // Improve things by trying simple multiples of 1<n zeroes>.\n      // (eg if 100 will fit will 200, 400, 500).\n      if (divisions * 5 <= max) {\n        majorUnit /= 5;\n        divisor    = 2;\n      } else if (divisions * 4 <= max) {\n        majorUnit /= 4;\n        divisor    = 1;\n      } else if (divisions * 2 <= max) {\n        majorUnit /= 2;\n      }\n    }\n\n    majorUnit = Math.max(majorUnit, 1);\n\n    features[this.browser.chr] = new RTree();\n\n    this.prop('minorUnit',     Math.max(majorUnit / divisor, 1));\n    this.prop('majorUnit',     majorUnit);\n    this.prop('featuresByChr', features);\n    this.prop('featuresById',  {});\n    this.prop('seen',          {});\n\n    this.base();\n  },\n\n  setFeatures: function (chr, start, end) {\n    var minorUnit = this.prop('minorUnit');\n    var majorUnit = this.prop('majorUnit');\n    var seen      = this.prop('seen');\n\n    start = Math.max(start - (start % minorUnit) - majorUnit, 0);\n\n    var flip = (start / minorUnit) % 2 ? 1 : -1;\n    var feature, major, label;\n\n    for (var x = start; x < end + minorUnit; x += minorUnit) {\n      flip *= -1;\n\n      if (seen[x]) {\n        continue;\n      }\n\n      seen[x] = 1;\n\n      feature = { id: chr + ':' + x, chr: chr, strand: 1, sort: x };\n      major   = x && x % majorUnit === 0;\n\n      if (flip === 1) {\n        feature.start = x;\n        feature.end   = x + minorUnit - 1;\n      }\n\n      if (major) {\n        label = this.view.formatLabel(x);\n\n        if (label !== this.lastLabel) {\n          feature.label = label;\n\n          if (!feature.end) {\n            feature.start = x;\n            feature.end   = x - 1;\n          }\n        }\n\n        this.lastLabel = label;\n      }\n\n      if (feature.end) {\n        this.model.insertFeature(feature);\n      }\n    }\n  },\n\n  makeFirstImage: function (moveTo) {\n    if (this.prop('strand') === -1) {\n      moveTo = this.track.forwardTrack.prop('scrollStart');\n    }\n\n    return this.base(moveTo);\n  },\n\n  makeImage: function (params) {\n    params.background    = 'gv-guidelines gv-full-height';\n    params.featureHeight = this.prop('height');\n\n    this.track.setFeatures(params.chr, params.start, params.end);\n\n    var rtn = this.base(params);\n\n    params.container.addClass('gv-full-height');\n\n    return rtn;\n  },\n\n  makeReverseImage: function (params) {\n    this.imgContainers.push(params.container.clone().html(params.container.children('.gv-data').clone(true).css({ opacity: 1, background: this.browser.wrapper.css('backgroundColor') }))[0]);\n    this.scrollContainer.append(this.imgContainers);\n  },\n\n  renderBackground: function (f, bgImage) {\n    this.base(f, bgImage);\n    bgImage.height(this.browser.wrapper.outerHeight(true));\n  },\n\n  draw: function (features, featureContext, labelContext, scale) {\n    var i         = features.length;\n    var minorUnit = this.prop('minorUnit');\n    var width     = Math.ceil(minorUnit * scale);\n    var feature, start, end;\n\n    featureContext.textBaseline = 'top';\n    featureContext.fillStyle    = this.color;\n\n    this.guideLines = { major: {} }; // FIXME: pass params to draw, rather than scale. set guideLines on params\n\n    while (i--) {\n      feature = features[i];\n      start   = Math.round(feature.position[scale].X);\n      end     = start + width - 1;\n\n      this.drawFeature($.extend({}, feature, {\n        x      : start,\n        y      : 0,\n        width  : Math.ceil(feature.position[scale].width),\n        height : this.featureHeight\n      }), featureContext, labelContext, scale);\n\n      if (feature.label) {\n        if (start > -1) {\n          featureContext.fillRect(start, this.featureHeight, 1, this.featureHeight);\n        }\n\n        this.guideLines.major[feature.start] = true;\n      }\n\n      // Fiddle the location so that these [additional major] lines overlap with normal lines\n      if (feature.end < feature.start) {\n        start--;\n        end++;\n      }\n\n      this.guideLines[feature.start]             = start;\n      this.guideLines[feature.start + minorUnit] = end;\n    }\n\n    featureContext.fillRect(0, 0, featureContext.canvas.width, 1);\n    featureContext.fillRect(0, this.featureHeight, featureContext.canvas.width, 1);\n  },\n\n  // Draw guidelines\n  drawBackground: function (f, context) {\n    for (var i in this.guideLines) {\n      if (this.guideLines[i] >= 0 && this.guideLines[i] <= this.width) {\n        context.fillStyle = this.track.colors[this.guideLines.major[i] ? 'majorGuideLine' : 'minorGuideLine' ];\n        context.fillRect(this.guideLines[i], 0, 1, context.canvas.height);\n      }\n    }\n  },\n\n  formatLabel: function (label) {\n    return this.prop('minorUnit') < 1000 ? label.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,') : this.base(label);\n  }\n});\n","Genoverse.Plugins.controlPanel = function () {\n  var genoverse = this;\n\n  this.controls = [\n    // Scroll left/right\n    {\n      name    : 'Scroll left and right by pressing and holding these buttons',\n      buttons : [{\n        name    : 'Scroll left',\n        icon    : '<i class=\"fa fa-chevron-left\"></i>',\n        'class' : 'gv-scroll-left'\n      }, {\n        name    : 'Scroll right',\n        icon    : '<i class=\"fa fa-chevron-right\"></i>',\n        'class' : 'gv-scroll-right'\n      }],\n      init: function (browser) {\n        var el = $(this);\n\n        el.find('.gv-scroll-left, .gv-scroll-right').on({\n          mousedown : function () { browser.startDragScroll(); },\n          mouseup   : function () { browser.stopDragScroll();  }\n        });\n\n        el.find('.gv-scroll-left').mousehold(50, function () {\n          browser.move(browser.scrollDelta);\n        });\n\n        el.find('.gv-scroll-right').mousehold(50, function () {\n          browser.move(-browser.scrollDelta);\n        });\n      }\n    },\n\n    // Zoom in/out\n    {\n      name    : 'Zoom-in and zoom-out',\n      buttons : [{\n        name    : 'Zoom in',\n        icon    : '<i class=\"fa fa-search-plus\"></i>',\n        'class' : 'gv-zoom-in',\n        action  : function (browser) { browser.zoomIn(); }\n      }, {\n        name    : 'Zoom out',\n        icon    : '<i class=\"fa fa-search-minus\"></i>',\n        'class' : 'gv-zoom-out',\n        action  : function (browser) { browser.zoomOut(); }\n      }]\n    },\n\n    // Toogle drag action\n    {\n      name    : 'Toggle your mouse drag action between scroll left/right and select region',\n      buttons : [{\n        name    : 'Mouse drag action to scroll the browser left or right',\n        icon    : '<i class=\"fa fa-arrows-h\"></i>',\n        'class' : 'gv-drag-scroll',\n        action  : function (browser) {\n          browser.setDragAction('scroll');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }, {\n        name    : 'Mouse drag action to select a region',\n        icon    : '<i></i>',\n        'class' : 'gv-drag-select',\n        action  : function (browser) {\n          browser.setDragAction('select');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }],\n      init: function (browser) {\n        $(this).find('.gv-drag-' + browser.dragAction).addClass('gv-active').siblings().removeClass('gv-active');\n      }\n    },\n\n    // Toogle wheel action\n    {\n      name    : 'Toggle your mouse wheel action between zoom in/out and default page scroll',\n      buttons : [{\n        name    : 'Mouse wheel action to scroll the page up and down',\n        icon    : '<i class=\"fa fa-arrows-v\"></i>',\n        'class' : 'gv-wheel-off',\n        action  : function (browser) {\n          browser.setWheelAction('off');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }, {\n        name    : 'Mouse wheel to zoom in and out',\n        icon    : '&#177;',\n        'class' : 'gv-wheel-zoom',\n        action  : function (browser) {\n          browser.setWheelAction('zoom');\n          $(this).addClass('gv-active').siblings().removeClass('gv-active');\n        }\n      }],\n      init: function (browser) {\n        $(this).find('.gv-wheel-' + browser.wheelAction).addClass('gv-active').siblings().removeClass('gv-active');\n      }\n    }\n  ];\n\n  if (this.saveable) {\n    this.controls.push({\n      icon   : '<i class=\"fa fa-undo\"></i>',\n      name   : 'Reset tracks and configuration',\n      action : function (browser) { browser.resetConfig(); }\n    });\n  }\n\n  this.on({\n    beforeInit: function () {\n      var browser = this;\n\n      if (!this.tracksLibrary) {\n        this.tracksLibrary = $.grep(this.tracks, function (track) { return track.prototype.name; });\n      }\n\n      var panel = $(\n        '<table cellspacing=0 cellpadding=0 class=\"gv\">' +\n        '  <tr>' +\n        '    <td class=\"gv-panel gv-panel-left\"></td>' +\n        '    <td class=\"gv-canvas-container\"></td>' +\n        '    <td class=\"gv-panel gv-panel-right\"></td>' +\n        '  </tr>' +\n        '</table>'\n      ).appendTo(this.container).find('.gv-panel-right');\n\n      this.controlPanel   = panel;\n      this.superContainer = this.container;\n      this.container      = $('.gv-canvas-container', this.container);\n\n      for (var i = 0; i < browser.controls.length; i++) {\n        (function (control) {\n          var buttonSet = $('<div class=\"gv-button-set\">').attr('title', control.name).appendTo(browser.superContainer.find('.gv-panel-right'));\n          var buttons   = control.buttons || [ control ];\n          var el;\n\n          $.each(buttons, function (i, button) {\n            var el = $('<button>' + button.icon + '</button>').addClass(button['class']).attr('title', button.name).appendTo(buttonSet);\n\n            if (button.action) {\n              el.on('click', function () {\n                button.action.call(this, browser);\n              });\n            }\n\n            if (button.init && button !== control) {\n              button.init.call(el[0], browser);\n            }\n          });\n\n          if (control.init) {\n            control.init.call(buttonSet, browser);\n          }\n        })(browser.controls[i]);\n      }\n\n      this.superContainer.width(this.width);\n\n      this.width -= panel.width();\n\n      // ESC key to toggle crosshair select to drag mode and close menus\n      $(document).on('keydown', function (e) {\n        if (e.keyCode === 27) {\n          if (panel.find('button.gv-drag-select').hasClass('gv-active')) {\n            panel.find('button.gv-drag-scroll').trigger('click');\n          }\n\n          $('.gv-menu .gv-close').trigger('click');\n        }\n      });\n    },\n\n    afterInit: function () {\n      var browser      = this;\n      var tracksButton = $('<button title=\"Tracks menu\"><i class=\"fa fa-navicon\"></i> Tracks</button>').on('click', function () {\n        var button = this;\n\n        function getTrackTags(track, tags) {\n          if (track.constructor && track.constructor.ancestor && track.constructor.ancestor.prototype) {\n            tags = getTrackTags(track.constructor.ancestor.prototype, tags.concat(track.constructor.ancestor.prototype.tags || []));\n          }\n\n          return tags;\n        }\n\n        if ($(this).hasClass('gv-active')) {\n          $('.gv-menu.gv-tracks-menu .gv-close').trigger('click');\n          $(this).removeClass('gv-active');\n        } else {\n          var menu = $(this).data('menu');\n\n          if (menu) {\n            menu.show();\n          } else {\n            menu = browser.makeMenu({\n              'Currently enabled tracks:'             : 'Available tracks:',\n              '<div class=\"gv-current-tracks\"></div>' : '<input placeholder=\"Search\"><div class=\"gv-available-tracks\"></div>'\n            }).addClass('gv-tracks-menu');\n\n            menu.css({ marginLeft: menu.width() / -2 });\n\n            $('input[placeholder=Search]', menu).on('keyup', function () {\n              var str = this.value.toLowerCase();\n\n              $('.gv-tracks-library-item', menu).each(function () {\n                var track = $(this).data('track');\n                var match = false;\n\n                if (track.name && track.name.toLowerCase().indexOf(str) >= 0) {\n                  match = true;\n                } else {\n                  var tags = getTrackTags(track, []).concat(track.tags || []);\n\n                  for (var i = 0; i < tags.length; i++) {\n                    if (tags[i].toLowerCase().indexOf(str) >= 0) {\n                      match = true;\n                      break;\n                    }\n                  }\n                }\n\n                $(this)[match ? 'show' : 'hide']();\n              });\n            });\n\n            $('.gv-close', menu).on('click', function () {\n              $(button).removeClass('gv-active');\n            });\n\n            var availableTracks = $('.gv-available-tracks', menu);\n            var currentTracks   = $('.gv-current-tracks',   menu).data({\n              reload     : function () { $(this).empty().data('listTracks')(); },\n              listTracks : function () {\n                for (var i = 0; i < browser.tracks.length; i++) {\n                  if (browser.tracks[i].name && browser.tracks[i].removable !== false && !browser.tracks[i].parentTrack) {\n                    (function (track) {\n                      $('<div>')\n                        .append($('<i class=\"gv-remove-track gv-menu-button fa fa-times-circle\">').on('click', function () { track.remove(); }))\n                        .append('<span>' + track.name + '</span>')\n                        .appendTo(currentTracks)\n                        .data('track', track)\n                        .addClass(track.unsortable ? 'gv-unsortable' : '');\n                    })(browser.tracks[i]);\n                  }\n                }\n              }\n            }).sortable({\n              items  : 'div:not(.gv-unsortable)',\n              cursor : 'move',\n              axis   : 'y',\n              handle : 'span',\n              update : $.proxy(browser.updateTrackOrder, browser)\n            });\n\n            currentTracks.data('listTracks')();\n\n            if (browser.tracksLibrary && browser.tracksLibrary.length) {\n              var tracksLibrary = $.map(browser.tracksLibrary, function (track) {\n                return track.prototype.name && track.prototype.removable !== false ? [[ track.prototype.name.toLowerCase(), track ]] : undefined;\n              }).sort(function (a, b) { return a[0] > b[0] ? 1 : -1; });\n\n              for (var i = 0; i < tracksLibrary.length; i++) {\n                (function (track) {\n                  $('<div class=\"gv-tracks-library-item\">').append(\n                    $('<i class=\"gv-add-track gv-menu-button fa fa-plus-circle\"> ').on('click', function () {\n                      var sortableTracks = browser.tracks.filter(function (t) { return !(t.fixedOrder || t.unsortable); });\n\n                      browser.trackIds = browser.trackIds || {};\n                      browser.trackIds[track.prototype.id] = browser.trackIds[track.prototype.id] || 1;\n\n                      browser.addTrack(track.extend({ id: track.prototype.id + (browser.tracksById[track.prototype.id] ? browser.trackIds[track.prototype.id]++ : '') }));\n                    })\n                  ).append('<span>' + track.prototype.name + '</span>').appendTo(availableTracks).data('track', track.prototype);\n                })(tracksLibrary[i][1]);\n              }\n            }\n\n            $(this).data('menu', menu);\n          }\n\n          $(this).addClass('gv-active');\n        }\n      });\n\n      this.labelContainer.prepend(\n        $('<li class=\"gv-unsortable\">').append(\n          $('<div class=\"gv-button-set\" title=\"Tracks menu\">').append(tracksButton)\n        )\n      );\n    },\n\n    afterAddDomElements: function () {\n      this.wrapper.after('<div class=\"gv-powered-by\">Powered by <a target=\"_blank\" href=\"http://genoverse.org\">Genoverse</a></div>');\n      this.superContainer.find('.gv-panel-left').append(this.labelContainer);\n    },\n\n    'afterAddTracks afterRemoveTracks': function () {\n      var currentTracks = this.superContainer.find('.gv-tracks-menu .gv-current-tracks');\n\n      if (currentTracks.length) {\n        currentTracks.data('reload').call(currentTracks);\n      }\n    }\n  });\n};\n\nGenoverse.Plugins.controlPanel.requires = 'karyotype';\n","Genoverse.Plugins.fileDrop = function () {\n  this.on('afterInit', function () {\n    var browser = this;\n    var wrapper = this.wrapper;\n\n    $(window).on('dragenter', function (e) {\n      var dataTransfer = e.originalEvent.dataTransfer;\n\n      if (dataTransfer && dataTransfer.types && (dataTransfer.types[0] === 'Files' || dataTransfer.types[1] === 'Files' || dataTransfer.types[2] === 'Files') && !$('.gv-file-drop-total-overlay').length) {\n        var fileDropDiv      = $('<div class=\"gv-file-drop\">').appendTo(wrapper);\n        var totalDropOverlay = $('<div class=\"gv-file-drop-total-overlay\">').prependTo('body');\n\n        var dragleave = function () {\n          fileDropDiv.remove();\n          totalDropOverlay.remove();\n        };\n\n        totalDropOverlay.on('dragenter', function (e) { e.preventDefault(); e.stopPropagation(); });\n        totalDropOverlay.on('dragover',  function (e) { e.preventDefault(); e.stopPropagation(); });\n        totalDropOverlay.on('dragleave', dragleave);\n        totalDropOverlay.on('drop', function (e) {\n          dragleave();\n          e.preventDefault();\n          e.stopPropagation();\n\n          // Sort in order to ensure that .bam files are before their .bam.bai files\n          var files = $.map(e.originalEvent.dataTransfer.files, function (f) { return f; }).sort(function (a, b) { return a.name < b.name ? -1 : 1 });\n\n          for (var i = 0; i < files.length; i++) {\n            var file  = files[i];\n            var parts = file.name.split('.').reverse();\n            var gz    = parts[0] === 'gz';\n            var ext   = parts[gz ? 1 : 0];\n            var track = Genoverse.Track.File[ext.toUpperCase()];\n            var indexFile;\n\n            if (typeof track === 'undefined') {\n              return;\n            }\n\n            if (track.prototype.indexExt && (files[i + 1] || {}).name === file.name + track.prototype.indexExt) {\n              indexFile = files[++i];\n            }\n\n            track = track.extend({\n              name      : file.name,\n              info      : 'Local file `' + file.name + '`, size: ' + file.size + ' bytes',\n              isLocal   : true,\n              dataFile  : file,\n              indexFile : indexFile,\n              gz        : gz\n            });\n\n            browser.addTrack(track, browser.tracks.length - 1);\n          }\n\n          return false;\n        });\n      }\n    });\n  });\n};\n","Genoverse.Plugins.focusRegion = function () {\n  this.controls.push({\n    icon    : '<i class=\"fa fa-map-marker\"></i>',\n    'class' : 'gv-button-large',\n    name    : 'Reset focus to ' + (this.focusRegion && this.focusRegion.name ? this.focusRegion.name : this.chr + ':' + this.start + '-' + this.end),\n    action  : function (browser) { browser.moveTo(browser.focusRegion.chr, browser.focusRegion.start, browser.focusRegion.end, true); },\n    init    : function (browser) { browser.focusRegion = browser.focusRegion || { chr: browser.chr, start: browser.start, end: browser.end }; }\n  });\n};\n\nGenoverse.Plugins.focusRegion.requires = 'controlPanel';\nGenoverse.Plugins.focusRegion.noCSS    = true;\n","Genoverse.Plugins.fullscreen = function () {\n  var browser     = this;\n  var supported   = true;\n  var eventName   = 'fullscreenchange';  // All the browsers have different names\n  var elemName    = 'fullscreenElement'; // ... even the capitalisation varies!\n  var requestName = 'requestFullscreen';\n  var cancelName  = 'exitFullscreen';\n\n  if (document.onmsfullscreenchange || document.onmsfullscreenchange === null) {\n    // We need the IE11 version of this to work; IE9-10 have the actions but not the events.\n    // The key must be present, i.e. value may be null but it must not return undefined\n    eventName   = 'MSFullscreenChange';\n    elemName    = 'msFullscreenElement';\n    cancelName  = 'msExitFullscreen';\n    requestName = 'msRequestFullscreen';\n  } else if (document.body.mozRequestFullScreen) {\n    eventName   = 'mozfullscreenchange';\n    elemName    = 'mozFullScreenElement';\n    cancelName  = 'mozCancelFullScreen';\n    requestName = 'mozRequestFullScreen';\n  } else if (document.body.webkitRequestFullscreen) {\n    eventName   = 'webkitfullscreenchange';\n    elemName    = 'webkitFullscreenElement';\n    cancelName  = 'webkitCancelFullScreen';\n    requestName = 'webkitRequestFullscreen';\n  } else if (!document.onfullscreenchange) {\n    supported = false;\n  }\n\n  browser.fullscreenVars = {\n    eventName   : eventName,\n    elemName    : elemName,\n    cancelName  : cancelName,\n    requestName : requestName,\n\n    enterEvent: function (browser) {\n      browser.preFullscreenWidth = browser.superContainer.width();\n      browser.superContainer.addClass('gv-fullscreen');\n      browser.setWidth(window.innerWidth);\n      browser.controlPanel.find('.gv-fullscreen-button .fa').removeClass('fa-expand').addClass('fa-compress');\n    },\n\n    exitEvent: function (browser) {\n      if (browser.superContainer.hasClass('gv-fullscreen')) {\n        browser.superContainer.removeClass('gv-fullscreen');\n        browser.setWidth(browser.preFullscreenWidth);\n        browser.controlPanel.find('.gv-fullscreen-button .fa').removeClass('fa-compress').addClass('fa-expand');\n      }\n    },\n\n    eventListener: function () {\n      if (!browser.superContainer.is(document[browser.fullscreenVars.elemName])) {\n        browser.fullscreenVars.exitEvent(browser);\n        document.removeEventListener(browser.fullscreenVars.eventName, browser.fullscreenVars.eventListener);\n      }\n    }\n  };\n\n  if (supported) {\n    browser.controls.push({\n      icon    : '<i class=\"fa fa-expand\"></i>',\n      'class' : 'gv-fullscreen-button',\n      name    : 'Toggle fullscreen view',\n      action  : function (browser) {\n        if (browser.superContainer.hasClass('gv-fullscreen')) {\n          document[browser.fullscreenVars.cancelName]();\n        } else {\n          document.addEventListener(browser.fullscreenVars.eventName, browser.fullscreenVars.eventListener);\n          browser.superContainer[0][browser.fullscreenVars.requestName]();\n          browser.fullscreenVars.enterEvent(browser);\n        }\n      }\n    });\n  }\n};\n\nGenoverse.Plugins.fullscreen.requires = 'controlPanel';\n","Genoverse.Plugins.karyotype = function () {\n  function createKaryotype() {\n    var chromosome = $('<div class=\"gv-chromosome\">');\n    var container  = $('<div class=\"gv-karyotype-container\">').html(chromosome).insertBefore(this.wrapper);\n\n    this.karyotype = new Genoverse({\n      parent    : this,\n      container : chromosome,\n      width     : chromosome.width(),\n      genome    : this.genome,\n      chr       : this.chr,\n      start     : 1,\n      end       : this.chromosomeSize,\n      isStatic  : true,\n      tracks    : [\n        Genoverse.Track.Chromosome.extend({\n          name          : 'Chr ' + this.chr,\n          height        : 20,\n          featureHeight : 20,\n          border        : false,\n          legend        : false,\n          unsortable    : true,\n\n          click: function (e) {\n            var offset = this.container.parent().offset().left;\n            var x      = e.pageX - offset;\n            var f      = this.featurePositions.search({ x: x, y: 1, w: 1, h: 1 })[0];\n\n            if (f) {\n              if (e.type === 'mouseup') {\n                if (!this.browser.parent.isStatic) {\n                  this.browser.parent.moveTo(f.chr, f.start, f.end, true);\n                }\n              } else if (this.hoverFeature !== f && !this.browser.hideTooltip) {\n                this.container.tipsy('hide');\n\n                if (f.label) {\n                  var left = offset + f.position[this.scale].start + f.position[this.scale].width / 2;\n                  this.container.attr('title', f.label[0]).tipsy({ trigger: 'manual', container: 'body' }).tipsy('show').data('tipsy').$tip.css('left', function () { return left - $(this).width() / 2; });\n                }\n\n                this.hoverFeature = f;\n              }\n            }\n          },\n\n          addUserEventHandlers: function () {\n            var track = this;\n\n            this.base();\n\n            this.container.on({\n              mousemove : function (e) { track.click(e); },\n              mouseout  : function (e) {\n                if (track.browser.viewPoint.is(e.relatedTarget) || track.browser.viewPoint.find(e.relatedTarget).length) {\n                  return true;\n                }\n\n                track.container.tipsy('hide');\n                track.hoverFeature = false;\n              }\n            }, '.gv-image-container');\n\n            // Don't allow zooming in and out on the karyotype image\n            this.container.on('mousewheel', '.gv-image-container, .gv-selector', function (e) {\n              e.stopPropagation();\n            });\n          },\n\n          afterSetName: function () {\n            this.label.css('lineHeight', this.label.height() + 'px');\n          }\n        })\n      ],\n\n      addUserEventHandlers: $.noop,\n\n      afterInit: function () {\n        this.updatePosition();\n        this.viewPoint.fadeIn();\n      },\n\n      afterAddTracks: function () {\n        this.track = this.tracks[0];\n      },\n\n      afterAddDomElements: function () {\n        var karyotype = this;\n        var parent    = this.parent;\n\n        function hideTooltip() {\n          karyotype.hideTooltip = true;\n          karyotype.track.prop('container').tipsy('hide');\n        }\n\n        function updateLocation(e, ui) {\n          karyotype.hideTooltip = false;\n\n          if (e.type === 'resizestop') {\n            var axis = $(this).data('ui-resizable').axis;\n\n            if ((axis === 'e' && parent.end === karyotype.chromosomeSize) || (axis === 'w' && parent.start === 1)) {\n              return; // Don't change location if the position didn't change (dragging off the right or left edges)\n            }\n          }\n\n          var scale = karyotype.chromosomeSize / karyotype.width;\n          var start = Math.max(Math.floor(ui.position.left * scale), 1);\n          var end   = e.type === 'dragstop' ? start + parent.length - 1 : Math.floor(ui.helper.outerWidth(true) * scale) + start;\n\n          parent.moveTo(karyotype.chr, start, end, true, e.type === 'dragstop');\n        }\n\n        if (parent.karyotypeLabel === false) {\n          this.labelContainer.remove();\n          this.labelContainer = $();\n          container.addClass('gv-no-label');\n        }\n\n        this.viewPoint = $('<div class=\"gv-karyotype-viewpoint-wrapper\"><div class=\"gv-karyotype-viewpoint\"></div></div>').appendTo(container).children().on({\n          mousemove : function (e) { karyotype.track.controller.click(e); },\n          mouseout  : function (e) {\n            var el = $(e.relatedTarget);\n\n            if (karyotype.viewPoint.is(el) || karyotype.viewPoint.find(el).length || (el.prop('nodeName') === 'IMG' && el.parent().is(karyotype.track.prop('imgContainers')[0]))) {\n              return true;\n            }\n\n            karyotype.track.prop('container').tipsy('hide');\n            karyotype.track.prop('hoverFeature', false);\n          }\n        });\n\n        if (!parent.isStatic) {\n          this.viewPoint.draggable({\n            axis        : 'x',\n            containment : this.wrapper,\n            start       : hideTooltip,\n            stop        : updateLocation\n          }).resizable({\n            handles     : 'e, w',\n            containment : 'parent',\n            start       : hideTooltip,\n            stop        : updateLocation,\n            resize      : function (e, ui) {\n              ui.element.css('left', Math.max(0, ui.position.left));\n\n              if (ui.position.left > 0) {\n                ui.element.width(Math.min(ui.size.width, ui.element.parent().width() - ui.position.left));\n              } else {\n                ui.element.width(ui.size.width + ui.position.left);\n              }\n            }\n          });\n        }\n      },\n\n      updatePosition: function () {\n        var left  =  this.parent.start * this.scale;\n        var width = (this.parent.end   * this.scale) - left;\n\n        this.viewPoint.css({ left: left, width: width });\n      }\n    });\n\n    if (!this.loadedPlugins.controlPanel) {\n      $('<li class=\"gv-unsortable\">').height(function (i, h) {\n        return h + container.height();\n      }).prependTo(this.labelContainer);\n    }\n  }\n\n  function recreateKaryotype() {\n    var container = this.karyotype.container.parent();\n\n    this.karyotype.destroy();\n    container.remove();\n\n    createKaryotype.call(this);\n  }\n\n  this.on({\n    afterInit: createKaryotype,\n\n    afterSetRange: function () {\n      if (this.karyotype) {\n        this.karyotype.updatePosition();\n      }\n    },\n\n    afterSetWidth: recreateKaryotype,\n\n    afterMoveTo: function (chr) {\n      if (this.karyotype && this.karyotype.chr !== chr) {\n        recreateKaryotype.call(this);\n      }\n    }\n  });\n};\n","Genoverse.Plugins.resizer = function () {\n  this.on('afterSetMVC', 'tracks', function () {\n    if (this.prop('resizable') !== true) {\n      return;\n    }\n\n    var track      = this;\n    var controller = this.controller;\n    var resizer    = this.prop('resizer');\n    var height     = this.prop('height');\n\n    if (!resizer) {\n      resizer = this.prop('resizer', $('<div class=\"gv-resizer gv-static\"><div class=\"gv-handle\"></div></div>').appendTo(track.prop('container')).draggable({\n        axis  : 'y',\n        start : function () { $('body').addClass('gv-dragging'); },\n        stop  : function (e, ui) {\n          $('body').removeClass('gv-dragging');\n          controller.resize(track.prop('height') + ui.position.top - ui.originalPosition.top, true);\n          $(this).css({ top: 'auto', bottom: 0 }); // returns the resizer to the bottom of the container - needed when the track is resized to 0\n        }\n      }).on('click', function () {\n        var h = track.prop('fullVisibleHeight');\n\n        if (h) {\n          controller.resize(h, true);\n        }\n      }));\n    }\n\n    resizer.css({ width: this.width, left: 0 })[this.prop('autoHeight') ? 'hide' : 'show']();\n\n    if (!this.prop('autoHeight') && height - this.prop('margin') === this.prop('featureHeight')) {\n      controller.resize(height + resizer.height());\n      this.prop('initialHeight', this.prop('height'));\n    }\n  });\n\n  this.on('afterToggleExpander', 'tracks', function () {\n    var resizer = this.prop('resizer');\n\n    if (resizer) {\n      resizer[this.expander && this.expander.is(':visible') ? 'addClass' : 'removeClass']('gv-resizer-expander');\n    }\n  });\n};","// tipsy, facebook style tooltips for jquery\n// version 1.0.0a\n// (c) 2008-2010 jason frame [jason@onehackoranother.com]\n// released under the MIT license\n\nGenoverse.Plugins.tooltips = function () {\n  var browser = this;\n\n  function toggleTooltips(browser, tooltips, action) {\n    var offset = browser.superContainer.offset();\n\n    tooltips = tooltips || browser.superContainer.find('.gv-tooltip');\n    action   = action   || $(this).toggleClass('gv-active').hasClass('gv-active') ? 'show' : 'hide';\n\n    tooltips.each(function () {\n      $(this).tipsy(action).data('tipsy').$tip.appendTo(browser.superContainer).css({ marginTop: -offset.top, marginLeft: -offset.left });\n    });\n  }\n\n  function updateTooltips() {\n    var tooltips = $();\n\n    $.each([\n      [ browser.labelContainer.find('.gv-handle'), { gravity: 'w', fade: true, trigger: 'manual', fallback: 'Reorder tracks by dragging this handle' }],\n      [ browser.container.find('.gv-resizer'),     { gravity: 'n', fade: true, trigger: 'manual', fallback: 'Resize track by dragging this handle'   }]\n    ], function () {\n      var el = this[0].first();\n\n      if (!el.hasClass('gv-tooltip')) {\n        this[0].filter('.gv-tooltip').removeClass('gv-tooltip').tipsy('hide').removeData('tipsy');\n        el.tipsy(this[1]).addClass('gv-tooltip');\n      }\n\n      tooltips = tooltips.add(el);\n    });\n\n    if (browser.controlPanel.find('.gv-tooltips').hasClass('gv-active')) {\n      toggleTooltips(browser, tooltips, 'show');\n    }\n\n    return tooltips;\n  }\n\n  this.controls.push({\n    icon    : '<i class=\"fa fa-info-circle\"></i>',\n    'class' : 'gv-tooltips',\n    name    : 'Tooltips',\n    action  : toggleTooltips\n  });\n\n  this.on('afterInit', function () {\n    this.superContainer.find('.gv-panel-left  .gv-button-set[title]').tipsy({ gravity: 'w', fade: true, trigger: 'manual' }).addClass('gv-tooltip');\n    this.superContainer.find('.gv-panel-right .gv-button-set[title]').tipsy({ gravity: 'e', fade: true, trigger: 'manual' }).addClass('gv-tooltip');\n\n    // In order to force placement of this tooltip to be inside the superContainer boundaries, and just below the karyotype, create a hidden element, positioned where we want the tooltip to appear\n    $('<i class=\"gv-wrapper-tooltip\">').prependTo(this.wrapper).tipsy({\n      gravity  : 's',\n      fade     : true,\n      trigger  : 'manual',\n      fallback : 'Scroll left and right by dragging with your mouse, click on any feature in any track for more info'\n    }).addClass('gv-tooltip');\n\n    updateTooltips();\n  });\n\n  this.on('beforeSetWidth', function () {\n    this.controlPanel.find('.gv-tooltips.gv-active').trigger('click');\n  });\n\n  this.on('afterSortTracks', function () {\n    updateTooltips();\n  });\n\n  this.on('afterResize', 'tracks', function () {\n    updateTooltips();\n  });\n};\n\nGenoverse.Plugins.tooltips.requires = 'controlPanel';\n","Genoverse.Plugins.trackControls = function () {\n  var defaultControls = [\n    $('<a title=\"More info\" class=\"fa fa-info-circle\">').on('click', function () {\n      var track = $(this).data('track');\n      var menu  = track.prop('menus').filter('.gv-track-info');\n\n      if (!menu.length) {\n        menu = { title : track.name };\n        menu[track.prop('info') || ''] = '';\n\n        menu = track.prop('menus', track.prop('menus').add(track.browser.makeMenu(menu).addClass('gv-track-info')));\n      }\n\n      menu.show().position({ of: track.prop('container'), at: 'center top', my: 'center top', collision: 'none' });\n    }),\n\n    $([\n      '<a class=\"gv-height-toggle\">',\n        '<i class=\"fa fa-sort\"></i>',\n        '<i class=\"fa fa-sort-desc\"></i>',\n        '<i class=\"fa fa-sort-asc\"></i>',\n      '</a>'\n    ].join('')).on({\n      click: function () {\n        var track = $(this).data('track');\n        var height;\n\n        if (track.prop('autoHeight', !track.prop('autoHeight'))) {\n          track.prop('heightBeforeToggle', track.prop('height'));\n          height = track.prop('fullVisibleHeight');\n        } else {\n          height = track.prop('heightBeforeToggle') || track.prop('initialHeight');\n        }\n\n        $(this).trigger('toggleState');\n\n        track.controller.resize(height, true);\n      },\n      toggleState: function () { // custom event to set title and change the icon\n        var track      = $(this).data('track');\n        var autoHeight = track.prop('autoHeight');\n        var resizer    = track.prop('resizer');\n\n        this.title = autoHeight ? 'Set track to fixed height' : 'Set track to auto-adjust height';\n        $(this)[autoHeight ? 'addClass' : 'removeClass']('gv-auto-height');\n\n        if (resizer) {\n          resizer[autoHeight ? 'hide' : 'show']();\n        }\n      }\n    })\n  ];\n\n  var remove = $('<a title=\"Remove track\" class=\"fa fa-trash\">').on('click', function () {\n    $(this).data('track').remove();\n  });\n\n  var toggle = $([\n    '<a class=\"gv-track-controls-toggle\">',\n      '<span><i class=\"fa fa-angle-double-left\"></i><i class=\"fa fa-cog\"></i></span>',\n      '<span><i class=\"fa fa-angle-double-right\"></i></span>',\n    '</a>'\n  ].join('')).on('click', function () {\n    $(this).parent().toggleClass('gv-maximized');\n  });\n\n  this.on({\n    afterAddDomElements: function () {\n      var controls = this.prop('controls');\n\n      if (controls === 'off') {\n        return;\n      }\n\n      var defaultConfig = this.prop('defaultConfig');\n      var savedConfig   = this.browser.savedConfig ? this.browser.savedConfig[this.prop('id')] || {} : {};\n      var prop, el, j;\n\n      controls = (controls || []).concat(defaultControls, this.prop('removable') === false ? [] : remove);\n\n      this.trackControls = $('<div class=\"gv-track-controls\">').prependTo(this.container);\n\n      var controlsContainer = $('<div class=\"gv-track-controls-container\">').appendTo(this.trackControls);\n\n      for (var i = 0; i < controls.length; i++) {\n        if ($.isPlainObject(controls[i]) && controls[i].type) {\n          el = $('<' + controls[i].type + '>').data('control', controls[i].name);\n\n          if (controls[i].options) {\n            for (j = 0; j < controls[i].options.length; j++) {\n              el.append('<option value=\"' + controls[i].options[j].value + '\">' + controls[i].options[j].text + '</option>');\n            }\n          }\n        } else if (typeof controls[i] === 'string') {\n          el = $(controls[i]);\n        } else if (typeof controls[i] === 'object' && controls[i].constructor && controls[i] instanceof $) {\n          el = controls[i].clone(true);\n        }\n\n        el.data('track', this.track).appendTo(controlsContainer);\n\n        // TODO: other control types\n        if (el.is('select')) {\n          prop = el.data('control');\n\n          el.find('option[value=' + (savedConfig[prop] || defaultConfig[prop] || 'all') + ']').attr('selected', true).end().change(function () {\n            $(this).data('track').setConfig($(this).data('control'), this.value);\n          });\n        }\n      }\n\n      this.prop('heightToggler', controlsContainer.children('.gv-height-toggle').trigger('toggleState'));\n\n      var toggler = toggle.clone(true).data('track', this.track).appendTo(this.trackControls);\n\n      toggler.trigger('click');\n      this.minLabelHeight = Math.max(this.minLabelHeight, this.trackControls.outerHeight(true) + this.prop('margin'));\n      toggler.trigger('click');\n\n    },\n    afterResize: function () {\n      if (this.trackControls) {\n        this.trackControls[this.prop('height') < this.trackControls.outerHeight(true) ? 'hide' : 'show']();\n      }\n    },\n    afterResetHeight: function () {\n      var heightToggler = this.prop('heightToggler');\n\n      if (this.prop('resizable') === true && heightToggler) {\n        heightToggler[this.prop('autoHeight') ? 'addClass' : 'removeClass']('gv-auto-height');\n        heightToggler.trigger('toggleState');\n      }\n    },\n    afterSetMVC: function () {\n      var heightToggler = this.prop('heightToggler');\n\n      if (heightToggler) {\n        heightToggler.trigger('toggleState')[this.prop('resizable') === true ? 'removeClass' : 'addClass']('gv-hide');\n      }\n    }\n  }, 'tracks');\n};"]}